import{tb as e,ub as m}from"./chunk-JLMESEWM.js";import{f as l}from"./chunk-VOFKUGRY.js";var u={uniform:0,conformal:1,rigid:2,"rigid-motion":3,general:4},i=a=>a.map(t=>new e(t.x,t.y)),f=class{constructor(){this.transform=new m}calculateErrors(t,r){let s=t.length,n=r.length;if(s!==n)throw new Error(`The input length (${s}) is not the same as output length (${n})`);let o=[];return{rms:this.transform.calculateErrors(s,i(t),i(r),o),errorsOut:o}}flipX(t,r){return this.transform.flipX(t,r),this}flipY(t,r){return this.transform.flipY(t,r),this}initializeFromControlPoints(t,r,s,n){let o=r.length,h=s.length;if(o!==h)throw new Error(`The input length (${o}) is not the same as output length (${h})`);this.transform.initializeFromControlPoints(u[t],o,i(r),i(s),n?.transform)}isIdentity(){return this.transform.isIdentity()}rotate(t,r,s){let n=l(t);return r!=null&&s!=null?this.transform.rotateAngleAbout(n,new e(r,s)):this.transform.rotateAngle(n),this}scale(t,r){return this.transform.scale(t,r),this}setIdentity(){this.transform.setIdentity()}setSwapCoordinates(){return this.transform.setSwapCoordinates(),this}shear(t,r){return this.transform.shear(t,r),this}shift(t,r){return this.transform.shiftCoords(t,r),this}};export{f as a};
