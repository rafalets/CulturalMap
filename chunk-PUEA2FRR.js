import{a as R}from"./chunk-E62WHYYG.js";import{f as O}from"./chunk-QDTU3MWT.js";import{a as C}from"./chunk-3SDSCSDJ.js";import{g as S}from"./chunk-VOFKUGRY.js";function A(n,e,a,o){if(o==null||n.hasZ||(o=void 0),n.type==="point")return n.x+=e,n.y+=a,n.hasZ&&o!=null&&(n.z+=o),n;if(n.type==="multipoint"){let x=n.points;for(let s=0;s<x.length;s++)x[s]=b(x[s],e,a,o);return n}if(n.type==="extent")return n.xmin+=e,n.xmax+=e,n.ymin+=a,n.ymax+=a,o!=null&&(n.zmin??=0,n.zmin+=o,n.zmax??=0,n.zmax+=o),n;let m=R(n),t=n.type==="polyline"?n.paths:n.rings;for(let x=0;x<m.length;x++){let s=m[x];for(let i=0;i<s.length;i++)s[i]=b(s[i],e,a,o)}return"paths"in n?n.paths=t:n.rings=t,n}function I(n,e,a,o,m){let t=n.clone(),x=o.resolution;if(t.type==="point"){if(m)A(t,e*x,-a*x);else{let s=o.state.transform,i=o.state.inverseTransform,l=s[0]*t.x+s[2]*t.y+s[4],y=s[1]*t.x+s[3]*t.y+s[5];t.x=i[0]*(l+e)+i[2]*(y+a)+i[4],t.y=i[1]*(l+e)+i[3]*(y+a)+i[5]}return t}if(t.type==="multipoint"){if(m)A(t,e*x,-a*x);else{let s=t.points,i=o.state.transform,l=o.state.inverseTransform;for(let y=0;y<s.length;y++){let c=s[y],p=i[0]*c[0]+i[2]*c[1]+i[4],d=i[1]*c[0]+i[3]*c[1]+i[5],f=l[0]*(p+e)+l[2]*(d+a)+l[4],u=l[1]*(p+e)+l[3]*(d+a)+l[5];s[y]=q(c,f,u,void 0)}}return t}if(t.type==="extent"){if(m)A(t,e*x,-a*x);else{let s=o.state.transform,i=o.state.inverseTransform,l=s[0]*t.xmin+s[2]*t.ymin+s[4],y=s[1]*t.xmin+s[3]*t.ymin+s[5],c=s[0]*t.xmax+s[2]*t.ymax+s[4],p=s[1]*t.xmax+s[3]*t.ymax+s[5];t.xmin=i[0]*(l+e)+i[2]*(y+a)+i[4],t.ymin=i[1]*(l+e)+i[3]*(y+a)+i[5],t.xmax=i[0]*(c+e)+i[2]*(p+a)+i[4],t.ymax=i[1]*(c+e)+i[3]*(p+a)+i[5]}return t}if(m)A(t,e*x,-a*x);else{let s=R(t),i=t.type==="polyline"?t.paths:t.rings,l=o.state.transform,y=o.state.inverseTransform;for(let c=0;c<s.length;c++){let p=s[c];for(let d=0;d<p.length;d++){let f=p[d],u=l[0]*f[0]+l[2]*f[1]+l[4],h=l[1]*f[0]+l[3]*f[1]+l[5],v=y[0]*(u+e)+y[2]*(h+a)+y[4],g=y[1]*(u+e)+y[3]*(h+a)+y[5];p[d]=q(f,v,g,void 0)}}"paths"in t?t.paths=i:t.rings=i}return t}function J(n,e,a,o){if(n.type==="point"){let{x:f,y:u}=n,h=o?o[0]:f,v=o?o[1]:u,g=n.clone(),M=(f-h)*e+h,r=(u-v)*a+v;return g.x=M,g.y=r,g}if(n.type==="multipoint"){let f=R(n),u=C(),[h,v,g,M]=O(u,[f]),r=o?o[0]:(h+g)/2,z=o?o[1]:(M+v)/2,T=n.clone(),B=T.points;for(let Z=0;Z<B.length;Z++){let P=B[Z],[j,k]=P,w=(j-r)*e+r,D=(k-z)*a+z;B[Z]=q(P,w,D,void 0)}return T}if(n.type==="extent"){let{xmin:f,xmax:u,ymin:h,ymax:v}=n,g=o?o[0]:(f+u)/2,M=o?o[1]:(v+h)/2,r=n.clone();if(r.xmin=(f-g)*e+g,r.ymax=(v-M)*a+M,r.xmax=(u-g)*e+g,r.ymin=(h-M)*a+M,r.xmin>r.xmax){let z=r.xmin,T=r.xmax;r.xmin=T,r.xmax=z}if(r.ymin>r.ymax){let z=r.ymin,T=r.ymax;r.ymin=T,r.ymax=z}return r}let m=R(n),t=C(),[x,s,i,l]=O(t,m),y=o?o[0]:(x+i)/2,c=o?o[1]:(l+s)/2,p=n.clone(),d=p.type==="polyline"?p.paths:p.rings;for(let f=0;f<m.length;f++){let u=m[f];for(let h=0;h<u.length;h++){let v=u[h],[g,M]=v,r=(g-y)*e+y,z=(M-c)*a+c;d[f][h]=q(v,r,z,void 0)}}return"paths"in p?p.paths=d:p.rings=d,p}function K(n,e,a,o,m,t){let x=Math.sqrt((a-n)*(a-n)+(o-e)*(o-e));return Math.sqrt((m-n)*(m-n)+(t-e)*(t-e))/x}function L(n,e,a,o=!1){let m=Math.atan2(e.y-a.y,e.x-a.x)-Math.atan2(n.y-a.y,n.x-a.x),t=Math.atan2(Math.sin(m),Math.cos(m));return o?t:S(t)}function b(n,e,a,o){return q(n,n[0]+e,n[1]+a,n[2]!=null&&o!=null?n[2]+o:void 0)}function q(n,e,a,o){let m=[e,a];return n.length>2&&m.push(o??n[2]),n.length>3&&m.push(n[3]),m}export{I as a,J as b,K as c,L as d};
