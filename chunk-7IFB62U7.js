import{a as D,b as V,c as E,d as O}from"./chunk-ZTB5AXRT.js";import{a as C,h as F,i as x,p as v,q as I,s as J,t as U,u as g,v as j}from"./chunk-PRXMA6HV.js";import{a as h}from"./chunk-PWU2QHPV.js";import{p as T}from"./chunk-WUJRCGDY.js";import{z as b}from"./chunk-JR22Z7I2.js";import{a as d}from"./chunk-OGS2SUK5.js";import{a as y}from"./chunk-WNSGKHQ6.js";import{i as N}from"./chunk-QDTU3MWT.js";import{n as M}from"./chunk-NTVLK3P2.js";import{a as n}from"./chunk-HD52PWPC.js";import{a as S}from"./chunk-EIPVFA6F.js";import{f as m}from"./chunk-7EG726PT.js";import{d as i}from"./chunk-C7INQGWT.js";import{H as u}from"./chunk-WMHJC7XF.js";import{a as e}from"./chunk-QGVBCWUY.js";var A,l=A=class extends d.ClonableMixin(m){constructor(t){super(t),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(t){return new A({directionLineType:I.fromJSON(t.attributes.DirectionLineType),directionPointId:t.attributes.DirectionPointID,distance:t.attributes.Meters,duration:t.attributes.Minutes,fromLevel:t.attributes.FromLevel??null,geometry:t.geometry,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,symbol:t.symbol,toLevel:t.attributes.ToLevel??null})}toGraphic(){let t={ObjectID:this.objectId,DirectionLineType:this.directionLineType!=null?I.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return this.fromLevel!=null&&(t.FromLevel=this.fromLevel),this.toLevel!=null&&(t.ToLevel=this.toLevel),new h({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};l.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger"},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger"},{name:"FromLevel",alias:"From Level",type:"esriFieldTypeInteger"},{name:"Meters",alias:"Meters",type:"esriFieldTypeDouble"},{name:"Minutes",alias:"Minutes",type:"esriFieldTypeDouble"},{name:"ToLevel",alias:"To Level",type:"esriFieldTypeInteger"}],e([i({type:I.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:I.read}}})],l.prototype,"directionLineType",void 0),e([i({json:{read:{source:"attributes.DirectionPointID"}}})],l.prototype,"directionPointId",void 0),e([i({json:{read:{source:"attributes.Meters"}}})],l.prototype,"distance",void 0),e([i({json:{read:{source:"attributes.Minutes"}}})],l.prototype,"duration",void 0),e([i({json:{read:{source:"attributes.FromLevel"}}})],l.prototype,"fromLevel",void 0),e([i({type:N})],l.prototype,"geometry",void 0),e([i({json:{read:{source:"attributes.ObjectID"}}})],l.prototype,"objectId",void 0),e([i({type:T})],l.prototype,"popupTemplate",void 0),e([i({types:b})],l.prototype,"symbol",void 0),e([i({json:{read:{source:"attributes.ToLevel"}}})],l.prototype,"toLevel",void 0),e([i({readOnly:!0,json:{read:!1}})],l.prototype,"type",void 0),l=A=e([u("esri.rest.support.DirectionLine")],l);var $=l;var L,s=L=class extends d.ClonableMixin(m){constructor(t){super(t),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(t,o){return o.attributes.ArrivalTime!=null?new Date(o.attributes.ArrivalTime):null}static fromGraphic(t){return new L({alternateName:t.attributes.AlternateName??null,arrivalTime:t.attributes.ArrivalTime!=null?new Date(t.attributes.ArrivalTime):null,arrivalTimeOffset:t.attributes.ArrivalUTCOffset??null,azimuth:t.attributes.Azimuth??null,branchName:t.attributes.BranchName??null,directionPointType:v.fromJSON(t.attributes.DirectionPointType),displayText:t.attributes.DisplayText??null,exitName:t.attributes.ExitName??null,geometry:t.geometry,intersectingName:t.attributes.IntersectingName??null,level:t.attributes.Level??null,name:t.attributes.Name??null,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,sequence:t.attributes.Sequence,shortVoiceInstruction:t.attributes.ShortVoiceInstruction??null,stopId:t.attributes.StopID??null,symbol:t.symbol,towardName:t.attributes.TowardName??null,voiceInstruction:t.attributes.VoiceInstruction??null})}toGraphic(){let t={ObjectID:this.objectId,DirectionPointType:this.directionPointType!=null?v.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return this.alternateName!=null&&(t.AlternateName=this.alternateName),this.arrivalTime!=null&&(t.ArrivalTime=this.arrivalTime.getTime()),this.arrivalTimeOffset!=null&&(t.ArrivalUTCOffset=this.arrivalTimeOffset),this.azimuth!=null&&(t.Azimuth=this.azimuth),this.branchName!=null&&(t.BranchName=this.branchName),this.displayText!=null&&(t.DisplayText=this.displayText),this.exitName!=null&&(t.ExitName=this.exitName),this.intersectingName!=null&&(t.IntersectingName=this.intersectingName),this.level!=null&&(t.Level=this.level),this.name!=null&&(t.Name=this.name),this.shortVoiceInstruction!=null&&(t.ShortVoiceInstruction=this.shortVoiceInstruction),this.towardName!=null&&(t.TowardName=this.towardName),this.voiceInstruction!=null&&(t.VoiceInstruction=this.voiceInstruction),new h({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};s.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AlternateName",alias:"Alternative Name",type:"esriFieldTypeString"},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate"},{name:"ArrivalUTCOffset",alias:"Arrival Time Offset",type:"esriFieldTypeInteger"},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble"},{name:"BranchName",alias:"Branch Name",type:"esriFieldTypeString"},{name:"DirectionPointType",alias:"Directions Point Type",type:"esriFieldTypeInteger"},{name:"DisplayText",alias:"Display Text",type:"esriFieldTypeString"},{name:"ExitName",alias:"Exit Name",type:"esriFieldTypeString"},{name:"IntersectingName",alias:"Intersecting Name",type:"esriFieldTypeString"},{name:"Level",alias:"Level",type:"esriFieldTypeInteger"},{name:"Name",alias:"Name",type:"esriFieldTypeString"},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger"},{name:"ShortVoiceInstruction",alias:"Short Voice Instruction",type:"esriFieldTypeString"},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger"},{name:"TowardName",alias:"Toward Name",type:"esriFieldTypeString"},{name:"VoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString"}],e([i({json:{read:{source:"attributes.AlternateName"}}})],s.prototype,"alternateName",void 0),e([i({type:Date})],s.prototype,"arrivalTime",void 0),e([n("arrivalTime",["attributes.ArrivalTime"])],s.prototype,"readArrivalTime",null),e([i({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],s.prototype,"arrivalTimeOffset",void 0),e([i({json:{read:{source:"attributes.Azimuth"}}})],s.prototype,"azimuth",void 0),e([i({json:{read:{source:"attributes.BranchName"}}})],s.prototype,"branchName",void 0),e([i({type:v.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:v.read}}})],s.prototype,"directionPointType",void 0),e([i({json:{read:{source:"attributes.DisplayText"}}})],s.prototype,"displayText",void 0),e([i({json:{read:{source:"attributes.ExitName"}}})],s.prototype,"exitName",void 0),e([i({type:M})],s.prototype,"geometry",void 0),e([i({json:{read:{source:"attributes.IntersectingName"}}})],s.prototype,"intersectingName",void 0),e([i({json:{read:{source:"attributes.Level"}}})],s.prototype,"level",void 0),e([i({json:{read:{source:"attributes.Name"}}})],s.prototype,"name",void 0),e([i({json:{read:{source:"attributes.ObjectID"}}})],s.prototype,"objectId",void 0),e([i({type:T})],s.prototype,"popupTemplate",void 0),e([i({json:{read:{source:"attributes.Sequence"}}})],s.prototype,"sequence",void 0),e([i({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],s.prototype,"shortVoiceInstruction",void 0),e([i({json:{read:{source:"attributes.StopID"}}})],s.prototype,"stopId",void 0),e([i({types:b})],s.prototype,"symbol",void 0),e([i({json:{read:{source:"attributes.TowardName"}}})],s.prototype,"towardName",void 0),e([i({readOnly:!0,json:{read:!1}})],s.prototype,"type",void 0),e([i({json:{read:{source:"attributes.VoiceInstruction"}}})],s.prototype,"voiceInstruction",void 0),s=L=e([u("esri.rest.support.DirectionPoint")],s);var bt=s;var a=class extends d.ClonableMixin(m){constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(t,o){return o.id??o.itemId??null}readRestrictionAttributes(t,o){let{restrictionAttributeNames:c}=o;return c==null?null:c.map(f=>j.fromJSON(f))}writeRestrictionAttributes(t,o,c){t!=null&&(o[c]=t.map(f=>j.toJSON(f)))}};e([i({type:[Object],json:{write:!0}})],a.prototype,"attributeParameterValues",void 0),e([i({type:String,json:{write:!0}})],a.prototype,"description",void 0),e([y(J,{ignoreUnknown:!1})],a.prototype,"distanceAttributeName",void 0),e([i({type:String,json:{write:!0}})],a.prototype,"id",void 0),e([n("id",["id","itemId"])],a.prototype,"readId",null),e([y(g,{ignoreUnknown:!1})],a.prototype,"impedanceAttributeName",void 0),e([i({type:String,json:{write:!0}})],a.prototype,"name",void 0),e([i({type:[String],json:{write:!0}})],a.prototype,"restrictionAttributeNames",void 0),e([n("restrictionAttributeNames")],a.prototype,"readRestrictionAttributes",null),e([S("restrictionAttributeNames")],a.prototype,"writeRestrictionAttributes",null),e([i({type:Number,json:{write:{allowNull:!0}}})],a.prototype,"simplificationTolerance",void 0),e([y(C)],a.prototype,"simplificationToleranceUnits",void 0),e([y(U,{ignoreUnknown:!1})],a.prototype,"timeAttributeName",void 0),e([y(x)],a.prototype,"type",void 0),e([i({type:Boolean,json:{write:!0}})],a.prototype,"useHierarchy",void 0),e([y(F)],a.prototype,"uturnAtJunctions",void 0),a=e([u("esri.rest.support.TravelMode")],a);var P=a;var p=class extends m{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return t==null?null:t.map(o=>g.fromJSON(o))}writeAccumulateAttributes(t,o,c){t?.length&&(o[c]=t.map(f=>g.toJSON(f)))}};e([i({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],p.prototype,"accumulateAttributes",void 0),e([n("accumulateAttributes")],p.prototype,"readAccumulateAttributes",null),e([S("accumulateAttributes")],p.prototype,"writeAccumulateAttributes",null),e([i({type:String,json:{write:!0}})],p.prototype,"directionsLanguage",void 0),e([i({type:Boolean,json:{write:!0}})],p.prototype,"findBestSequence",void 0),e([i({type:Boolean,json:{write:!0}})],p.prototype,"preserveFirstStop",void 0),e([i({type:Boolean,json:{write:!0}})],p.prototype,"preserveLastStop",void 0),e([i({type:Boolean,json:{write:!0}})],p.prototype,"startTimeIsUTC",void 0),e([i({type:Boolean,json:{write:!0}})],p.prototype,"timeWindowsAreUTC",void 0),e([i({type:P,json:{write:!0}})],p.prototype,"travelMode",void 0),p=e([u("esri.rest.support.RouteSettings")],p);var B=p;var w,r=w=class extends d.ClonableMixin(m){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(t,o){return o.attributes.EndTimeUTC!=null?new Date(o.attributes.EndTimeUTC):null}readEndTimeOffset(t,o){return O(o.attributes.EndTime,o.attributes.EndTimeUTC)}readStartTime(t,o){return o.attributes.StartTimeUTC!=null?new Date(o.attributes.StartTimeUTC):null}readStartTimeOffset(t,o){return O(o.attributes.StartTime,o.attributes.StartTimeUTC)}readTotalCosts(t,o){return D(o.attributes,"Total_")}readTotalViolations(t,o){return D(o.attributes,"TotalViolation_")}readTotalWait(t,o){return D(o.attributes,"TotalWait_")}static fromGraphic(t){return new w({analysisSettings:t.attributes.AnalysisSettings!=null?B.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:t.attributes.EndTime!=null?new Date(t.attributes.EndTime):null,endTimeOffset:t.attributes.EndUTCOffset??null,geometry:t.geometry,messages:t.attributes.Messages!=null?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:t.attributes.ObjectID??t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:t.attributes.StartTime!=null?new Date(t.attributes.StartTime):null,startTimeOffset:t.attributes.StartUTCOffset??null,symbol:t.symbol,totalCosts:t.attributes.TotalCosts!=null?V(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:t.attributes.TotalMeters??null,totalDuration:t.attributes.TotalMinutes??null,totalLateDuration:t.attributes.TotalLateMinutes??null,totalWaitDuration:t.attributes.TotalWaitMinutes??null,version:t.attributes.Version})}toGraphic(){let t={ObjectID:this.objectId,AnalysisSettings:this.analysisSettings!=null?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:this.endTime!=null?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:this.messages!=null?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:this.startTime!=null?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:this.totalCosts!=null?JSON.stringify(E(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new h({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};r.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID"},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString"},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate"},{name:"EndUTCOffset",alias:"End Time Offset",type:"esriFieldTypeInteger"},{name:"Messages",alias:"Messages",type:"esriFieldTypeString"},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString"},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate"},{name:"StartUTCOffset",alias:"Start Time Offset",type:"esriFieldTypeInteger"},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString"},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble"},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble"},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble"},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble"},{name:"Version",alias:"Version",type:"esriFieldTypeString"}],e([i()],r.prototype,"analysisSettings",void 0),e([i({type:Date})],r.prototype,"endTime",void 0),e([n("endTime",["attributes.EndTimeUTC"])],r.prototype,"readEndTime",null),e([i()],r.prototype,"endTimeOffset",void 0),e([n("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],r.prototype,"readEndTimeOffset",null),e([i({json:{read:{source:"attributes.FirstStopID"}}})],r.prototype,"firstStopId",void 0),e([i({type:N})],r.prototype,"geometry",void 0),e([i({json:{read:{source:"attributes.LastStopID"}}})],r.prototype,"lastStopId",void 0),e([i()],r.prototype,"messages",void 0),e([i({json:{read:{source:"attributes.Name"}}})],r.prototype,"name",void 0),e([i({json:{read:{source:"attributes.ObjectID"}}})],r.prototype,"objectId",void 0),e([i({type:T})],r.prototype,"popupTemplate",void 0),e([i({type:Date})],r.prototype,"startTime",void 0),e([n("startTime",["attributes.StartTimeUTC"])],r.prototype,"readStartTime",null),e([i()],r.prototype,"startTimeOffset",void 0),e([n("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],r.prototype,"readStartTimeOffset",null),e([i({json:{read:{source:"attributes.StopCount"}}})],r.prototype,"stopCount",void 0),e([i({types:b})],r.prototype,"symbol",void 0),e([i()],r.prototype,"totalCosts",void 0),e([n("totalCosts",["attributes"])],r.prototype,"readTotalCosts",null),e([i()],r.prototype,"totalDistance",void 0),e([i()],r.prototype,"totalDuration",void 0),e([i()],r.prototype,"totalLateDuration",void 0),e([i()],r.prototype,"totalViolations",void 0),e([n("totalViolations",["attributes"])],r.prototype,"readTotalViolations",null),e([i()],r.prototype,"totalWait",void 0),e([n("totalWait",["attributes"])],r.prototype,"readTotalWait",null),e([i()],r.prototype,"totalWaitDuration",void 0),e([i({readOnly:!0,json:{read:!1}})],r.prototype,"type",void 0),e([i()],r.prototype,"version",void 0),r=w=e([u("esri.rest.support.RouteInfo")],r);var ne=r;export{P as a,$ as b,bt as c,B as d,ne as e};
