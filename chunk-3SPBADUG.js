import{a as u}from"./chunk-SRWH32FI.js";import{a as b}from"./chunk-NX3G3KDH.js";import{k as E,m as I,n as P,p as T,w as v}from"./chunk-GL53GSPS.js";import{a as x}from"./chunk-XPRVY6JT.js";import{h as z}from"./chunk-7N3ZKWML.js";import{i as S}from"./chunk-QDTU3MWT.js";import{n as w}from"./chunk-NTVLK3P2.js";import{t as R}from"./chunk-HHDFN2GK.js";import{a as d}from"./chunk-VTHXE323.js";function F({edits:e,geometry:r,mode:n,relationships:l,rotation:o,tag:i="",template:t}){let{definition:a}=t,s=r.x-a.origin.x,y=r.y-a.origin.y,Z=a.origin.hasZ&&r.hasZ?r.z-a.origin.z:0,m=D(a.origin.clone(),s,y,Z),p=new b().rotate(o,m.x,m.y);for(let M of a.parts){if(e.length>T&&n==="digitizing")break;let f=M.template;if(!P(f))throw new R("shared-template:template-not-loaded","A template part's template must be loaded before use");if(E(f)){let h=D(M.geometry,s,y,Z);p.isIdentity||(h=u(h,p)),v({edits:e,geometry:h,relationships:l,tag:i,template:f})}else if(I(f)){let h=[];if(F({edits:p.isIdentity?h:e,geometry:r,mode:n,relationships:l,rotation:0,tag:i,template:f}),!p.isIdentity)for(let g of h){let{geometry:c}=g.graphic;c&&c.type!=="mesh"&&(g.graphic.geometry=u(c,p),e.push(g))}}}return m}function D(e,r,n,l=0){if(!e)return null;if(e.type==="point")return new w(d(d({spatialReference:e.spatialReference,x:e.x+r,y:e.y+n},e.hasZ?{z:e.z+l}:{}),e.hasM?{m:e.m}:{}));if(e.type==="multipoint"){let o=[];if(e.hasZ&&e.hasM)for(let i=0;i<e.points.length;i++){let t=e.points[i];o.push([t[0]+r,t[1]+n,t[2]+l,t[3]])}else if(e.hasZ)for(let i=0;i<e.points.length;i++){let t=e.points[i];o.push([t[0]+r,t[1]+n,t[2]+l])}else if(e.hasM)for(let i=0;i<e.points.length;i++){let t=e.points[i];o.push([t[0]+r,t[1]+n,t[2]])}else for(let i=0;i<e.points.length;i++){let t=e.points[i];o.push([t[0]+r,t[1]+n])}return new x({spatialReference:e.spatialReference,hasZ:e.hasZ,hasM:e.hasM,points:o})}if(e.type==="polygon"){let o=new z({spatialReference:e.spatialReference,hasZ:e.hasZ,hasM:e.hasM});for(let i=0;i<e.rings.length;i++){let t=e.rings[i],a=[];if(e.hasZ&&e.hasM)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]+l,t[s][3]]);else if(e.hasM)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]]);else if(e.hasZ)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]+l]);else for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n]);o.addRing(a)}return o}if(e.type==="polyline"){let o=new S({spatialReference:e.spatialReference,hasZ:e.hasZ,hasM:e.hasM});for(let i=0;i<e.paths.length;i++){let t=e.paths[i],a=[];if(e.hasZ&&e.hasM)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]+l,t[s][3]]);else if(e.hasZ)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]+l]);else if(e.hasM)for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n,t[s][2]]);else for(let s=0;s<t.length;s++)a.push([t[s][0]+r,t[s][1]+n]);o.addPath(a)}return o}return e.clone()}export{F as a,D as b};
