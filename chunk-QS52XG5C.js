import{a as x,b as q}from"./chunk-2KE2TI42.js";import{b as B}from"./chunk-RZU6EEB3.js";import{b as I}from"./chunk-EUD3KSLO.js";import{b as G}from"./chunk-YNPFZOJD.js";import{b as $}from"./chunk-DCKTHYU4.js";import{D as A}from"./chunk-VGCEVKYN.js";import{a as w}from"./chunk-XC4BCVYU.js";import{a as se,g as ne}from"./chunk-XD6QSICT.js";import{a as M}from"./chunk-FTOLVNUN.js";import{p as C}from"./chunk-WUJRCGDY.js";import{c as z,d as j}from"./chunk-SCKV27CX.js";import{a as re}from"./chunk-FXCL7YYQ.js";import{D as oe}from"./chunk-JR22Z7I2.js";import{a as Z}from"./chunk-OGS2SUK5.js";import{b as ie}from"./chunk-YLZWDFCJ.js";import{a as D}from"./chunk-WNSGKHQ6.js";import{c as f}from"./chunk-OLOKUDVI.js";import{a as g}from"./chunk-HD52PWPC.js";import{a as R}from"./chunk-EIPVFA6F.js";import{a as ee,g as te}from"./chunk-LB5YQINJ.js";import{f as h}from"./chunk-7EG726PT.js";import{d as n}from"./chunk-C7INQGWT.js";import{H as m,f as T}from"./chunk-WMHJC7XF.js";import{a as o}from"./chunk-QGVBCWUY.js";import{b as u,i as V,r as X,t as Y}from"./chunk-HHDFN2GK.js";import{a as L}from"./chunk-47GHT6OF.js";var S=class extends Z.ClonableMixin(h){constructor(r){super(r),this.expression=null,this.title=null,this.returnType=null}};o([n({type:String,json:{write:!0}})],S.prototype,"expression",void 0),o([n({type:String,json:{write:!0}})],S.prototype,"title",void 0),o([n({type:String,json:{write:!0}})],S.prototype,"returnType",void 0),S=o([m("esri.layers.support.ExpressionInfo")],S);var _=S;var O,y=O=class extends h{constructor(r){super(r),this.isAutoGenerated=!1,this.name=null,this.alias=null,this.onStatisticField=null,this.onStatisticExpression=null,this.statisticType=null}clone(){return new O({name:this.name,alias:this.alias,isAutoGenerated:this.isAutoGenerated,onStatisticExpression:u(this.onStatisticExpression),onStatisticField:this.onStatisticField,statisticType:this.statisticType})}};o([n({type:Boolean,json:{write:!0}})],y.prototype,"isAutoGenerated",void 0),o([n({type:String,json:{write:!0}})],y.prototype,"name",void 0),o([n({type:String,json:{write:!0}})],y.prototype,"alias",void 0),o([n({type:String,json:{write:!0}})],y.prototype,"onStatisticField",void 0),o([n({type:_,json:{write:!0}})],y.prototype,"onStatisticExpression",void 0),o([n({type:String,json:{write:!0}})],y.prototype,"statisticType",void 0),y=O=o([m("esri.layers.support.AggregateField")],y);var d=y;var P,p=P=class extends x{constructor(r){super(r),this.type="binning",this.binType="geohash",this.fixedBinLevel=null,this.labelingInfo=null,this.labelsVisible=!0,this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.size=f("12px"),this.fields=[],this.renderer=null}writeFields(r,s,e){let t=r.filter(i=>i.statisticType!=="avg_angle").map(i=>i.toJSON());V(e,t,s)}readRenderer(r,s,e){let t=s.drawingInfo?.renderer;return t?I(t,s,e)??void 0:A(s,e)}clone(){return new P({fields:u(this.fields),fixedBinLevel:this.fixedBinLevel,labelingInfo:u(this.labelingInfo),labelsVisible:this.labelsVisible,maxScale:this.maxScale,popupEnabled:this.popupEnabled,popupTemplate:u(this.popupTemplate),renderer:u(this.renderer),binType:u(this.binType),size:this.size})}};o([D({binning:"binning"})],p.prototype,"type",void 0),o([D({geohash:"geohash",square:"square"}),n({type:["geohash","square"]})],p.prototype,"binType",void 0),o([n({type:Number,json:{write:!0}})],p.prototype,"fixedBinLevel",void 0),o([n({type:[G],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],p.prototype,"labelingInfo",void 0),o([n(j)],p.prototype,"labelsVisible",void 0),o([n({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],p.prototype,"maxScale",void 0),o([n(z)],p.prototype,"popupEnabled",void 0),o([n({type:C,json:{name:"popupInfo",write:!0}})],p.prototype,"popupTemplate",void 0),o([n({cast:r=>r==="auto"?r:T(f(r))})],p.prototype,"size",void 0),o([n({type:[d],json:{write:!0}})],p.prototype,"fields",void 0),o([R("fields")],p.prototype,"writeFields",null),o([n({types:$,json:{write:{target:"drawingInfo.renderer"}}})],p.prototype,"renderer",void 0),o([g("renderer",["drawingInfo.renderer"])],p.prototype,"readRenderer",null),p=P=o([m("esri.layers.support.FeatureReductionBinning")],p);var J=p;var U;function ae(r){return r.type==="simple"&&!r.visualVariables?.length}var l=U=class extends h{constructor(r){super(r),this.type="cluster",this.clusterRadius=f("80px"),this.clusterMinSize=f("12px"),this.clusterMaxSize=f("50px"),this.maxScale=0,this.popupEnabled=!0,this.popupTemplate=null,this.renderer=null,this.symbol=null,this.labelingInfo=null,this.labelsVisible=!0,this.fields=[]}readRenderer(r,s,e){let t=s.drawingInfo?.renderer;return t?.authoringInfo?.isAutoGenerated?null:t?ae(t)?null:I(t,s,e)??void 0:A(s,e)}readSymbol(r,s,e){let t=s.drawingInfo?.renderer;return t?.authoringInfo?.isAutoGenerated?null:t&&ae(t)?I(t,s,e)?.symbol:null}writeSymbol(r,s,e,t){let i=this.renderer?.authoringInfo?.isAutoGenerated;if(!this.renderer||i){let a=new w({symbol:r});s.drawingInfo={renderer:a.write({},t)}}}writeFields(r,s,e){let t=r.filter(i=>i.statisticType!=="avg_angle").map(i=>i.toJSON());V(e,t,s)}readFields(r,s,e){return r.filter(t=>!t.isAutoGenerated).map(t=>d.fromJSON(t))}clone(){return new U({clusterRadius:this.clusterRadius,clusterMinSize:this.clusterMinSize,clusterMaxSize:this.clusterMaxSize,labelingInfo:u(this.labelingInfo),labelsVisible:this.labelsVisible,fields:u(this.fields),maxScale:this.maxScale,renderer:u(this.renderer),symbol:u(this.symbol),popupEnabled:this.popupEnabled,popupTemplate:u(this.popupTemplate)})}};o([n({type:["cluster"],readOnly:!0,json:{write:!0}})],l.prototype,"type",void 0),o([n({cast:r=>r==="auto"?r:T(f(r)),json:{write:!0}})],l.prototype,"clusterRadius",void 0),o([n({type:Number,cast:f,json:{write:!0}})],l.prototype,"clusterMinSize",void 0),o([n({type:Number,cast:f,json:{write:!0}})],l.prototype,"clusterMaxSize",void 0),o([n({type:Number,json:{default:0,name:"visibilityInfo.maxScale"}})],l.prototype,"maxScale",void 0),o([n(z)],l.prototype,"popupEnabled",void 0),o([n({type:C,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],l.prototype,"popupTemplate",void 0),o([n({types:$,json:{write:{target:"drawingInfo.renderer"}}})],l.prototype,"renderer",void 0),o([g("renderer",["drawingInfo.renderer"])],l.prototype,"readRenderer",null),o([n({types:oe})],l.prototype,"symbol",void 0),o([g("symbol",["drawingInfo.renderer"])],l.prototype,"readSymbol",null),o([R("symbol")],l.prototype,"writeSymbol",null),o([n({type:[G],json:{read:{source:"drawingInfo.labelingInfo"},write:{target:"drawingInfo.labelingInfo"}}})],l.prototype,"labelingInfo",void 0),o([n(j)],l.prototype,"labelsVisible",void 0),o([n({type:[d],json:{write:!0}})],l.prototype,"fields",void 0),o([R("fields")],l.prototype,"writeFields",null),o([g("fields")],l.prototype,"readFields",null),l=U=o([m("esri.layers.support.FeatureReductionCluster")],l);var H=l;var le={key:"type",base:x,typeMap:{cluster:H,binning:J}},pe={types:{key:"type",base:x,typeMap:{selection:q,cluster:H,binning:J}},json:{name:"layerDefinition.featureReduction",write:{allowNull:!0},origins:{"web-map":{types:le},"portal-item":{types:le},"web-scene":{types:{key:"type",base:x,typeMap:{selection:q}},name:"layerDefinition.featureReduction",write:{layerContainerTypes:re}}}}};var me=()=>X.getLogger("esri.views.2d.layers.support.clusterUtils");L.add("esri-cluster-arcade-enabled",!0);var fe=L("esri-cluster-arcade-enabled"),ce=new Set(["simple-line","simple-fill","picture-fill"]);function K(r,s){let e=s.clone();if(!ye(e))return e;if(s.symbols.some(t=>ce.has(t.type))&&(e=new w({symbol:new ie})),e.authoringInfo||(e.authoringInfo=new se),e.authoringInfo.isAutoGenerated=!0,"visualVariables"in e){let t=(e.visualVariables||[]).filter(i=>i.valueExpression!=="$view.scale");t.forEach(i=>{i.type==="rotation"?i.field?i.field=b(r,i.field,"avg_angle","number"):i.valueExpression&&(i.field=E(r,i.valueExpression,"avg_angle","number"),i.valueExpression=null):i.normalizationField?(i.field=b(r,i.field,"avg_norm","number",i.normalizationField),i.normalizationField=null):i.field?i.field=b(r,i.field,"avg","number"):i.valueExpression&&(i.field=E(r,i.valueExpression,"avg","number"),i.valueExpression=null)}),e.visualVariables=t}switch(e.type){case"simple":break;case"pie-chart":for(let t of e.attributes)t.field?t.field=b(r,t.field,"sum","number"):t.valueExpression&&(t.field=E(r,t.valueExpression,"sum","number"),t.valueExpression=null);break;case"unique-value":e.field?e.field=b(r,e.field,"mode","string"):e.valueExpression&&(e.field=E(r,e.valueExpression,"mode","string"),e.valueExpression=null);break;case"class-breaks":e.normalizationField?(e.field=b(r,e.field,"avg_norm","number",e.normalizationField),e.normalizationField=null):e.field?e.field=b(r,e.field,"avg","number"):e.valueExpression&&(e.field=E(r,e.valueExpression,"avg","number"),e.valueExpression=null)}return e}var ye=r=>{let s=e=>me().error(new Y("Unsupported-renderer",e,{renderer:r}));if(!r)return!1;switch(r.type){case"unique-value":if(r.field2||r.field3)return s("FeatureReductionCluster does not support multi-field UniqueValueRenderers"),!1;break;case"class-breaks":if(r.normalizationField){let e=r.normalizationType;if(e!=="field")return s(`FeatureReductionCluster does not support a normalizationType of ${e}`),!1}break;case"simple":case"pie-chart":break;default:return s(`FeatureReductionCluster does not support renderers of type ${r.type}`),!1}if(!fe){if("valueExpression"in r&&r.valueExpression)return s("FeatureReductionCluster does not currently support renderer.valueExpression. Support will be added in a future release"),!1;if(("visualVariables"in r&&r.visualVariables||[]).some(e=>!(!("valueExpression"in e)||!e.valueExpression)))return s("FeatureReductionCluster does not currently support visualVariables with a valueExpression. Support will be added in a future release"),!1}return!0};function be(r,s,e){switch(r){case"sum":return`cluster_sum_${s}`;case"avg":case"avg_angle":return`cluster_avg_${s}`;case"mode":return`cluster_type_${s}`;case"avg_norm":{let t=e,i="field",a=s.toLowerCase()+",norm:"+i+","+t.toLowerCase();return"cluster_avg_"+B(a)}}}function E(r,s,e,t){let i=B(s),a=e==="mode"?`cluster_type_${i}`:e==="sum"?`cluster_sum_${i}`:`cluster_avg_${i}`;return r.some(c=>c.name===a)||r.push(new d({name:a,isAutoGenerated:!0,onStatisticExpression:new _({expression:s,returnType:t}),statisticType:e})),a}function b(r,s,e,t,i){if(s==="cluster_count"||r.some(c=>c.name===s))return s;let a=be(e,s,i);return r.some(c=>c.name===a)||(e==="avg_norm"?r.push(new d({name:a,isAutoGenerated:!0,onStatisticExpression:new _({expression:`$feature.${s} / $feature.${i}`,returnType:t}),statisticType:"avg"})):r.push(new d({name:a,isAutoGenerated:!0,onStatisticField:s,statisticType:e}))),a}var Zt=r=>{let s=class extends r{constructor(...e){super(...e),this.addHandles(ee(()=>this.renderer,()=>{if(this.featureReduction){let t=this._normalizeFeatureReduction(this.featureReduction);this._set("featureReduction",t)}},te))}set featureReduction(e){let t=this._normalizeFeatureReduction(e);this._set("featureReduction",t)}set renderer(e){}_withClusterVariable(e,t,i){let a=e.clone();return"visualVariables"in a&&(a.visualVariables||(a.visualVariables=[]),a.visualVariables.some(c=>c.type==="size")||a.visualVariables.push(new ne({field:"cluster_count",stops:[new M({value:1}),new M({useMinValue:!0,size:t}),new M({useMaxValue:!0,size:i})]}))),a}_normalizeFeatureReduction(e){if(e?.type!=="cluster")return e;let t=e.clone(),i=[new d({name:"cluster_count",alias:"cluster_count",isAutoGenerated:!0,statisticType:"count"})],a=(t.fields??[]).filter(v=>!v.isAutoGenerated),c=e.renderer&&!e.renderer.authoringInfo?.isAutoGenerated,{clusterMinSize:k,clusterMaxSize:N}=t;if(c){t.fields=[...i,...a];let v=this._withClusterVariable(t.renderer,k,N);return t.effectiveFeatureRenderer=v,t.effectiveClusterRenderer=v,t}if(e.symbol){if(t.fields=[...i,...a],t.renderer=null,!this.renderer)return t.effectiveFeatureRenderer=null,t.effectiveClusterRenderer=null,t;let v=K(i,this.renderer),F=this._withClusterVariable(v,k,N),ue="visualVariables"in F&&F.visualVariables?F.visualVariables:[],de=new w({symbol:e.symbol,visualVariables:ue});return t.fields=[...i,...a],t.effectiveFeatureRenderer=F,t.effectiveClusterRenderer=de,t}if(!this.renderer)return e;let Q=K(i,this.renderer);t.fields=[...i,...a],t.renderer=Q;let W=this._withClusterVariable(Q,k,N);return t.effectiveFeatureRenderer=W,t.effectiveClusterRenderer=W,t}};return o([n(pe)],s.prototype,"featureReduction",null),s=o([m("esri.layers.mixins.FeatureReductionLayer")],s),s};export{d as a,pe as b,Zt as c};
