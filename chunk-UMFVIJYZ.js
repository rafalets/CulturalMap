import{a as _e,d as gt,e as Te,f as Fe,g as xt}from"./chunk-7AVL35LM.js";import{a as se,b as Rt,d as bt}from"./chunk-HZW4TZLN.js";import{b as ie,d as ft,f as Se,g as ee,h as re,i as ne,j as ye,k as dt,l as pt,m as yt,n as ve}from"./chunk-BKBYZ6R7.js";import{a as xe,c as Le,d as Ae,e as it,f as be,h as rt,i as nt,j as Ie,k as st,l as we,m as lt,n as ct,o as ut,p as mt}from"./chunk-Y3QXXHTY.js";import{a as he,o as qe,p as Ve,s as je,t as Re,u as Ue,v as fe,w as $e,y as Qe,z as Xe}from"./chunk-QPRTRAGG.js";import{C as Ke,M as ot,_ as at,a as Oe,p as Ge}from"./chunk-OZ3HM6MC.js";import{A as Ze,B as et,C as tt,I as ht,r as de,w as Ye,x as pe}from"./chunk-XUJMOYBO.js";import{a as Ce}from"./chunk-3V2UIH2D.js";import{f as We}from"./chunk-E56W4PK4.js";import{a as Ee}from"./chunk-JEGXFID4.js";import{a as ze,b as Z}from"./chunk-BVXSAX5Q.js";import{e as me}from"./chunk-SCKV27CX.js";import{a as Me}from"./chunk-WNSGKHQ6.js";import{h as Ne}from"./chunk-7N3ZKWML.js";import{j as $}from"./chunk-I4M2OT5W.js";import{n as O}from"./chunk-NTVLK3P2.js";import{a as ue}from"./chunk-WMQNRNIU.js";import{a as He}from"./chunk-HD52PWPC.js";import{r as Be}from"./chunk-IG66NQHW.js";import{F as ce,x as le}from"./chunk-E57FTRWF.js";import{f as De}from"./chunk-7EG726PT.js";import{d as g}from"./chunk-C7INQGWT.js";import{H as Y,i as ae,r as Pe}from"./chunk-WMHJC7XF.js";import{z as Je}from"./chunk-D2LVMNOU.js";import{a as y}from"./chunk-QGVBCWUY.js";import{r as te,t as W}from"./chunk-HHDFN2GK.js";import{a as S,b as T,f as v}from"./chunk-VTHXE323.js";var It=8,kt=256,Pt=0,k=class extends De{constructor(){super(...arguments),this._tileFetchQueue=new Ce({concurrency:32,process:(t,i)=>this._fetchRawTile(t.pyramidLevel,t.row,t.col,T(S({},t.options),{signal:i}))}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}normalizeCtorArgs(t){return t?.ioConfig&&(t=T(S({},t),{ioConfig:S({resolution:null,bandIds:null,sampling:"closest",tileInfo:Z.create()},t.ioConfig)})),t}get _isGlobalWrappableSource(){let{rasterInfo:t}=this,i=ne(t.spatialReference);return i!=null&&t.extent.width>=i/2}get _hasNoneOrGCSShiftTransform(){let{transform:t}=this.rasterInfo;return t==null||t.type==="gcs-shift"}set rasterJobHandler(t){this._set("rasterJobHandler",t),this.datasetFormat==="Function"&&this.primaryRasters?.rasters?.forEach(i=>i.rasterJobHandler=t)}get rasterId(){return this.url||"rasterId-"+Pt++}set url(t){this._set("url",le(t,te.getLogger(this)))}open(t){return v(this,null,function*(){return this._openPromise??=ie().then(()=>this._open(t)),this._openPromise})}fetchTile(r,o,s){return v(this,arguments,function*(t,i,n,e={}){let a=e.tileInfo||this.rasterInfo.storageInfo.tileInfo,l=this.getTileExtentFromTileInfo(t,i,n,a);return e=S({noClip:!0},e),this.fetchPixels(l,a.size[0],a.size[1],e)})}identify(n){return v(this,arguments,function*(t,i={}){t=ae(O,t).clone().normalize();let{multidimensionalDefinition:e,timeExtent:r}=i,{rasterInfo:o}=this,{hasMultidimensionalTranspose:s,multidimensionalInfo:a}=o,{transposedVariableName:l}=i,c=a!=null&&s&&(r!=null||fe(e));c&&!l&&(l=e!=null&&e.length>0?e[0].variableName??void 0:a.variables[0].name,i=T(S({},i),{transposedVariableName:l})),i=this._getRequestOptionsWithSliceId(i);let{spatialReference:u,extent:m}=o,{datumTransformation:h}=i,f=Se(t,u,h);if(!m.intersects(f))return{location:f,value:null};if(o.transform!=null){let B=o.transform.inverseTransform(f);if(!o.nativeExtent.intersects(B))return{location:B,value:null};f=B}let d=0,R=l!=null&&a!=null&&o.hasMultidimensionalTranspose;if(this.datasetFormat==="Function"){let B=this.primaryRasters.rasters[0];if(R)return B.identify(f,i);let{pixelSize:K}=o,N=3,q=K.x*N/2,V=K.y*N/2,H=new $({xmin:f.x-q,xmax:f.x+q,ymin:f.y-V,ymax:f.y+V,spatialReference:u}),J={interpolation:"nearest",multidimensionalDefinition:e,sliceId:i.sliceId},{pixelBlock:F}=yield B.fetchPixels(H,N,N,J),{pixelBlock:P}=yield this.fetchPixels(H,N,N,J);if(F==null)return{location:f,value:null};let M=Math.floor(N*N*.5),j=!F.mask||F.mask[M]?F.pixels.map(A=>A[M]):null,G;return P!=null&&(G=!P.mask||P.mask[M]?P.pixels.map(A=>A[M]):void 0),{location:f,value:j,processedValue:G,pyramidLevel:0}}if(!R){if(i.srcResolution)d=ve(i.srcResolution,o,this.ioConfig.sampling).pyramidLevel;else if(d=yield this.computeBestPyramidLevelForLocation(t,i),d==null)return{location:f,value:null}}let x=this.identifyPixelLocation(f,d,null,R);if(x===null)return{location:f,value:null};let{row:p,col:b,rowOffset:I,colOffset:w,blockWidth:D}=x,_=l??i.sliceId,z=_e(this.rasterId,_),L=`${d}/${p}/${b}`,E=Te(z,null,L);E==null&&(E=this.fetchRawTile(d,p,b,i),Fe(z,null,L,E));let C=yield E;if(!C?.pixels?.length)return{location:f,value:null};let X=I*D+w;return this._processIdentifyResult(C,{srcLocation:f,position:X,pyramidLevel:d,useTransposedTile:!!R,requestSomeSlices:c,identifyOptions:i})})}fetchPixels(r,o,s){return v(this,arguments,function*(t,i,n,e={}){t=yt(t),e=this._getRequestOptionsWithSliceId(e);let{_hasNoneOrGCSShiftTransform:a}=this;if(e.requestRawData&&a)return this._fetchPixels(t,i,n,e);let l=ne(t.spatialReference),c=ye(t);if(l==null||c===0||c===1&&this._isGlobalWrappableSource&&a)return this._fetchPixels(t,i,n,e);if(c>=3)return{extent:t,pixelBlock:null};let u=[],{xmin:m,xmax:h}=t,f=Math.round(l/(h-m)*i),d=f-Math.round((l/2-m)/(h-m)*i),R=0,x=[];for(let w=0;w<=c;w++){let D=new $({xmin:w===0?m:-l/2,xmax:w===c?h-l*w:l/2,ymin:t.ymin,ymax:t.ymax,spatialReference:t.spatialReference}),_=w===0?f-d:w===c?i-R:f;R+=_,x.push(_);let z=e.disableWrapAround&&w>0?null:this._fetchPixels(D,_,n,e);u.push(z)}let p=(yield Promise.all(u)).map(w=>w?.pixelBlock),b=null,I={width:i,height:n};return this.rasterJobHandler?b=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:p,srcMosaicSize:I,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:x},e)).pixelBlock:b=de(p,I,{blockWidths:x}),{extent:t,srcExtent:ee(t,this.rasterInfo.spatialReference,e.datumTransformation),pixelBlock:b}})}fetchRawPixels(r,o,s){return v(this,arguments,function*(t,i,n,e={}){i={x:Math.floor(i.x),y:Math.floor(i.y)};let a=yield this._fetchRawTiles(t,i,n,e),{nativeExtent:l,nativePixelSize:c,storageInfo:u}=this.rasterInfo,m=2**t,h=c.x*m,f=c.y*m,d=new $({xmin:l.xmin+h*i.x,xmax:l.xmin+h*(i.x+n.width-1),ymin:l.ymax-f*(i.y+n.height-1),ymax:l.ymax-f*i.y,spatialReference:l.spatialReference});if(!a)return{extent:d,srcExtent:d,pixelBlock:null};let{pixelBlocks:R,mosaicSize:x}=a;if(R.length===1&&R[0]!=null&&R[0].width===n.width&&R[0].height===n.height)return{extent:d,srcExtent:d,pixelBlock:a.pixelBlocks[0]};let p=t>0?u.pyramidBlockWidth:u.blockWidth,b=t>0?u.pyramidBlockHeight:u.blockHeight,I={x:i.x%p,y:i.y%b},w;return this.rasterJobHandler?w=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:R,srcMosaicSize:x,destDimension:n,clipOffset:I,clipSize:n,coefs:null,sampleSpacing:null,interpolation:e.interpolation,alignmentInfo:null,blockWidths:null},e)).pixelBlock:w=de(R,x,{clipOffset:I,clipSize:n}),{extent:d,srcExtent:d,pixelBlock:w}})}fetchRawTile(t,i,n,e){throw new W("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(t){return ee(this.rasterInfo.extent,t)}decodePixelBlock(t,i){return!this.rasterJobHandler||i.useCanvas?Ke(t,i):this.rasterJobHandler.decode({data:t,options:i})}request(t,i,n=0){return v(this,null,function*(){let{customFetchParameters:e}=this.ioConfig,{range:r,query:o,headers:s}=i;n=n??i.retryCount??this.ioConfig.retryCount;let a=r?{Range:`bytes=${r.from}-${r.to}`}:null;try{return yield ce(t,T(S({},i),{query:S(S({},o),e),headers:S(S({},s),a)}))}catch(l){if(n>0)return n--,this.request(t,i,n);throw l}})}getSliceIndex(t){let{multidimensionalInfo:i}=this.rasterInfo;return i==null||t==null||t.length===0?null:Qe(t,i)}getTileExtentFromTileInfo(t,i,n,e){let r=e.lodAt(t);return this.getTileExtent({x:r.resolution,y:r.resolution},i,n,e.origin,e.spatialReference,e.size)}updateTileInfo(){let{storageInfo:t,spatialReference:i,extent:n,pixelSize:e}=this.rasterInfo,{pyramidResolutions:r}=t;if(!t.tileInfo){let o=[],s=t.maximumPyramidLevel||0,a=(e.x+e.y)/2,l=1/.0254*96*a;for(let u=0;u<=s&&(o.unshift(new ze({level:s-u,resolution:a,scale:l})),u!==s);u++)if(r){let m=(r[u].x+r[u].y)/2;l*=m/a,a=m}else a*=2,l*=2;let c=new O({x:n.xmin,y:n.ymax,spatialReference:i});t.tileInfo=new Z({origin:c,size:[t.blockWidth,t.blockHeight],spatialReference:i,lods:o}),t.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(t,i=512,n=512,e){let{width:r,height:o,nativeExtent:s,pixelSize:a,spatialReference:l}=t,c=new O({x:s.xmin,y:s.ymax,spatialReference:l});e==null&&(e=Math.max(0,Math.round(Math.log(Math.max(r,o))/Math.LN2-8)));let u=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[a],e);t.storageInfo=new Ge({blockWidth:i,blockHeight:n,pyramidBlockWidth:i,pyramidBlockHeight:n,origin:c,firstPyramidLevel:1,maximumPyramidLevel:e,blockBoundary:u})}computeBestPyramidLevelForLocation(n){return v(this,arguments,function*(t,i={}){return 0})}computeBlockBoundary(t,i,n,e,r,o=0,s=2){if(r.length===1&&o>0){r=[...r];let{x:u,y:m}=r[0];for(let h=0;h<o;h++)u*=s,m*=s,r.push({x:u,y:m})}let a=[],{x:l,y:c}=e;for(let u=0;u<r.length;u++){let{x:m,y:h}=r[u];a.push({minCol:Math.floor((t.xmin-l+.1*m)/i/m),maxCol:Math.floor((t.xmax-l-.1*m)/i/m),minRow:Math.floor((c-t.ymax+.1*h)/n/h),maxRow:Math.floor((c-t.ymin-.1*h)/n/h)})}return a}getPyramidPixelSize(t){let{nativePixelSize:i}=this.rasterInfo,{pyramidResolutions:n,pyramidScalingFactor:e}=this.rasterInfo.storageInfo;if(t===0)return i;if(n!=null&&n.length)return n[t-1];let r=e**t;return{x:i.x*r,y:i.y*r}}identifyPixelLocation(t,i,n,e){let{spatialReference:r,nativeExtent:o,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:a,origin:l,transposeInfo:c}=s,u=e&&c!=null?c.tileSize[0]:s.blockWidth,m=e&&c!=null?c.tileSize[1]:s.blockHeight,h=Se(t,r,n);if(!o.intersects(h)||i<0||i>a)return null;let f=this.getPyramidPixelSize(i),{x:d,y:R}=f,x=(l.y-h.y)/R/m,p=(h.x-l.x)/d/u,b=Math.min(m-1,Math.floor((x-Math.floor(x))*m)),I=Math.min(u-1,Math.floor((p-Math.floor(p))*u));return{pyramidLevel:i,row:Math.floor(x),col:Math.floor(p),rowOffset:b,colOffset:I,blockWidth:u,srcLocation:h}}getTileExtent(t,i,n,e,r,o){let[s,a]=o,l=e.x+n*s*t.x,c=l+s*t.x,u=e.y-i*a*t.y,m=u-a*t.y;return new $({xmin:l,xmax:c,ymin:m,ymax:u,spatialReference:r})}getBlockWidthHeight(t){return{blockWidth:t>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:t>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(t,i,n){let e=this.rasterInfo.storageInfo.blockBoundary[t];return!e||e.maxRow<i||e.maxCol<n||e.minRow>i||e.minCol>n}updateImageSpaceRasterInfo(t){let{pixelSize:i}=t,{width:n,height:e}=t,r=ue.WebMercator;t.spatialReference=r,t.extent=t.nativeExtent=new $({xmin:-.5,ymax:.5,xmax:n-.5,ymin:.5-e,spatialReference:r}),t.isPseudoSpatialReference=!0,t.transform=null,t.pixelSize=new O({x:1,y:1,spatialReference:r});let{extent:o,storageInfo:s}=t;if(s){s.origin=new O({x:o.xmin,y:o.ymax,spatialReference:r});let{pyramidResolutions:a,tileInfo:l}=s;if(a&&a.forEach(c=>{c.x/=i.x,c.y/=i.y}),l){l.origin=s.origin;let c=(t.nativePixelSize.x+t.nativePixelSize.y)/2;l.lods.forEach((u,m)=>{u.resolution=c*2**m,u.scale=96*u.resolution/.0254})}}}_fetchPixels(r,o,s){return v(this,arguments,function*(t,i,n,e={}){let a=ye(t);if(a>=2)return{extent:t,pixelBlock:null};let l=this._getSourceDataInfo(t,i,n,e),{pyramidLevel:c,srcResolution:u,srcExtent:m,srcWidth:h,srcHeight:f,ul:d}=l;if(h===0||f===0)return{extent:t,srcExtent:m,pixelBlock:null};let{rasterInfo:R}=this,x=R.transform,p=x?.type==="gcs-shift",b=ne(t.spatialReference)!=null;!p&&b||(a=ye(l.srcExtent,p));let I=yield this._fetchRawTiles(c,d,{width:h,height:f,wrapCount:a},e);if(!I)return{extent:t,srcExtent:m,pixelBlock:null};let w=R.storageInfo,D=c>0?w.pyramidBlockWidth:w.blockWidth,_=c>0?w.pyramidBlockHeight:w.blockHeight,{x:z,y:L}=R.pixelSize;if(c>0){let{pyramidResolutions:U,pyramidScalingFactor:Ft}=w;if(U!=null&&U[c-1])({x:z,y:L}=U[c-1]);else{let ke=Ft**c;z*=ke,L*=ke}}let E=R.spatialReference,C=new O({x:z,y:L,spatialReference:E}),X=D===h&&_===f&&d.x%D==0&&d.y%_==0,B=new O({x:(t.xmax-t.xmin)/i,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference}),K=!t.spatialReference.equals(E),N=E.isGeographic?1e-9:1e-4,{datumTransformation:q}=e;if(!K&&X&&I.pixelBlocks.length===1&&D===i&&_===n&&Jt(u,B,N))return{extent:t,srcExtent:m,srcTilePixelSize:C,pixelBlock:I.pixelBlocks[0]};let V=b&&ne(m.spatialReference)!=null&&this._hasNoneOrGCSShiftTransform,H=e.requestProjectedLocalDirections&&this.rasterInfo.dataType.startsWith("vector");H&&!this.rasterJobHandler&&(yield ie());let J=this.rasterJobHandler?yield this.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:B.toJSON(),datumTransformation:q,rasterTransform:x,hasWrapAround:a>0||V,isAdaptive:this.ioConfig.optimizeProjectionAccuracy!==!1,includeGCSGrid:H},e):pt({projectedExtent:t,srcBufferExtent:I.extent,pixelSize:B,datumTransformation:q,rasterTransform:x,hasWrapAround:a>0||V,isAdaptive:!1,includeGCSGrid:H}),F,P=!e.requestRawData,M={rows:J.spacing[0],cols:J.spacing[1]},j=this._hasNoneOrGCSShiftTransform?this._getRasterTileAlignmentInfo(c,I.extent.xmin):void 0,{pixelBlocks:G,mosaicSize:A,isPartiallyFilled:Tt}=I,oe=null;if(this.rasterJobHandler)({pixelBlock:F,localNorthDirections:oe}=yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:G,srcMosaicSize:A,destDimension:P?{width:i,height:n}:null,coefs:P?J.coefficients:null,sampleSpacing:P?M:null,projectDirections:H,gcsGrid:H?J.gcsGrid:null,isUV:this.rasterInfo.dataType==="vector-uv",interpolation:e.interpolation,alignmentInfo:j,blockWidths:null},e));else{let U=de(G,A,{alignmentInfo:j});F=P?pe(U,{width:i,height:n},J.coefficients,M,e.interpolation):U,H&&J.gcsGrid&&(oe=Ye({width:i,height:n},J.gcsGrid),F=et(F,this.rasterInfo.dataType,oe))}return e.requestRawData||H?{extent:t,srcExtent:m,srcTilePixelSize:C,pixelBlock:F,transformGrid:J,localNorthDirections:oe,isPartiallyFilled:Tt}:{extent:t,srcExtent:m,srcTilePixelSize:C,pixelBlock:F}})}_fetchRawTiles(t,i,n,e){return v(this,null,function*(){let{origin:r,blockBoundary:o}=this.rasterInfo.storageInfo,{blockWidth:s,blockHeight:a}=this.getBlockWidthHeight(t),{x:l,y:c}=i,{width:u,height:m,wrapCount:h}=n,f=this._getRasterTileAlignmentInfo(t,0);e.buffer&&(l-=e.buffer.cols,c-=e.buffer.rows,u+=2*e.buffer.cols,m+=2*e.buffer.rows);let d=0,R=0,x=0;h&&f!=null&&({worldColumnCountFromOrigin:R,originColumnOffset:x,rightPadding:d}=f,R*f.blockWidth-d>=l+u&&(d=0));let p=Math.floor(l/s),b=Math.floor(c/a),I=Math.floor((l+u+d-1)/s),w=Math.floor((c+m+d-1)/a),D=o[t];if(!D)return null;let{minRow:_,minCol:z,maxCol:L,maxRow:E}=D;if(h===0&&(w<_||I<z||b>E||p>L))return null;let C=new Array,X=!1,B=this.ioConfig.allowPartialFill==null?e.allowPartialFill:this.ioConfig.allowPartialFill;for(let F=b;F<=w;F++)for(let P=p;P<=I;P++){let M=P;if(!e.disableWrapAround&&h&&f!=null&&R<=P&&(M=P-R-x),F>=_&&M>=z&&E>=F&&L>=M){let j=this._tileFetchQueue.push({pyramidLevel:t,row:F,col:M,options:e},{signal:e.signal});B?C.push(new Promise(G=>{j.then(A=>G(A)).catch(()=>{X=!0,G(null)})})):C.push(j)}else C.push(Promise.resolve(null))}if(C.length===0)return null;let K=yield Promise.all(C),N={height:(w-b+1)*a,width:(I-p+1)*s},{spatialReference:q}=this.rasterInfo,V=this.getPyramidPixelSize(t),{x:H,y:J}=V;return{extent:new $({xmin:r.x+p*s*H,xmax:r.x+(I+1)*s*H,ymin:r.y-(w+1)*a*J,ymax:r.y-b*a*J,spatialReference:q}),pixelBlocks:K,mosaicSize:N,isPartiallyFilled:X}})}_fetchRawTile(t,i,n,e){let r=this.rasterInfo.storageInfo.blockBoundary[t];if(!r)return Promise.resolve(null);let{minRow:o,minCol:s,maxCol:a,maxRow:l}=r;if(i<o||n<s||i>l||n>a)return Promise.resolve(null);let c=_e(this.rasterId,e.sliceId),u=`${t}/${i}/${n}`,m=Te(c,e.registryId,u);if(m==null){let h=new AbortController;m=this.fetchRawTile(t,i,n,T(S({},e),{signal:h.signal})),Fe(c,e.registryId,u,m,h),m.catch(()=>xt(c,e.registryId,u))}return e.signal&&Je(e,()=>{gt(c,e.registryId,u)}),m}_computeMagDirValues(t){let{bandCount:i,dataType:n}=this.rasterInfo;if(!(i===2&&n==="vector-magdir"||n==="vector-uv")||t?.length!==2||!t[0]?.length)return null;let e=t[0].length;if(n==="vector-magdir"){let l=t[1].map(c=>(c+360)%360);return[t[0],l]}let[r,o]=t,s=[],a=[];for(let l=0;l<e;l++){let[c,u]=Ze([r[l],o[l]]);s.push(c),a.push(u)}return[s,a]}_getRasterTileAlignmentInfo(t,i){return this._rasterTileAlignmentInfo==null&&(this._rasterTileAlignmentInfo=dt(this.rasterInfo)),this._rasterTileAlignmentInfo.pyramidsInfo==null?null:S({startX:i,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform},this._rasterTileAlignmentInfo.pyramidsInfo[t])}_getSourceDataInfo(t,i,n,e={}){let r={datumTransformation:e.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};e.srcResolution&&(r.srcResolution=e.srcResolution,this._updateSourceDataInfo(t,r));let o=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:a,pyramidLevel:l}=r,c=s/i,u=a/n,m=l<o&&c*u>=16,h=l===o&&this._requireTooManySrcTiles(s,a,i,n);if(m||h||s===0||a===0){let f=new O({x:(t.xmax-t.xmin)/i,y:(t.ymax-t.ymin)/n,spatialReference:t.spatialReference}),d=ft(f,this.rasterInfo.spatialReference,t,r.datumTransformation),R=!d||e.srcResolution&&d.x+d.y<e.srcResolution.x+e.srcResolution.y;if(m&&e.srcResolution&&R){let x=Math.round(Math.log(Math.max(c,u))/Math.LN2)-1;if(o-l+3>=x){let p=2**x;d={x:e.srcResolution.x*p,y:e.srcResolution.y*p}}}d&&(r.srcResolution=d,this._updateSourceDataInfo(t,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,i,n)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(t,i,n,e){let{tileInfo:r}=this.rasterInfo.storageInfo,o=Math.ceil(t/r.size[0])*Math.ceil(i/r.size[1]),s=t/n,a=i/e,l=Math.max(1,(n+e)/1024);return o>=kt*l||s>It||a>It}_updateSourceDataInfo(t,i){i.srcWidth=0,i.srcHeight=0;let{rasterInfo:n}=this,e=n.spatialReference,{srcResolution:r,datumTransformation:o}=i,{pyramidLevel:s,pyramidResolution:a,excessiveReading:l}=ve(r,n,this.ioConfig.sampling);if(l)return;let c=i.srcExtent||ee(t,e,o);if(c==null)return;let u=n.transform;u&&(c=u.inverseTransform(c)),i.srcExtent=c;let{x:m,y:h}=n.storageInfo.origin,f=Math.floor((c.xmin-m)/a.x+.1),d=Math.floor((h-c.ymax)/a.y+.1),R=Math.floor((c.xmax-m)/a.x-.1),x=Math.floor((h-c.ymin)/a.y-.1),p=c.width<.1*a.x?0:R-f+1,b=c.height<.1*a.y?0:x-d+1;i.pyramidLevel=s,i.pyramidResolution=a,i.srcWidth=p,i.srcHeight=b,i.ul={x:f,y:d}}_getRequestOptionsWithSliceId(t){return this.rasterInfo.multidimensionalInfo!=null&&t.sliceId==null&&(t=T(S({},t),{sliceId:this.getSliceIndex(t.multidimensionalDefinition)})),t}_processIdentifyResult(t,i){let{srcLocation:n,position:e,pyramidLevel:r,useTransposedTile:o}=i,s=t.pixels[0].length/t.width/t.height;if(!(!t.mask||t.mask[e]))return{location:n,value:null};let{multidimensionalInfo:a}=this.rasterInfo;if(a==null||!o){let x=t.pixels.map(I=>I[e]),p={location:n,value:x,pyramidLevel:r},b=this._computeMagDirValues(x.map(I=>[I]));return b?.length&&(p.magdirValue=b.map(I=>I[0])),p}let l=t.pixels.map(x=>x.slice(e*s,e*s+s)),c=this._computeMagDirValues(l),{requestSomeSlices:u,identifyOptions:m}=i,h=qe(a,m.transposedVariableName);if(u){let x=Ve(h,m.multidimensionalDefinition,m.timeExtent);l=l.map(p=>x.map(b=>p[b])),c=c?.map(p=>x.map(b=>p[b])),h=x.map(p=>h[p])}let f=t.noDataValues||this.rasterInfo.noDataValue,d={pixels:l,pixelType:t.pixelType},R;return f!=null&&(We(d,f),R=d.mask),{location:n,value:null,dataSeries:h.map((x,p)=>{let b={value:R?.[p]===0?null:l.map(I=>I[p]),multidimensionalDefinition:x.multidimensionalDefinition.map(I=>new he(T(S({},I),{isSlice:!0})))};return c?.length&&(b.magdirValue=[c[0][p],c[1][p]]),b}),pyramidLevel:r}}};function Jt(t,i,n){return Math.abs(t.x-i.x)<n&&Math.abs(t.y-i.y)<n}y([g()],k.prototype,"_rasterTileAlignmentInfo",void 0),y([g()],k.prototype,"_tileFetchQueue",void 0),y([g({readOnly:!0})],k.prototype,"_isGlobalWrappableSource",null),y([g({readOnly:!0})],k.prototype,"_hasNoneOrGCSShiftTransform",null),y([g()],k.prototype,"_openPromise",void 0),y([g()],k.prototype,"rasterJobHandler",null),y([g({readOnly:!0})],k.prototype,"rasterId",null),y([g(me)],k.prototype,"url",null),y([g({type:String,json:{write:!0}})],k.prototype,"datasetName",void 0),y([g({type:String,json:{write:!0}})],k.prototype,"datasetFormat",void 0),y([g()],k.prototype,"hasUniqueSourceStorageInfo",void 0),y([g()],k.prototype,"rasterInfo",void 0),y([g()],k.prototype,"ioConfig",void 0),y([g()],k.prototype,"sourceJSON",void 0),k=y([Y("esri.layers.support.rasterDatasets.BaseRaster")],k);var wt=k;var Dt=40,Q=class extends wt{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}fetchPixels(r,o,s){return v(this,arguments,function*(t,i,n,e={}){let{rasters:a,rasterIds:l}=this.primaryRasters,c=!1,{interpolation:u}=e,m=this.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!e.requestRawData&&m&&(c=a.length===1&&!e.skipRasterFunction,e=T(S({},e),{interpolation:"bilinear",requestRawData:c}));let h=a.map(_=>_.fetchPixels(t,i,n,e)),f=yield Promise.all(h),d=f.map(_=>_.pixelBlock),R=c||e.requestRawData?f.map(_=>_.srcTilePixelSize):null;if(e.skipRasterFunction||d.every(_=>_==null))return f[0];let x=f.find(_=>_.pixelBlock!=null)?.extent??t,p=this.rasterJobHandler?yield this.rasterJobHandler.process({extent:x,primaryPixelBlocks:d,primaryPixelSizes:R,primaryRasterIds:l}):this.rasterFunction.process({extent:x,primaryPixelBlocks:d,primaryPixelSizes:R,primaryRasterIds:l}),{transformGrid:b}=f[0];if(!c||p==null||b==null){let _=e.noClip?null:this.getClippingGeometry(x.spatialReference);return e.noClip||e.requestRawData||p==null||!_||(p=yield se(p,x,_)),T(S({},f[0]),{pixelBlock:p})}let I={rows:b.spacing[0],cols:b.spacing[1]},w;this.rasterJobHandler?w=(yield this.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[p],srcMosaicSize:{width:p.width,height:p.height},destDimension:{width:i,height:n},coefs:b.coefficients,sampleSpacing:I,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:u,alignmentInfo:void 0,blockWidths:null},e)).pixelBlock:w=pe(p,{width:i,height:n},b.coefficients,I,u);let D=e.noClip?null:this.getClippingGeometry(t.spatialReference);return e.noClip||e.requestRawData||w==null||D==null||(w=yield se(w,t,D)),{extent:t,srcExtent:f[0].srcExtent,pixelBlock:w}})}getClippingGeometry(t){let i=this._clippingGeometry.get("0");if(!t||!i)return i;let n=Ct(t),e=this._clippingGeometry.get(n);return e!=null||(e=t.equals(i.spatialReference)?i:re(i,t),this._clippingGeometry.set(n,e)),e}_open(t){return v(this,null,function*(){let{rasterFunction:i}=this;this.primaryRasters?.rasters?.length?i.sourceRasters=this.primaryRasters.rasters:(this.primaryRasters=i.getPrimaryRasters(),this.rasterJobHandler&&this.primaryRasters.rasters?.forEach(c=>c.rasterJobHandler=this.rasterJobHandler));let{rasters:n,rasterIds:e}=this.primaryRasters,r=n.map(c=>c.rasterInfo?void 0:c.open(t));yield Promise.all(r);let o=n.map(({rasterInfo:c})=>c),s=i.bind({rasterInfos:o,rasterIds:e});if(i.rawSourceRasterInfos=o,!s.success||o.length===0)throw new W("raster-function:open",`cannot bind the function: ${s.error??""}`);let a=i.functionName==="Table"?i:i.functionArguments?.raster;a?.functionName==="Table"&&(i.rasterInfo.attributeTable=Ee.fromJSON(a.functionArguments.attributeTableAsRecordSet)),yield this.syncJobHandler();let l=o[0];this.hasUniqueSourceStorageInfo=o.length===1||o.slice(1).every(c=>Ht(c,l)),this.set("sourceJSON",n[0].sourceJSON),this.set("rasterInfo",i.rasterInfo),yield this._updateClipGeometry()})}syncJobHandler(){return v(this,null,function*(){return this.rasterJobHandler?.updateRasterFunction(this.rasterFunction)})}_updateClipGeometry(){return v(this,null,function*(){let t=this.rasterFunction.getClippingGeometries()[0],i=t?.clippingGeometry;if(i&&t.clippingType==="inside"){let{extent:n}=this.rasterInfo,{difference:e,densify:r}=yield import("./chunk-UOZE5XHP.js"),o=r(Ne.fromExtent(n),2*(n.width+n.height)/Dt);o=re(o,i.spatialReference),i=e(o,i)}this._clippingGeometry.clear(),i&&this._clippingGeometry.set("0",i)})}};y([g({type:String,json:{write:!0}})],Q.prototype,"datasetFormat",void 0),y([g()],Q.prototype,"tileType",void 0),y([g()],Q.prototype,"rasterFunction",void 0),y([g()],Q.prototype,"primaryRasters",void 0),Q=y([Y("esri.layers.support.rasterDatasets.FunctionRaster")],Q);var St=Q;function Ht(t,i){let{storageInfo:n,pixelSize:e,spatialReference:r,extent:o}=t,{storageInfo:s,pixelSize:a,spatialReference:l,extent:c}=i;return e.x===a.x&&e.y===a.y&&r.equals(l)&&o.equals(c)&&n.blockHeight===s.blockHeight&&n.blockWidth===s.blockWidth&&n.maximumPyramidLevel===s.maximumPyramidLevel}function Ct(t){return String(t.wkid??t.wkt??t.wkt2)}var lr=t=>{let i=class extends t{constructor(...e){super(...e),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation=null,this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster=e[0]?.raster?.datasetFormat==="Function"}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}set rasterFunction(e){e?.functionName?.toLowerCase()==="none"&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}set url(e){this._set("url",le(e,te.getLogger(this)))}get renderer(){if(this.type!=="imagery-tile")return this.internalRenderer;let{activePresetRendererName:e,presetRenderers:r}=this;return e?r?.find(({name:s})=>s===e)?.renderer.clone():this.internalRenderer}set renderer(e){this.type==="imagery-tile"&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){e==null&&this.rasterFunction==null?this._configDefaultRenderer("override"):(this._set("internalRenderer",e),this.updateRenderer())}readRenderer(e,r,o){let s=r?.layerDefinition?.drawingInfo?.renderer;return ut(s,o)||void 0}convertVectorFieldData(e,r){return v(this,null,function*(){let{serviceRasterInfo:o}=this;if(e==null||!o)return null;let s=this._rasterJobHandler.instance,a=o.dataType;return s?s.convertVectorFieldData({pixelBlock:e,dataType:a},r):tt(e,a)})}computeStatisticsHistograms(e,r){return v(this,null,function*(){yield this.load(r),e=ae(mt,e).clone();let{serviceRasterInfo:o}=this;if(o==null)throw new W("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");let{geometry:s}=e;if(s==null)throw new W("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let a=s,{spatialReference:l}=o;s.spatialReference.equals(l)||(yield ie(),a=s.type==="extent"?ee(s,l):re(s,l));let c=e.pixelSize??new O({x:o.pixelSize.x,y:o.pixelSize.y,spatialReference:l}),{extent:u,width:m,height:h}=Rt(o,a,c),f=yield this.fetchPixels(u,m,h,T(S({},r),{interpolation:"nearest"}));if(f.pixelBlock==null)throw new W("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");let d=yield se(f.pixelBlock,u,a),R=this._rasterJobHandler.instance;return R?R.computeStatisticsHistograms({pixelBlock:d},r):ot(d)})}createFlowMesh(e,r){return v(this,null,function*(){let o=this._rasterJobHandler.instance;return o?o.createFlowMesh(e,r):ht(e.meshType,e.simulationSettings,e.flowData,r.signal!=null?r.signal:new AbortController().signal)})}normalizeRasterFetchOptions(e){let{multidimensionalInfo:r}=this.serviceRasterInfo??{};if(r==null)return e;let o=je({rasterInfo:this.raster.rasterInfo,multidimensionalDefinition:e.multidimensionalDefinition||this.multidimensionalDefinition,timeExtent:e.timeExtent??this.timeExtent,multidimensionalSubset:this.multidimensionalSubset});return T(S({},e),{multidimensionalDefinition:o})}updateRasterFunction(){return v(this,null,function*(){return this.loaded&&this.type==="imagery-tile"&&(this.rasterFunction||this._cachedRasterFunctionJson)&&JSON.stringify(this.rasterFunction)!==JSON.stringify(this._cachedRasterFunctionJson)?(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this._rasterFunctionUpdatePromise=this._updateRasterFunction(),this._rasterFunctionUpdatePromise):this._rasterFunctionUpdatePromise})}updateRenderer(){return v(this,null,function*(){let{loaded:e,symbolizer:r}=this;if(!e||!r||!this.renderer)return;let{rasterInfo:o}=this.raster,s=Re(o,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),a=s?.name,l=we(T(S({},this.renderer.toJSON()),{variableName:a}));if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(l))return;let c=this._rasterJobHandler.instance;c&&(r.rasterInfo=Ie(o,a),r.rendererJSON=l,r.bind(),yield c.updateSymbolizer(r),this._cachedRendererJson=l)})}applyRenderer(e,r){return v(this,null,function*(){let o=e?.pixelBlock;if(!(o!=null&&o.pixels&&o.pixels.length>0))return null;let s;yield this.updateRenderer();let a=this._rasterJobHandler.instance,l=this.bandIds??[];return s=a?yield a.symbolize(T(S({},e),{simpleStretchParams:r,bandIds:l})):this.symbolizer.symbolize(T(S({},e),{simpleStretchParams:r,bandIds:l})),s})}getTileUrl(e,r,o){return this.raster.datasetFormat==="RasterTileServer"?`${this.url}/tile/${e}/${r}/${o}`:""}getCompatibleTileInfo(e,r,o=!1){if(!this.loaded||r==null)return null;if(o&&e.equals(this.spatialReference))return this.tileInfo;let s=Be(e);return Z.create({size:256,spatialReference:e,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:r.xmin,y:r.ymax}})}getCompatibleFullExtent(e){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null}fetchTile(a,l,c){return v(this,arguments,function*(e,r,o,s={}){if(n(this),s.requestAsImageElement){let m=this.getTileUrl(e,r,o);return ce(m,{responseType:"image",query:S(S({},this.refreshParameters),this.raster.ioConfig.customFetchParameters),signal:s.signal}).then(h=>h.data)}let{serviceRasterInfo:u}=this;if(u.multidimensionalInfo!=null&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null){let m=s.tileInfo||u.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,r,o,m),pixelBlock:null}}return yield this._initJobHandler(),yield this.updateRasterFunction(),this.renderer?.type==="raster-shaded-relief"&&(s=T(S({},s),{buffer:{cols:1,rows:1}})),this.raster.fetchTile(e,r,o,s)})}fetchPixels(a,l,c){return v(this,arguments,function*(e,r,o,s={}){return this.serviceRasterInfo.multidimensionalInfo!=null&&(s=this.normalizeRasterFetchOptions(s)).multidimensionalDefinition==null?{extent:e,pixelBlock:null}:(yield this._initJobHandler(),yield this.updateRasterFunction(),r=Math.round(r),o=Math.round(o),this.raster.fetchPixels(e,r,o,s))})}identify(o){return v(this,arguments,function*(e,r={}){yield this.load();let{raster:s,serviceRasterInfo:a}=this;if(a?.multidimensionalInfo!=null&&!(a.hasMultidimensionalTranspose&&(fe(r.multidimensionalDefinition)||r.transposedVariableName||r.timeExtent))&&(r=this.normalizeRasterFetchOptions(r)).multidimensionalDefinition==null)return{location:e,value:null};let l=this.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(e))throw new W("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return s.identify(e,r)})}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){let e=this.serviceRasterInfo?.multidimensionalInfo;if(e==null||this.serviceRasterInfo?.dataType!=="standard-time")return!1;let r=this.multidimensionalDefinition,o=r?.[0]?.variableName;return e.variables.some(s=>s.name===o&&(!r?.[0].dimensionName||s.dimensions.some(a=>a.name==="StdTime")))}getStandardTimeValue(e){return new Date(Xe(e)).toISOString()}getMultidimensionalSubsetVariables(e){let r=e??this.serviceRasterInfo?.multidimensionalInfo;return $e(this.multidimensionalSubset,r)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=Ue(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&this.raster.datasetFormat==="Function"&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;let e=new Ae;return this._rasterJobHandler.connectionPromise=e.initialize().then(()=>v(this,null,function*(){n(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,this.raster.datasetFormat==="Function"&&this.raster.syncJobHandler(),this.rasterFunction&&(yield this.updateRasterFunction().catch(()=>{})),this.renderer&&this.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(this.interpolation==null){n(this);let{raster:e}=this,r=nt(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",r)}}_configDefaultRenderer(e="no"){n(this);let{rasterInfo:r}=this.raster,o=Re(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=o?.name,a=it({variableName:s,rasterFunctionName:this.rasterFunction?.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&r.bandCount>1&&(this.bandIds=a?.bandIds??st(r)),!this.renderer||e==="override"){let m=rt(this.raster),h=a?.renderer??be(r,{bandIds:this.bandIds,variableName:s,rasterFunctionColorRamp:m}),f=r.statistics,d=f&&f.length>0?f[0]:null,R=d?.max??0,x=d?.min??0;this.raster.datasetFormat==="WCSServer"&&h.type==="raster-stretch"&&(R>1e24||x<-1e24)&&(h.dynamicRangeAdjustment=!0,h.customStatistics=null,h.stretchType==="none"&&(h.stretchType="min-max")),this.renderer=h}let l=we(T(S({},this.renderer.toJSON()),{variableName:s})),c=Ie(r,s);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new at({rendererJSON:l,rasterInfo:c});let u=this.symbolizer.bind();if(u.success){if(e==="auto"){let{colormap:m}=this.raster.rasterInfo,h=this.renderer;if(m!=null&&h.type==="raster-colormap"){let f=be(this.raster.rasterInfo);JSON.stringify(f)!==JSON.stringify(h)&&this._configDefaultRenderer("override")}else if(h.type==="raster-stretch"){let f=this.bandIds?.length,d=h.customStatistics?.length;!h.dynamicRangeAdjustment&&d&&f&&d!==f&&this._configDefaultRenderer("override")}}}else te.getLogger(this).warn("imagery-tile-mixin",u.error||"The given renderer is not supported by the layer."),e==="auto"&&this._configDefaultRenderer("override")}_updateRasterFunction(){return v(this,null,function*(){if(this._isConstructedFromFunctionRaster&&this.raster.datasetFormat==="Function"){let u=this.raster.rasterFunction.toJSON();return void(!this.rasterFunction&&u&&this._set("rasterFunction",xe.fromJSON(u)))}let e,r=this.raster,o=!1;r.datasetFormat==="Function"?(e=r.primaryRasters.rasters,r=e[0],o=!0):e=[r];let{rasterFunction:s}=this;if(s){let u={raster:r};e.length>1&&e.forEach(f=>u[f.url]=f);let m=bt(s.functionDefinition?.toJSON()??s.toJSON(),u),h=new St({rasterFunction:m});h.rasterJobHandler=this._rasterJobHandler.instance,yield h.open(),this.raster=h}else this.raster=r,yield r.open();if(this._cachedRendererJson=null,!o&&!s)return;let{bandIds:a}=this,{bandCount:l}=this.raster.rasterInfo,c=a?.length?a.some(u=>u>=l):l>=3;a&&(c||this.renderer&&this.renderer.type!=="raster-stretch")&&this._set("bandIds",null),this._configDefaultRenderer("auto")})}};function n(e){if(!e.raster||!e.serviceRasterInfo)throw new W("imagery-tile","no raster")}return y([g({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),y([g({clonable:!1})],i.prototype,"_cachedRasterFunctionJson",void 0),y([g({clonable:!1})],i.prototype,"_compatibleFullExtent",void 0),y([g({clonable:!1})],i.prototype,"_isConstructedFromFunctionRaster",void 0),y([g({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),y([g({clonable:!1})],i.prototype,"_rasterFunctionUpdatePromise",void 0),y([g({type:[Pe],json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.bandIds?.join(",")!=="0,1,2"}}}}})],i.prototype,"bandIds",void 0),y([g({json:{origins:{service:{read:{source:"copyrightText"}}}}})],i.prototype,"copyright",void 0),y([g({json:{read:!1}})],i.prototype,"fullExtent",null),y([g({json:{write:{overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"||this.interpolation!=="bilinear"}}}}}),Me(Oe)],i.prototype,"interpolation",void 0),y([g()],i.prototype,"ioConfig",void 0),y([g({type:[he],json:{write:!0}})],i.prototype,"multidimensionalDefinition",null),y([g({type:Le,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),y([g()],i.prototype,"raster",void 0),y([g({type:xe})],i.prototype,"rasterFunction",null),y([g()],i.prototype,"serviceRasterInfo",void 0),y([g()],i.prototype,"sourceJSON",void 0),y([g({readOnly:!0,type:ue,json:{read:!1}})],i.prototype,"spatialReference",void 0),y([g({type:Z})],i.prototype,"tileInfo",void 0),y([g(me)],i.prototype,"url",null),y([g()],i.prototype,"renderer",null),y([g({types:lt,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){let e=this.renderer?.type==="raster-stretch"&&this.renderer.stretchType==="none"&&!this.renderer.useGamma;return{enabled:!this.loaded||this.raster.tileType==="Raster"||!e}}},origins:{"web-scene":{types:ct,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),y([He("internalRenderer")],i.prototype,"readRenderer",null),y([g({clonable:!1})],i.prototype,"symbolizer",void 0),i=y([Y("esri.layers.mixins.ImageryTileMixin")],i),i};function ge(t,i){if(!t||!i)return[];let n=i;i.includes("/")?(n=i.slice(0,i.indexOf("/")),i=i.slice(i.indexOf("/")+1)):i="";let e=[];if(i){let o=ge(t,n);for(let s=0;s<o.length;s++)ge(o[s],i).forEach(a=>e.push(a));return e}let r=t.getElementsByTagNameNS("*",n);if(!r||r.length===0)return[];for(let o=0;o<r.length;o++)e.push(r[o]||r.item(o));return e}function vt(t,i){if(!t||!i)return null;let n=i;i.includes("/")?(n=i.slice(0,i.indexOf("/")),i=i.slice(i.indexOf("/")+1)):i="";let e=ge(t,n);return e.length>0?i?vt(e[0],i):e[0]:null}function _t(t,i=null){let n=i?vt(t,i):t,e;return n?(e=n.textContent||n.nodeValue,e?e.trim():null):null}function Bt(t,i){let n=ge(t,i),e=[],r;for(let o=0;o<n.length;o++)r=n[o].textContent||n[o].nodeValue,r&&(r=r.trim(),r!==""&&e.push(r));return e}function hr(t,i=null){return _t(t,i)?.split(" ").map(e=>Number(e))??[]}function fr(t,i){return Bt(t,i).map(n=>Number(n))}function dr(t,i){let n=_t(t,i);return Number(n)}function pr(t,i){let n=t?.nodeName?.toLowerCase(),e=i.toLowerCase();return n.slice(n.lastIndexOf(":")+1)===e}function yr(t){return t.nodeName.slice(t.nodeName.lastIndexOf(":")+1)}export{wt as a,St as b,lr as c,ge as d,vt as e,_t as f,Bt as g,hr as h,fr as i,dr as j,pr as k,yr as l};
