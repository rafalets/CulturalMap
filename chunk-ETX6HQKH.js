import{a as i}from"./chunk-FYZRIMPP.js";import{a as r}from"./chunk-JAPGPEA6.js";function c(e){return r.extendedSpatialReferenceInfo(e)}function f(e,n,t){return r.clip(i,e,n,t)}function l(e,n,t){return r.cut(i,e,n,t)}function p(e,n,t){return r.contains(i,e,n,t)}function d(e,n,t){return r.crosses(i,e,n,t)}function g(e,n,t,a){return r.distance(i,e,n,t,a)}function m(e,n,t){return r.equals(i,e,n,t)}function h(e,n,t){return r.intersects(i,e,n,t)}function x(e,n,t){return r.touches(i,e,n,t)}function y(e,n,t){return r.within(i,e,n,t)}function S(e,n,t){return r.disjoint(i,e,n,t)}function w(e,n,t){return r.overlaps(i,e,n,t)}function A(e,n,t,a){return r.relate(i,e,n,t,a)}function D(e,n){return r.isSimple(i,e,n)}function R(e,n){return r.simplify(i,e,n)}function E(e,n,t=!1){return r.convexHull(i,e,n,t)}function L(e,n,t){return r.difference(i,e,n,t)}function T(e,n,t){return r.symmetricDifference(i,e,n,t)}function b(e,n,t){return r.intersect(i,e,n,t)}function j(e,n,t=null){return r.union(i,e,n,t)}function v(e,n,t,a,u,o,s){return r.offset(i,e,n,t,a,u,o,s)}function z(e,n,t,a,u=!1){return r.buffer(i,e,n,t,a,u)}function I(e,n,t,a,u,o,s){return r.geodesicBuffer(i,e,n,t,a,u,o,s)}function V(e,n,t,a=!0){return r.nearestCoordinate(i,e,n,t,a)}function H(e,n,t){return r.nearestVertex(i,e,n,t)}function _(e,n,t,a,u){return r.nearestVertices(i,e,n,t,a,u)}function q(e,n,t,a){if(n==null||a==null)throw new Error("Illegal Argument Exception");let u=r.rotate(n,t,a);return u.spatialReference=e,u}function B(e,n,t){if(n==null||t==null)throw new Error("Illegal Argument Exception");let a=r.flipHorizontal(n,t);return a.spatialReference=e,a}function C(e,n,t){if(n==null||t==null)throw new Error("Illegal Argument Exception");let a=r.flipVertical(n,t);return a.spatialReference=e,a}function P(e,n,t,a,u){return r.generalize(i,e,n,t,a,u)}function G(e,n,t,a){return r.densify(i,e,n,t,a)}function M(e,n,t,a,u=0){return r.geodesicDensify(i,e,n,t,a,u)}function O(e,n,t){return r.planarArea(i,e,n,t)}function k(e,n,t){return r.planarLength(i,e,n,t)}function F(e,n,t,a){return r.geodesicArea(i,e,n,t,a)}function J(e,n,t,a){return r.geodesicLength(i,e,n,t,a)}function K(e,n,t){return n==null||t==null?[]:r.intersectLinesToPoints(i,e,n,t)}function N(e,n){r.changeDefaultSpatialReferenceTolerance(e,n)}function Q(e){r.clearDefaultSpatialReferenceTolerance(e)}var X=Object.freeze(Object.defineProperty({__proto__:null,buffer:z,changeDefaultSpatialReferenceTolerance:N,clearDefaultSpatialReferenceTolerance:Q,clip:f,contains:p,convexHull:E,crosses:d,cut:l,densify:G,difference:L,disjoint:S,distance:g,equals:m,extendedSpatialReferenceInfo:c,flipHorizontal:B,flipVertical:C,generalize:P,geodesicArea:F,geodesicBuffer:I,geodesicDensify:M,geodesicLength:J,intersect:b,intersectLinesToPoints:K,intersects:h,isSimple:D,nearestCoordinate:V,nearestVertex:H,nearestVertices:_,offset:v,overlaps:w,planarArea:O,planarLength:k,relate:A,rotate:q,simplify:R,symmetricDifference:T,touches:x,union:j,within:y},Symbol.toStringTag,{value:"Module"}));export{c as a,f as b,l as c,p as d,d as e,g as f,m as g,h,x as i,y as j,S as k,w as l,A as m,D as n,R as o,E as p,L as q,T as r,b as s,j as t,v as u,z as v,I as w,V as x,H as y,_ as z,q as A,B,C,P as D,G as E,M as F,O as G,k as H,F as I,J,K,N as L,Q as M,X as N};
