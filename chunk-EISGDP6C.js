import{e as S}from"./chunk-G3YWARR2.js";import{a as R}from"./chunk-N7XX6O7L.js";import{a as h,b as g}from"./chunk-ZWYEIB75.js";import{a as x}from"./chunk-RWCIDBNQ.js";import{d as b,g as G}from"./chunk-5SSISWTF.js";import{h as f}from"./chunk-47GHT6OF.js";var y=class{constructor(e,r,s,t){this.material=e,this.bufferWriter=e.createBufferWriter(),this.vertexBufferLayout=this.bufferWriter.vertexBufferLayout,this.buffer=r,this.elementCount=s,this.boundingInfo=t}get numTriangles(){return this.elementCount/3}get numVertices(){return this.elementCount}computeUsedMemory(){return this.buffer.byteLength+G}getRenderGeometry(){return this}intersect(e,r,s,t,n,o,u,a){let l=this.bufferWriter,m=this.buffer;l.intersect(m,e,s,t,(c,d,p,L,C)=>I(c,d,p,C,e,r,o,u,n,a))}},v=class{constructor(e){this.engineGeometry=e}get material(){return this.engineGeometry.material}get numVertices(){return this.engineGeometry.attributes.get(x.POSITION).indices.length}get numTriangles(){return this.engineGeometry.indexCount/3}get boundingInfo(){return this.engineGeometry.boundingInfo}computeUsedMemory(){return Array.from(this.engineGeometry.attributes.values()).reduce((e,r)=>e+b(r.data,r.indices),0)}getRenderGeometry(){let e=this.material,r=this.engineGeometry,s=r.attributes,t=r.boundingInfo,n=e.createBufferWriter(),o=n.vertexBufferLayout,u=n.elementCount(s),a=o.createBuffer(u);return n.write(null,null,s,null,a,0),new y(e,a.buffer,u,t)}intersect(e,r,s,t,n,o,u,a){let l=this.engineGeometry;this.material.intersect(l,e.transform.transform,e,s,t,(m,c,d,p,L)=>I(m,c,d,L,e,r,o,u,n,a))}};function I(i,e,r,s,t,n,o,u,a,l){if(i<0||n&&!n(t.rayBegin,t.rayEnd,i))return;let m=new R(o.layerUid,o.graphicUid(a),r,u,l);if((t.results.min.drapedLayerOrder==null||s>=t.results.min.drapedLayerOrder)&&(t.results.min.dist==null||i<t.results.min.dist)&&t.results.min.set(h.LOD,m,i,e,t.transform.transform,s),t.options.store!==g.MIN&&(t.results.max.drapedLayerOrder==null||s>=t.results.max.drapedLayerOrder)&&(t.results.max.dist==null||i>t.results.max.dist)&&t.results.max.set(h.LOD,m,i,e,t.transform.transform,s),t.options.store===g.ALL){let c=S(t.results.min.ray);c.set(h.LOD,m,i,e,t.transform.transform,s),t.results.all.push(c)}}var E=class{constructor(e,r=null){this.geometry=e,this.textures=r}get material(){return this.geometry.material}get numTriangles(){return this.geometry.numTriangles}},O=class{constructor(e,r,s){this.components=e,this.minScreenSpaceRadius=r,this.pivotOffset=s;let t=f(this.components.map(n=>n.geometry));this.numVertices=t.reduce((n,o)=>n+o.numVertices,0)}},T=class{constructor(e){this.levels=e,this.levels.sort((r,s)=>r.minScreenSpaceRadius===s.minScreenSpaceRadius?r.numVertices-s.numVertices:r.minScreenSpaceRadius-s.minScreenSpaceRadius)}getMaterials(){let e=[];return this.levels.forEach(r=>r.components.forEach(s=>e.push(s.geometry.material))),f(e)}getTextures(){let e=new Array;return this.levels.forEach(r=>r.components.forEach(s=>{s.textures!=null&&e.push(...s.textures)})),f(e)}getGeometries(){let e=new Array;return this.levels.forEach(r=>r.components.forEach(s=>{e.push(s.geometry)})),f(e)}getEngineGeometries(){return this.getGeometries().map(e=>e.engineGeometry).filter(e=>e!=null)}computeUsedMemory(){let e=this.getGeometries(),r=this.getTextures(),s=e.reduce((t,n)=>t+n.computeUsedMemory(),0);return r.reduce((t,n)=>t+n.memoryEstimate,0)+s}};export{y as a,v as b,E as c,O as d,T as e};
