import{E as i,b as m,tb as g,u as N}from"./chunk-JLMESEWM.js";function E(t,e){if(!t.isEmpty())switch(t.getGeometryType()){case m.enumPolygon:return b(t);case m.enumPolyline:return L(t);case m.enumLine:case m.enumBezier:case m.enumEllipticArc:return A(t);case m.enumMultiPoint:return X(t);case m.enumEnvelope:return t.getCenterXY();case m.enumPoint:return t.getXY();default:return g.construct(Number.NaN,Number.NaN)}return g.construct(Number.NaN,Number.NaN)}function v(t,e){return b(t,e)}function b(t,e=-1){let u=new i(0),a=new i(0),n=t.getImpl(),r,s=n.hasNonLinearSegments(),c,o=n.getXY(0);if(e===-1){if(c=n.calculateArea2D(),c===0)return R(t);s&&(r=n.querySegmentIterator());for(let d=0,h=n.getPathCount();d<h;d++)S(o,n,d,u,a),s&&C(o,r,u,a)}else{if(c=n.calculateRingArea2D(e),c===0)return R(t,e);s&&(r=n.querySegmentIterator(),r.resetToPath(e)),S(o,n,e,u,a),s&&C(o,r,u,a)}let l=new g,f=new g;return l.setCoords(u.getResult(),a.getResult()),f.assign(l.mul(1/c).add(o)),f}function S(t,e,u,a,n){let r=e.getPathStart(u),s=e.getPathEnd(u);if(s-r<3)return;let c=e.getAttributeStreamRef(0),o=c.readPoint2D(2*r),l=c.readPoint2D(2*(r+1));l.subThis(o);let f=new i(0),d=e.hasNonLinearSegments(),h=1/3,P=new g;for(let y=r+2;y<s;y++){c.queryPoint2D(2*y,P),P.subThis(o);let D=.5*P.crossProduct(l);d&&f.add(D);let x=h*D;a.add((l.x+P.x)*x),n.add((l.y+P.y)*x),l.setCoordsPoint2D(P)}let I=d?f.getResult():e.calculateRingArea2D(u),w=o.sub(t).mul(I);a.add(w.x),n.add(w.y)}function C(t,e,u,a){let n;for(e.nextPath()||N("centroid");(n=e.nextCurve())!==null;){let r=n.calculateWeightedAreaCentroid2D(t);u.add(r.x),a.add(r.y)}}function L(t){return p(t.getImpl())}function A(t){let e=t.calculateLength2D();return e===0?t.getStartXY():t.calculateWeightedCentroid2D().mul(1/e)}function X(t){let e=new i(0),u=new i(0),a=t.getImpl(),n=a.getAttributeStreamRef(0),r=a.getPointCount(),s=new g;for(let o=0;o<r;o++)n.queryPoint2D(2*o,s),e.add(s.x),u.add(s.y);let c=new g;return c.setCoords(e.getResult(),u.getResult()),c.divThis(r)}function R(t,e=-1){return p(t.getImpl(),e)}function p(t,e=-1){let u=e===-1?t.calculateLength2D():t.calculatePathLength2D(e);if(u===0)return Y(t,e);let a=new i(0),n=new i(0),r=t.querySegmentIterator();for(e!==-1&&r.resetToPath(e);r.nextPath();){let c=r.getPathIndex(),o=t.getXY(t.getPathStart(c));for(;r.hasNextSegment();){let f=r.nextSegment(),d=f.calculateLength2D();if(d===0)continue;let h=f.calculateWeightedCentroid2D().sub(o.mul(d));a.add(h.x),n.add(h.y)}let l=o.mul(t.calculatePathLength2D(c));if(a.add(l.x),n.add(l.y),e!==-1)break}let s=new g;return s.setCoords(a.getResult(),n.getResult()),s.mul(1/u)}function Y(t,e=-1){if(e!==-1)return t.getXY(t.getPathStart(e));let u=new i(0),a=new i(0);for(let n=0;n<t.getPathCount();++n){let r=t.getXY(t.getPathStart(n));u.add(r.x),a.add(r.y)}return g.construct(u.getResult(),a.getResult()).mul(1/t.getPathCount())}export{E as a,v as b};
