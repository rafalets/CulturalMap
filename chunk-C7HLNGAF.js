import{C as W,Q as Z,a as E,la as w,s as G,t as H,u as U}from"./chunk-UNRRVLTB.js";import{Da as R,Qa as A,Sa as T,b as u,fb as C,k as j,na as N,tb as f,va as z}from"./chunk-JLMESEWM.js";import{d as k,e as L}from"./chunk-QGVBCWUY.js";function J(){return{outPoint:new f,index:-1,t:Number.NaN}}function Y(a,e,t){return{outPoint:a.clone(),index:e,t}}function l(a,e,t,n){a.outPoint.assign(e),a.index=t,a.t=n}function S(a,e){a.outPoint.assign(e.outPoint),a.index=e.index,a.t=e.t}function $(a,e,t,n){a.index=t,a.t=n,e.queryCoord2D(a.t,a.outPoint)}function F(a,e){let t=J();S(t,a),S(a,e),S(e,t)}function se(a,e,t,n,s,r){if(a.getGeometryType()===u.enumPolygon){for(;n.nextPath();)if(n.hasNextSegment()){let i=n.nextSegment();if(w(a,i.getEndXY(),0)!==0)return l(s,i.getEndXY(),-1,Number.NaN),l(r,i.getEndXY(),-1,Number.NaN),!0}n.resetToFirstPath()}if(e.getGeometryType()===u.enumPolygon){for(;t.nextPath();)if(t.hasNextSegment()){let i=t.nextSegment();if(w(e,i.getEndXY(),0)!==0)return l(s,i.getEndXY(),-1,Number.NaN),l(r,i.getEndXY(),-1,Number.NaN),!0}t.resetToFirstPath()}return!1}function ie(a){let e=a.getPathCount(),t=R(a.getSegmentCount(),0),n=0;for(let s=0;s<e;++s){let r=n+a.getSegmentCountPath(s);for(let i=n,m=a.getPathStart(s);i<r;++i,++m)t[i]=m;n=r}return U(a.getPointCount(),t),t}function ee(a,e){return!!Number.isNaN(e)||a<=e}function X(a){let e=new W;return e.addEnvelope(a,!1),e}var te=class{constructor(e,t){if(this.m_env2DgeometryA=null,this.m_env2DgeometryB=null,this.m_progressCounter=0,this.m_progressTracker=t,this.m_maxSqrDistance=e*e,this.m_maxDistance=e,this.m_bIsNearCalc=!1,Number.isNaN(this.m_maxDistance)?this.m_maxDistance=Number.POSITIVE_INFINITY:this.m_maxDistance=e,this.m_maxSqrDistance=this.m_maxDistance*this.m_maxDistance,Number.isFinite(this.m_maxSqrDistance)){let n=Math.sqrt(this.m_maxSqrDistance);for(;n<this.m_maxDistance;)this.m_maxSqrDistance*=1+Number.EPSILON,n=Math.sqrt(this.m_maxSqrDistance)}}calculate(e,t,n,s){if((e.getGeometryType()!==G.type||t.getGeometryType()!==G.type)&&(this.m_env2DgeometryA=new E,this.m_env2DgeometryB=new E,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!ee(this.m_env2DgeometryA.distanceFromEnvelope(this.m_env2DgeometryB),this.m_maxDistance)))return Number.POSITIVE_INFINITY;let r=Y(new f,A(),Number.NaN),i=Y(new f,A(),Number.NaN),m=this._ExecuteBruteForce(e,t,r,i);return ee(m,this.m_maxDistance)?(n!==null&&S(n,r),s!==null&&S(s,i),m):Number.POSITIVE_INFINITY}isNear(e,t){if(this.m_bIsNearCalc=!0,e.isEmpty()||t.isEmpty())return!1;if(e===t)return!0;let n=!0;if(e.getGeometryType()!==G.type&&e.getGeometryType()!==H.type||t.getGeometryType()!==G.type&&t.getGeometryType()!==H.type||(n=!1),n){if(this.m_env2DgeometryA=new E,this.m_env2DgeometryB=new E,e.queryEnvelope(this.m_env2DgeometryA),t.queryEnvelope(this.m_env2DgeometryB),!(this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)>this.m_maxSqrDistance))return!0;if(this.m_env2DgeometryA.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>this.m_maxSqrDistance)return!1}let s=Y(new f,A(),Number.NaN),r=Y(new f,A(),Number.NaN);return this._ExecuteBruteForce(e,t,s,r)<=this.m_maxDistance}progress_(e=!1){}_ExecuteBruteForce(e,t,n,s){switch(e.getGeometryType()){case u.enumPoint:return this.distancePointGeometry(e,t,n,s);case u.enumMultiPoint:return this.distanceMultipointGeometry(e,t,n,s);case u.enumEnvelope:return this.distanceEnvelopeGeometry(e,t,n,s);case u.enumPolyline:case u.enumPolygon:return this.distanceMultipathGeometry(e,t,n,s);default:return Number.NaN}}distancePointGeometry(e,t,n,s){switch(t.getGeometryType()){case u.enumPoint:return this.distancePointPoint(e,t,n,s);case u.enumMultiPoint:return this.distancePointMultipoint(e,t,n,s);case u.enumPolyline:case u.enumPolygon:return this.distancePointMultipath(e,t,n,s);case u.enumEnvelope:return this.distancePointEnvelope(e,t,n,s);default:return Number.NaN}}distancePointPoint(e,t,n,s){let r=e.getXY(),i=t.getXY();return l(n,r,0,0),l(s,i,0,0),Math.sqrt(f.sqrDistance(r,i))}distancePointMultipoint(e,t,n,s){let r=e.getXY(),i=this.m_maxSqrDistance,m=i,o=!1,c=t.getPointCount(),y=new f;for(let _=0;_<c;++_)if(t.queryXY(_,y),m=f.sqrDistance(r,y),this.m_bIsNearCalc){if(m<=i)return 0}else if(!(m>i)&&(!o&&m===i||m<i)&&(i=m,l(n,r,0,0),l(s,y,_,0),o=!0,i===0))return 0;return o?Math.sqrt(i):Number.POSITIVE_INFINITY}distancePointMultipath(e,t,n,s){let r=!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB),i=e.getXY();if(!r&&t.getGeometryType()===u.enumPolygon&&w(t,i,0)!==0)return l(n,i,0,0),l(s,i,-1,Number.NaN),0;t.getImpl().getAccelerators();let m=this.m_maxSqrDistance,o=m,c=-1,y=new E,_=t.querySegmentIterator(),h=!1;for(;_.nextPath();)for(;_.hasNextSegment();){let D=_.nextSegment();D.queryEnvelope(y);let q=y.sqrDistance(i);if(q>m||!this.m_bIsNearCalc&&h&&q===m)continue;c=D.getClosestCoordinate(i,!1);let g=D.getCoord2D(c);if(o=f.sqrDistance(i,g),this.m_bIsNearCalc){if(o<=m)return 0}else if(!(o>m)&&(!h||o<m)&&(m=o,l(n,i,0,0),l(s,g,_.getStartPointIndex(),c),h=!0,m===0))return 0}return h?Math.sqrt(m):Number.POSITIVE_INFINITY}distancePointEnvelope(e,t,n,s){let r=e.getXY();l(n,r,0,0),l(s,r,-1,Number.NaN);let i=t.asEnvelope2D();return i.contains(r)?0:Math.sqrt(i.sqrDistance(r,s.outPoint))}distanceMultipointGeometry(e,t,n,s){switch(t.getGeometryType()){case u.enumPoint:{this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);let r=this.distancePointMultipoint(t,e,s,n);return this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),r}case u.enumMultiPoint:return this.distanceMultipointMultipoint(e,t,n,s,1,1);case u.enumPolyline:case u.enumPolygon:return this.distanceMultipointMultipath(e,t,n,s);case u.enumEnvelope:return this.distanceMultipointMultipath(e,X(t),n,s);default:return Number.NaN}}distanceMultipointMultipoint(e,t,n,s,r,i){let m={stack:[],error:void 0,hasError:!1};try{if(this.m_bIsNearCalc&&r===1&&i===1){let x=Math.trunc(C(Math.sqrt(e.getPointCount())+1,1,T())),I=Math.trunc(C(Math.sqrt(t.getPointCount())+1,1,T()));if((x>=4||I>=4)&&this.distanceMultipointMultipoint(e,t,n,s,x,I)<=this.m_maxSqrDistance)return 0}let o=this.m_maxSqrDistance,c=[e],y=[t],_=this.swapGeometriesIfBGtA(c,y);_&&(this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),i=N(r,r=i),F(n,s)),k(m,z(()=>{F(n,s),this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)},!_),!1);let h=c[0].getImpl(),D=y[0].getImpl(),q=h.getPointCount(),g=D.getPointCount(),M=g>1,d=!1,P=new f,v=new f;for(let x=0;x<q;x+=r){if(h.queryXY(x,P),M){let I=this.m_env2DgeometryB.sqrDistance(P);if(this.m_bIsNearCalc){if(I>o)continue;if(this.m_env2DgeometryB.sqrMaxMinDistance(P)<=o)return 0}else if(I>=o)continue}for(let I=0;I<g;I+=i){D.queryXY(I,v);let p=f.sqrDistance(P,v);if(this.m_bIsNearCalc){if(p<=o)return 0}else if(!(p>o||d&&p===o)&&(!d||p<o)&&(l(n,P,x,0),l(s,v,I,0),d=!0,o=p,o===0))return d?Math.sqrt(o):Number.POSITIVE_INFINITY}}return d?Math.sqrt(o):Number.POSITIVE_INFINITY}catch(o){m.error=o,m.hasError=!0}finally{L(m)}}distanceMultipointMultipath(e,t,n,s){let r=!!this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)&&t.getGeometryType()===u.enumPolygon,i=t.querySegmentIterator();i.stripAttributes();let m=new E,o=new f,c=this.m_maxSqrDistance,y=e.getImpl(),_=y.getPointCount(),h=_>1,D=!1;for(;i.nextPath();)for(;i.hasNextSegment();){let q=i.nextSegment();if(q.queryLooseEnvelope(m),h){let g=m.sqrDistanceEnvelope(this.m_env2DgeometryA,null,null);if(this.m_bIsNearCalc){if(g>c)continue}else if(g>c||D&&g===c)continue}for(let g=0;g<_;g++){if(y.queryXY(g,o),r&&w(t,o,0)!==0)return l(n,o,-1,Number.NaN),l(s,o,g,0),0;{let v=m.sqrDistance(o);if(this.m_bIsNearCalc){if(v>c)continue}else if(v>c)continue}let M=q.getClosestCoordinate(o,!1),d=q.getCoord2D(M);o.subThis(d);let P=o.sqrLength();if(this.m_bIsNearCalc){if(P<=c)return 0}else if(!(P>c)&&(!D||P<c)&&(c=P,l(n,y.getXY(g),g,0),l(s,d,i.getStartPointIndex(),M),D=!0,c===0))return 0}r=!1}return D?Math.sqrt(c):Number.POSITIVE_INFINITY}distanceEnvelopeGeometry(e,t,n,s){switch(t.getGeometryType()){case u.enumPoint:return this.distancePointEnvelope(t,e,s,n);case u.enumMultiPoint:{this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);let r=this.distanceMultipointMultipath(t,X(e),s,n);return this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),r}case u.enumPolyline:case u.enumPolygon:return this.distanceMultipathMultipath(X(e),t,n,s);case u.enumEnvelope:return this.distanceEnvelopeEnvelope(e,t,n,s);default:return Number.NaN}}distanceEnvelopeEnvelope(e,t,n,s){n.t=Number.NaN,n.index=-1,s.t=Number.NaN,s.index=-1;let r=e.asEnvelope2D(),i=t.asEnvelope2D();return Math.sqrt(r.sqrDistanceEnvelope(i,n.outPoint,s.outPoint))}distanceMultipathGeometry(e,t,n,s){switch(t.getGeometryType()){case u.enumPoint:{this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);let r=this.distancePointMultipath(t,e,s,n);return this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),r}case u.enumMultiPoint:{this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB);let r=this.distanceMultipointMultipath(t,e,s,n);return this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),r}case u.enumPolyline:case u.enumPolygon:return this.distanceMultipathMultipath(e,t,n,s);case u.enumEnvelope:return this.distanceMultipathMultipath(e,X(t),n,s);default:return Number.NaN}}distanceMultipathMultipath(e,t,n,s){let r={stack:[],error:void 0,hasError:!1};try{let i=[e],m=[t],o=this.swapGeometriesIfAGtB(i,m);o&&(this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB),F(n,s)),k(r,z(()=>{F(n,s),this.m_env2DgeometryB=N(this.m_env2DgeometryA,this.m_env2DgeometryA=this.m_env2DgeometryB)},!o),!1);let c=i[0],y=m[0],_=c.querySegmentIterator();_.stripAttributes();let h=y.querySegmentIterator();if(h.stripAttributes(),this.m_bIsNearCalc&&this.m_env2DgeometryA.sqrMaxMinDistanceEnvelope(this.m_env2DgeometryB)<=this.m_maxSqrDistance)return 0;if(this.m_bIsNearCalc){let p=Math.trunc(C(Math.sqrt(c.getPointCount())+1,1,T())),B=Math.trunc(C(Math.sqrt(c.getPointCount())+1,1,T()));if(this.distanceMultipointMultipoint(c,y,n,s,p,B)<=this.m_maxSqrDistance)return 0}if(this.m_env2DgeometryA.isIntersecting(this.m_env2DgeometryB)){let p=J(),B=J();if(se(c,y,_,h,p,B))return S(n,p),S(s,B),0}let D=ie(c),q=[],g=new Z,M=new E,d=new E,P=new E,v=this.m_maxSqrDistance,x=!0,I=!1;for(let p=0,B=D.length;p<B;++p){c.querySegment(D[p],g,!0);let O=g.get();if(O.queryEnvelope(M),!(M.sqrDistanceEnvelope(this.m_env2DgeometryB,null,null)>v)){if(this.m_bIsNearCalc&&M.sqrMaxDistanceEnvelope(this.m_env2DgeometryB)<=v)return 0;for(;h.nextPath();){if(this.progress_(),x)y.queryPathEnvelope(h.getPathIndex(),P),q[h.getPathIndex()]=P.clone();else if(M.sqrDistanceEnvelope(q[h.getPathIndex()],null,null)>v)continue;for(;h.hasNextSegment();){let V=h.nextSegment();if(V.queryEnvelope(d),M.sqrDistanceEnvelope(d,null,null)<=v){let ne=!M.isIntersecting(d),K=[0],Q=[0],b=O.distance(V,ne,K,Q);if(b*=b,this.m_bIsNearCalc&&b<=this.m_maxSqrDistance)return 0;if(b<v||b===v&&D[p]<n.index){if(I=!0,$(n,O,D[p],K[0]),$(s,V,h.getStartPointIndex(),Q[0]),b===0)return 0;v=b}}}}h.resetToFirstPath(),x=!1}}return I?Math.sqrt(v):Number.POSITIVE_INFINITY}catch(i){r.error=i,r.hasError=!0}finally{L(r)}}swapGeometriesIfAGtB(e,t){return j(e[0])>j(t[0])&&(t[0]=N(e[0],e[0]=t[0]),!0)}swapGeometriesIfBGtA(e,t){return this.swapGeometriesIfAGtB(t,e)}};export{te as a};
