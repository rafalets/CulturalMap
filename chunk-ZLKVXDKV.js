import{b as te,c as Jt}from"./chunk-ZEDTA2HX.js";import{a as G,b as At,c as Lt,d as Oe,e as j,f as V,i as fe,j as Y,k as Se}from"./chunk-UMFVIJYZ.js";import"./chunk-7AVL35LM.js";import{c as Bt,d as Dt}from"./chunk-HZW4TZLN.js";import"./chunk-BKBYZ6R7.js";import{a as kt,c as Nt,d as Et}from"./chunk-ZVQ35N7C.js";import{a as Fe}from"./chunk-Y3QXXHTY.js";import{a as lt,d as ct,e as pt,f as ut,i as ft,j as ht,k as dt,l as gt,n as yt,y as xt}from"./chunk-QPRTRAGG.js";import{A as _t,B as Ft,M as be,N as Pt,O as ee,p as Z,q as $,r as Ce,s as ue,t as wt,u as It,v as bt,w as St,x as vt,y as Tt,z as Rt}from"./chunk-OZ3HM6MC.js";import{b as Q,s as Ct,u as Ot,v as Mt}from"./chunk-XUJMOYBO.js";import{a as nt}from"./chunk-HSOQQRMT.js";import"./chunk-FCB5DYUJ.js";import"./chunk-5SSISWTF.js";import"./chunk-3V2UIH2D.js";import"./chunk-VU5W7W6Y.js";import{b as mt}from"./chunk-E56W4PK4.js";import"./chunk-IPGHBSHO.js";import"./chunk-XPXAET6Q.js";import"./chunk-YW3L7OMP.js";import"./chunk-2ILDS6SI.js";import"./chunk-FVILOOND.js";import{a as rt}from"./chunk-J75YI66W.js";import{b as at}from"./chunk-3ZX35QIC.js";import"./chunk-7PERXXHH.js";import{a as ot}from"./chunk-QYRRGSBK.js";import{a as it}from"./chunk-5PVZ33WG.js";import"./chunk-ZMJUEIM7.js";import"./chunk-V7IMCFL4.js";import"./chunk-XD6QSICT.js";import"./chunk-FTOLVNUN.js";import"./chunk-EOLWCIYR.js";import"./chunk-YOMR2DCD.js";import"./chunk-KDF3RZ2K.js";import"./chunk-AFSNSPOG.js";import{a as Ie}from"./chunk-JEGXFID4.js";import"./chunk-SU5S5XU7.js";import{e as _e}from"./chunk-F6A6XWW4.js";import"./chunk-AESEF3B2.js";import"./chunk-74LTYPBC.js";import"./chunk-3BDL2KTL.js";import"./chunk-TGPGCQ44.js";import"./chunk-PWU2QHPV.js";import{p as st}from"./chunk-WUJRCGDY.js";import"./chunk-QPGCDGIN.js";import"./chunk-JH4RD366.js";import"./chunk-7Y6S2GNA.js";import"./chunk-VOB6IBIW.js";import"./chunk-63B3IOWG.js";import"./chunk-PTZYZULI.js";import"./chunk-KZKWOEFD.js";import"./chunk-LNVVFNTC.js";import{a as ce}from"./chunk-WDTJILD4.js";import{a as Ke}from"./chunk-MAVVUPFJ.js";import{b as pe}from"./chunk-BVXSAX5Q.js";import"./chunk-V2JYXY4D.js";import{a as et}from"./chunk-OOAI5LGC.js";import{c as $e}from"./chunk-5TMYC5PF.js";import"./chunk-RCDSCJMH.js";import"./chunk-QJADLTFR.js";import{a as Qe}from"./chunk-IWPCZHB6.js";import{a as Xe}from"./chunk-2BIJFS64.js";import{f as Ye}from"./chunk-SCKV27CX.js";import"./chunk-FXCL7YYQ.js";import"./chunk-HX2BGUTP.js";import"./chunk-XSTBHERR.js";import{a as qe}from"./chunk-S7QYPX7J.js";import{a as Ze}from"./chunk-KWZIB4M6.js";import"./chunk-YQPWWSMJ.js";import"./chunk-JEIB6WNP.js";import"./chunk-6JJCXUHW.js";import"./chunk-CVRJ6GOM.js";import"./chunk-X7QUUHRV.js";import"./chunk-7B2UKJ5N.js";import"./chunk-RSDQHAJX.js";import"./chunk-3HCMTURP.js";import"./chunk-VT67LWCR.js";import"./chunk-K27GONOJ.js";import"./chunk-6KRFVLII.js";import"./chunk-JR22Z7I2.js";import"./chunk-3QNSJ5HY.js";import"./chunk-UNVICPIE.js";import"./chunk-BGICKEJR.js";import"./chunk-TRZXSDYA.js";import{a as He}from"./chunk-OGS2SUK5.js";import"./chunk-TVHRLNTK.js";import"./chunk-JA3EMS2I.js";import"./chunk-HKHTIKVW.js";import"./chunk-XFESK2YB.js";import"./chunk-IJBTA53P.js";import"./chunk-ZHUXSQTN.js";import"./chunk-YLZWDFCJ.js";import"./chunk-TLMADEUL.js";import"./chunk-WNSGKHQ6.js";import{a as tt}from"./chunk-J5MXC6AL.js";import"./chunk-OLOKUDVI.js";import"./chunk-RJWOVI3M.js";import"./chunk-R6GE4XRP.js";import"./chunk-MDL4XPLR.js";import"./chunk-ILKINAL7.js";import"./chunk-HVKMTRIC.js";import"./chunk-AZS4Q4RE.js";import"./chunk-QEBUS3TL.js";import"./chunk-IB2IUO7T.js";import"./chunk-MS3KE2OO.js";import"./chunk-NHSDW26F.js";import"./chunk-NMAGYK3Q.js";import"./chunk-GWBRHLNH.js";import"./chunk-WAGBL553.js";import"./chunk-WKJJQIBC.js";import"./chunk-VDADRLEF.js";import"./chunk-CNQVGGE6.js";import"./chunk-JGD7UKVF.js";import"./chunk-J372WZPB.js";import"./chunk-6XFS4U2F.js";import"./chunk-XPRVY6JT.js";import"./chunk-7N3ZKWML.js";import"./chunk-E62WHYYG.js";import"./chunk-QDTU3MWT.js";import"./chunk-BCREO4Q5.js";import"./chunk-3SDSCSDJ.js";import{j as z}from"./chunk-I4M2OT5W.js";import{n as W}from"./chunk-NTVLK3P2.js";import{a as A}from"./chunk-WMQNRNIU.js";import"./chunk-HD52PWPC.js";import"./chunk-EIPVFA6F.js";import"./chunk-VOFKUGRY.js";import{w as We}from"./chunk-IG66NQHW.js";import"./chunk-ARRCN5K3.js";import"./chunk-IXCTZWTQ.js";import"./chunk-6PN3I333.js";import"./chunk-ZTJLFKGG.js";import"./chunk-5TW726OD.js";import"./chunk-VGD3XLDH.js";import{a as Ve}from"./chunk-LB5YQINJ.js";import"./chunk-EKMHQEJY.js";import"./chunk-VACZNAP3.js";import"./chunk-JKNCWG7E.js";import"./chunk-KTE5HCNJ.js";import"./chunk-F7VRLFCB.js";import"./chunk-7IPIJKWU.js";import{b as je}from"./chunk-7R33MKVL.js";import"./chunk-ISSJ3A6Y.js";import"./chunk-VDKRSX77.js";import"./chunk-WUA6PW3I.js";import"./chunk-E57FTRWF.js";import{h as Ge}from"./chunk-U4J5SECU.js";import"./chunk-7EG726PT.js";import{d as C}from"./chunk-C7INQGWT.js";import{H as J,i as De}from"./chunk-WMHJC7XF.js";import"./chunk-NJEWDTYF.js";import"./chunk-N3SDOFND.js";import"./chunk-OVHPPCBL.js";import"./chunk-FNXQZPHT.js";import"./chunk-3TQOUBNU.js";import{E as we,M as Ue,h as Le,t as Je,x as ze}from"./chunk-D2LVMNOU.js";import"./chunk-SNFOAZZQ.js";import{a as v}from"./chunk-QGVBCWUY.js";import{r as me,t as _}from"./chunk-HHDFN2GK.js";import{a as Be,t as le}from"./chunk-47GHT6OF.js";import{a as D,b as H,f as T}from"./chunk-VTHXE323.js";function ke(t){return["x","e","east","long","longitude"].includes(t.toLowerCase())}function Ne(t){return["y","n","west","lat","latitude"].includes(t.toLowerCase())}function Wt(t){let{axes:e}=t.domain,r=Object.keys(e),s=[],i=[],o=-1,a=-1,l=[];for(let x=0;x<r.length;x++){let y=r[x];ke(y)?o=x:Ne(y)&&(a=x);let I=e[y],b=[];if("values"in I){I.values.forEach(S=>b.push(typeof S=="string"?new Date(S).getTime():S));let O=b[1]-b[0];s.push([b[0]-.5*O,b[b.length-1]+.5*O]),i.push(O)}else{let{start:O,stop:S,num:F}=I,E=(S-O)/(F-1);s.push([O-.5*E,S+.5*E]),i.push(E);for(let R=0;R<F;R++)b.push(O+E*R)}l.push({name:y,values:b,extent:[b[0],b[b.length-1]]})}o>-1&&a===-1?a=o===0?1:0:a>-1&&o===-1?o=a===0?1:0:a===-1&&o===-1&&(o=0,a=1),l=l.filter((x,y)=>!(y===o||y===a));let{referencing:n}=t.domain,c=n.find(x=>x.coordinates.includes(r[o])).system.id,m=c?.slice(c.lastIndexOf("/")+1),f=m==null||m==="CRS84"?4326:Number(m),u=new A({wkid:f}),[p,g]=s[o],[d,w]=s[a],h=new z({xmin:p,xmax:g,ymin:d,ymax:w,spatialReference:u});return{width:Math.round(h.width/i[o]),height:Math.round(h.height/i[a]),extent:h,dimensions:l}}function Me(t){let e=je();return e?t[e]??Object.values(t)[0]:Object.values(t)[0]}function Pe(){return Math.round(255*Math.random())}function qt(t){let e={},{parameters:r}=t;if(!r)return e;for(let[s,i]of Object.entries(r)){let{type:o,description:a,unit:l,categoryEncoding:n,observedProperty:c}=i;if(o==="Parameter"&&(e[s]={},a&&(e[s].description=Me(a)),l&&(e[s].unit=l.label?Me(l.label):null,e[s].symbol=l.symbol?.value),n)){let m=Object.entries(n).map((p,g)=>({OID:g,Value:Number(p[1]),ClassName:p[0].slice(p[0].lastIndexOf("/")+1),Count:1})),f=!1;c?.categories?.length&&(c.categories.forEach(p=>{if(!p.id)return;let g=p.id.slice(p.id.lastIndexOf("/")+1),d=m.find(h=>h.ClassName===g);if(!d)return;let w=p.label?Me(p.label):null;if(d.Label=w,p.preferredColor){let h=tt.fromHex(p.preferredColor);h&&(f=!0,d.Red=h.r,d.Green=h.g,d.Blue=h.b)}}),f&&m.forEach(p=>{p.Red==null&&(p.Red=Pe(),p.Green=Pe(),p.Blue=Pe())}));let u={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:m.map(p=>({attributes:p}))};f&&u.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[s].attributeTable=u}}return e}function $t(t){let e=Number.MAX_VALUE,r=-Number.MAX_VALUE;for(let s=0;s<t.length;s++){let i=t[s];i!=null&&(i<e&&(e=i),i>r&&(r=i))}return mt(e,r)}function Yt(t,e,r){let s=t.map((n,c)=>({name:n,count:e[c]})).sort((n,c)=>n.name>c.name?-1:1),i=(o=1,n=>o*=n.count);var o;let a=[...s.slice(1),{name:"",count:1}].reverse().map(i).reverse(),l=0;for(let n=t.length-1;n>=0;n--)l+=a[s.findIndex(({name:c})=>c===t[n])]*(r%e[n]),r=Math.floor(r/e[n]);return l}function zt(t){let{width:e,height:r,extent:s,dimensions:i}=Wt(t),{ranges:o}=t,a=Object.keys(o).sort((u,p)=>u<p?-1:1),l=[];for(let u=0;u<a.length;u++){let p=a[u];i?.length&&l.push({name:p,dimensions:i})}let n=qt(t);l.forEach(u=>n[u.name]&&Object.assign(u,n[u.name]));let c=l.length?{variables:l}:void 0,m=[];for(let u=0;u<a.length;u++){let p=a[u],{values:g,dataType:d,axisNames:w,shape:h}=o[p],x=h.length>2?u*h.slice(0,-2).reduce((F,E)=>F*E):0,y=w.slice(0,-2),I=h.slice(0,-2),b=d==="float"?"f32":$t(g),O=e*r,S=g.length/O;for(let F=0;F<S;F++){let E=Q.createEmptyBand(b,O),R=new Uint8Array(O).fill(255),M=!1,k=F*O;for(let P=0;P<O;P++){let N=g[k+P];N==null?(R[P]=0,M=!0):E[P]=N}if(u===0||i?.length){let P=new Q({width:e,height:r,mask:M?R:null,pixels:[E],pixelType:b});P.updateStatistics(),i?.length?m[Yt(y,I,F)+x]=P:m.push(P)}else{let P=m[F];P.pixels.push(E),M?P.mask&&(P.mask=Q.combineBandMasks([P.mask,R])):P.mask=M?R:null}}}let f=Object.values(n).find(u=>u.attributeTable)?.attributeTable;return{extent:s,pixelBlocks:m,multidimensionalInfo:c,attributeTable:f,bandNames:c?void 0:a}}var se=class extends G{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}fetchRawTile(t,e,r,s={}){if(!this._pixelBlockTiles){let{rasterInfo:o}=this,[a,l]=o.storageInfo.tileInfo.size,{sliceId:n}=s,{pixelBlocks:c}=this.source,m={pixelBlock:n==null?c[0]:c[n],useBilinear:o.dataType!=="thematic",tileSize:{width:a,height:l},level:t,row:e,col:r},f=this.rasterJobHandler?this.rasterJobHandler.clipTile(m,s):Mt(m);return Promise.resolve(f)}let i=this._pixelBlockTiles.get(`${t}/${e}/${r}`);return Promise.resolve(i)}_open(t){return T(this,null,function*(){let e=this.source,{pixelBlocks:r,attributeTable:s,statistics:i,histograms:o,name:a,nativeExtent:l,transform:n}=e,c=r[0],{width:m,height:f,pixelType:u}=c,p=e.extent??new z({xmin:-.5,ymin:.5,xmax:m-.5,ymax:f-.5,spatialReference:new A({wkid:3857})}),g=e.isPseudoSpatialReference??!e.extent,d={x:p.width/m,y:p.height/f},w=D({},e.keyProperties);s&&(w.DataType="Thematic");let h=new $({width:m,height:f,pixelType:u,extent:p,nativeExtent:l,attributeTable:s,transform:n,pixelSize:d,spatialReference:p.spatialReference,bandCount:c.pixels.length,keyProperties:w,multidimensionalInfo:e.multidimensionalInfo,statistics:i,isPseudoSpatialReference:g,histograms:o});this.ioConfig.skipMapInfo&&this.updateImageSpaceRasterInfo(h),this.createRemoteDatasetStorageInfo(h,512,512),this._set("rasterInfo",h),this.updateTileInfo(),h.multidimensionalInfo?yield this._buildMDimStats(e.pixelBlocks,h.multidimensionalInfo):yield this._buildInMemoryRaster(c,{width:512,height:512},t),h.multidimensionalInfo||(this.source=null),this.datasetName=a})}_buildInMemoryRaster(t,e,r){return T(this,null,function*(){let{rasterInfo:s}=this,i=s.storageInfo.maximumPyramidLevel??0,o=s.dataType!=="thematic",a=this.rasterJobHandler?this.rasterJobHandler.split({pixelBlock:t,tileSize:e,maximumPyramidLevel:i,useBilinear:o},r):Promise.resolve(Ot(t,e,i,o)),l=s.statistics!=null,n=s.histograms!=null,c=this.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):this.rasterJobHandler?this.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:t},r):Promise.resolve(Pt(t)),m=yield we([a,c]);if(!m[0].value&&m[1].value)throw new _("inmemory-raster:open","failed to build in memory raster");this._pixelBlockTiles=m[0].value,l||(s.statistics=m[1].value?.statistics),n||(s.histograms=m[1].value?.histograms)})}_buildMDimStats(t,e,r){return T(this,null,function*(){for(let s=0;s<e.variables.length;s++){let i=e.variables[s];if(i.statistics)continue;let o=i.dimensions.map(c=>new lt({variableName:i.name,dimensionName:c.name,values:[c.values?.[0]??c.extent?.[0]],isSlice:!0})),a=xt(o,e),l=a==null?null:t[a];if(l==null)continue;let n=this.rasterJobHandler?yield this.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},r):be(l);i.statistics=n.statistics,i.histograms||(i.histograms=n.histograms)}})}};v([C({type:String,json:{write:!0}})],se.prototype,"datasetFormat",void 0),v([C()],se.prototype,"source",void 0),v([C()],se.prototype,"url",null),se=v([J("esri.layers.support.rasterDatasets.InMemoryRaster")],se);var re=se;var he=class extends G{constructor(){super(...arguments),this.datasetFormat="CovJSON"}fetchRawTile(t,e,r,s={}){return this._inMemoryRaster.fetchRawTile(t,e,r,s)}_open(t){return T(this,null,function*(){let{extent:e,pixelBlocks:r,multidimensionalInfo:s,attributeTable:i,bandNames:o}=yield this._fetchData(t),{statistics:a,histograms:l}=be(r[0]),n=o?.map(u=>({BandName:u})),c={DataType:i?"Thematic":s?"Scientific":"Generic",BandProperties:n},m=new re({source:{extent:e,pixelBlocks:r,attributeTable:i?Ie.fromJSON(i):null,multidimensionalInfo:s,statistics:a,histograms:l,keyProperties:c,isPseudoSpatialReference:!1}});yield m.open(),this._inMemoryRaster=m;let f=this.source?"":this.url.slice(this.url.lastIndexOf("/")+1);this._set("datasetName",f.slice(0,f.indexOf("."))),this._set("rasterInfo",m.rasterInfo)})}_fetchData(t){return T(this,null,function*(){let e=this.source??(yield this.request(this.url,{signal:t?.signal})).data,r="imagery-tile-layer:open-coverage-json";if(e.type?.toLowerCase()!=="coverage"||e.domain?.domainType?.toLowerCase()!=="grid")throw new _(r,"Only coverage with Grid domain type is supported");if(!e.ranges)throw new _(r,"Missing ranges in the grid coverage data");if(!e.domain.referencing?.length)throw new _(r,"Missing domain referencing in the grid coverage data");let s=Object.values(e.ranges);for(let i=0;i<s.length;i++){let{axisNames:o,shape:a,type:l,values:n}=s[i];if(!(l.toLowerCase()==="ndarray"&&n?.length&&o?.length&&a?.length))throw new _(r,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!(ke(o[o.length-1])&&Ne(o[o.length-2])))throw new _(r,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return zt(e)})}};v([C({type:String,json:{write:!0}})],he.prototype,"datasetFormat",void 0),v([C({constructOnly:!0})],he.prototype,"source",void 0),he=v([J("esri.layers.support.rasterDatasets.CovJSONRaster")],he);var Ut=he;function Ht(t,e){if(!t||!e)return null;let r=[];for(let s=0;s<t.length;s++)r.push(t[s]),r.push(e[s]);return r}function Xt(t){let e=j(t,"GeodataXform"),r=ie(Y(e,"SpatialReference/WKID")||V(e,"SpatialReference/WKT"));if(e.getAttribute("xsi:type")!=="typens:PolynomialXform")return{spatialReference:r,transform:null};let s=Y(e,"PolynomialOrder")??1,i=fe(e,"CoeffX/Double"),o=fe(e,"CoeffY/Double"),a=fe(e,"InverseCoeffX/Double"),l=fe(e,"InverseCoeffY/Double"),n=Ht(i,o),c=Ht(a,l);return{spatialReference:r,transform:n&&c&&n.length&&c.length?new te({spatialReference:r,polynomialOrder:s,forwardCoefficients:n,inverseCoefficients:c}):null}}function Kt(t){let e=Y(t,"NoDataValue"),r=j(t,"Histograms/HistItem"),s=Y(r,"HistMin"),i=Y(r,"HistMax"),o=Y(r,"BucketCount"),a=V(r,"HistCounts")?.split("|").map(u=>Number(u)),l,n,c,m;Oe(t,"Metadata/MDI").forEach(u=>{let p=Number(u.textContent??u.nodeValue);switch(u.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":l=p;break;case"STATISTICS_MAXIMUM":n=p;break;case"STATISTICS_MEAN":c=p;break;case"STATISTICS_STDDEV":m=p}});let f=Y(t,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:a?.length&&s!=null&&i!=null?{min:s,max:i,size:o||a.length,counts:a}:null,sourceBandIndex:f,statistics:l!=null&&n!=null?{min:l,max:n,avg:c,stddev:m}:null}}function ie(t){if(!t)return null;let e=Number(t);if(!isNaN(e)&&e!==0)return new A({wkid:e});if(t=String(t).trim(),We(t))return new A({wkt2:t});let r=t.toUpperCase();if(r.startsWith("COMPD_CS")){if(!r.includes("VERTCS")||!r.includes("GEOGCS")&&!r.startsWith("PROJCS"))return null;let s=r.indexOf("VERTCS"),i=r.indexOf("PROJCS"),o=i>-1?i:r.indexOf("GEOGCS");if(o===-1)return null;let a=t.slice(o,t.lastIndexOf("]",s)+1).trim(),l=t.slice(s,t.lastIndexOf("]")).trim();e=Ee(a);let n=new A(e?{wkid:e}:{wkt:a}),c=Ee(l);return c&&(n.vcsWkid=c),n}return r.startsWith("GEOGCS")||r.startsWith("PROJCS")?(e=Ee(t),new A(e!==0?{wkid:e}:{wkt:t})):null}function Ee(t){let e=t.replaceAll("]","[").replaceAll('"',"").split("[").map(i=>i.trim()).filter(i=>i!==""),r=e[e.length-1].split(","),s=r[0]?.toLowerCase();if((s==="epsg"||s==="esri")&&t.endsWith('"]]')){let i=Number(r[1]);if(!isNaN(i)&&i!==0)return i}return 0}function ae(t){if(t?.documentElement.tagName?.toLowerCase()!=="pamdataset")return{};let e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};t.documentElement.childNodes.forEach(s=>{if(s.nodeType===1){if(Se(s,"SRS")){if(!e.spatialReference){let i=V(s);e.spatialReference=ie(i)}}else if(Se(s,"Metadata"))if(s.getAttribute("domain")==="xml:ESRI"){let{spatialReference:i,transform:o}=Xt(s);e.transform=o,e.spatialReference||(e.spatialReference=i)}else Oe(s,"MDI").forEach(i=>e.metadata[i.getAttribute("key")]=V(i));else if(Se(s,"PAMRasterBand")){let i=Kt(s);i.sourceBandIndex!=null&&e.rasterBands[i.sourceBandIndex]==null?e.rasterBands[i.sourceBandIndex]=i:e.rasterBands.push(i)}}});let r=e.rasterBands;if(r.length){let s=!!r[0].statistics;e.statistics=s?r.map(o=>o.statistics).filter(le):null;let i=!!r[0].histogram;e.histograms=i?r.map(o=>o.histogram).filter(le):null}return e}var ve=class extends G{fetchRawTile(t,e,r,s={}){return this._inMemoryRaster.fetchRawTile(t,e,r,s)}_open(t){return T(this,null,function*(){let e=yield this._fetchData(t),{spatialReference:r,statistics:s,histograms:i,transform:o}=yield this._fetchAuxiliaryData(t),a=!r;a&&(r=new A({wkid:3857})),i?.length&&s==null&&(s=ee(i));let{width:l,height:n}=e,c=new z({xmin:-.5,ymin:.5-n,xmax:l-.5,ymax:.5,spatialReference:r}),m=o?o.forwardTransform(c):c,f=!0;if(o){let p=o.forwardCoefficients;f=p&&p[1]===0&&p[2]===0,f&&(o=null,c=m)}let u=new re({source:{extent:m,nativeExtent:c,transform:o,pixelBlocks:[e],statistics:s,histograms:i,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:a},ioConfig:{sampling:"closest",skipStatistics:!0}});this.ioConfig.skipMapInfo&&(u.ioConfig.skipMapInfo=!0),yield u.open(),u.source=null,this._set("rasterInfo",u.rasterInfo),this._inMemoryRaster=u})}_fetchData(t){return T(this,null,function*(){let{data:e}=yield this.request(this.url,{responseType:"array-buffer",signal:t?.signal}),r=Ft(e).toUpperCase();if(r!=="JPG"&&r!=="PNG"&&r!=="GIF"&&r!=="BMP")throw new _("image-aux-raster:open","the data is not a supported format");this._set("datasetFormat",r);let s=r.toLowerCase(),i=s==="gif"||s==="bmp"||!Be("ios"),o=yield this.decodePixelBlock(e,{format:s,useCanvas:i,hasNoZlibMask:!0});if(o==null)throw new _("image-aux-raster:open","the data cannot be decoded");return o})}_fetchAuxiliaryData(t){return T(this,null,function*(){let e=t?.signal,{skipExtensions:r=[],skipMapInfo:s}=this.ioConfig,i=s||r.includes("aux.xml")?null:this.request(this.url+".aux.xml",{responseType:"xml",signal:e}),o=this.datasetFormat,a=o==="JPG"?"jgw":o==="PNG"?"pgw":o==="BMP"?"bpw":null,l=a&&r.includes(a)?null:this.request(this.url.slice(0,this.url.lastIndexOf("."))+"."+a,{responseType:"text",signal:e}),n=yield we([i,l]);if(e?.aborted)throw Je();let c=ae(n[0].value?.data);if(!c.transform){let m=n[1].value?n[1].value.data.split(`
`).slice(0,6).map(f=>Number(f)):null;c.transform=m?.length===6?new te({forwardCoefficients:[m[4],m[5],m[0],-m[1],m[2],-m[3]]}):null}return c})}};v([C({type:String,json:{write:!0}})],ve.prototype,"datasetFormat",void 0),ve=v([J("esri.layers.support.rasterDatasets.ImageAuxRaster")],ve);var de=ve;var ge=class extends G{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}fetchRawTile(i,o,a){return T(this,arguments,function*(t,e,r,s={}){let{storageInfo:l,extent:n}=this.rasterInfo,{transposeInfo:c}=l,m=c!=null&&!!s.transposedVariableName;if(this._slices&&!m&&s.sliceId==null)return null;let f=m?0:l.maximumPyramidLevel-t+this._levelOffset,u=`${this.url}/tile/${f}/${e}/${r}`,p=this._slices?m?{variable:s.transposedVariableName}:{sliceId:s.sliceId||0}:null,{data:g}=yield this.request(u,{query:p,responseType:"array-buffer",signal:s.signal});if(!g)return null;let d=m?c.tileSize:l.tileInfo.size,w=yield this.decodePixelBlock(g,{width:d[0],height:d[1],planes:null,pixelType:null,isPoint:this.tileType==="Elevation",returnInterleaved:m,noDataValue:this.rasterInfo.noDataValue});if(w==null)return null;let h=l.blockBoundary[t];if(l.compression!=="jpg"||r>h.minCol&&r<h.maxCol&&e>h.minRow&&e<h.maxRow)return w;let{origin:x,blockWidth:y,blockHeight:I}=l,{x:b,y:O}=this.getPyramidPixelSize(t),S=Math.round((n.xmin-x.x)/b)%y,F=Math.round((n.xmax-x.x)/b)%y||y,E=Math.round((x.y-n.ymax)/O)%I,R=Math.round((x.y-n.ymin)/O)%I||I,M=r===h.minCol?S:0,k=e===h.minRow?E:0,P=r===h.maxCol?F:y,N=e===h.maxRow?R:I;return Ct(w,{x:M,y:k},{width:P-M,height:N-k}),w})}getSliceIndex(t){if(!this._slices||t==null||t.length===0)return null;let e=t;for(let r=0;r<this._slices.length;r++){let s=this._slices[r].multidimensionalDefinition;if(s.length===e.length&&!s.some(i=>{let o=e.find(a=>i.variableName===a.variableName&&a.dimensionName===i.dimensionName);return o?(Array.isArray(i.values[0])?`${i.values[0][0]}-${i.values[0][1]}`:i.values[0])!==(Array.isArray(o.values[0])?`${o.values[0][0]}-${o.values[0][1]}`:o.values[0]):!0}))return r}return null}fetchVariableStatisticsHistograms(t,e){return T(this,null,function*(){let r=this.request(this.url+"/statistics",{query:{variable:t,f:"json"},signal:e}).then(o=>o.data?.statistics),s=this.request(this.url+"/histograms",{query:{variable:t,f:"json"},signal:e}).then(o=>o.data?.histograms),i=yield Promise.all([r,s]);return i[0]&&i[0].forEach(o=>{o.avg=o.mean,o.stddev=o.standardDeviation}),i[1]?.[0]?.counts?.length||(i[1]=null),{statistics:i[0]||null,histograms:i[1]||null}})}computeBestPyramidLevelForLocation(r){return T(this,arguments,function*(t,e={}){if(!this._tilemapCache)return 0;let s=this.identifyPixelLocation(t,0,e.datumTransformation);if(s===null)return null;let i=0,{maximumPyramidLevel:o}=this.rasterInfo.storageInfo,a=o-i+this._levelOffset,l=s.srcLocation;for(;a>=0;){try{if((yield this._tilemapCache.fetchAvailability(a,s.row,s.col,e))==="available")break}catch{}if(a--,i++,s=this.identifyPixelLocation(l,i,e.datumTransformation),s===null)return null}return a===-1||s==null?null:i})}_open(t){return T(this,null,function*(){let e=t?.signal,r=this.sourceJSON?{data:this.sourceJSON}:yield this.request(this.url,{query:{f:"json"},signal:e});r.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let s=r.data;if(this.sourceJSON=s,!s)throw new _("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!s.tileInfo)throw new _("imageserverraster:open","use ImageryLayer to open non-tiled image services");this._fixScaleInServiceInfo();let i=["jpg","jpeg","png","png8","png24","png32","mixed"];this.tileType=s.cacheType,this.tileType==null&&(i.includes(s.tileInfo.format.toLowerCase())?this.tileType="Map":s.tileInfo.format.toLowerCase()==="lerc"?this.tileType="Elevation":this.tileType="Raster"),this.datasetName=s.name?.slice(s.name.indexOf("/")+1)??"";let o=yield this._fetchRasterInfo({signal:e});if(o==null)throw new _("image-server-raster:open","cannot initialize image service");Nt(o,s);let a=this.tileType==="Map"?Qt(s.tileInfo,s):pe.fromJSON(s.tileInfo);Le(a);let[l,n]=this._computeMinMaxLOD(o,a),{extent:c,pixelSize:m}=o,f=.5/o.width*m.x,u=Math.max(m.x,m.y),{lods:p}=a;(this.tileType!=="Map"&&s.maxScale!==0||Math.abs(m.x-m.y)>f||!p.some(S=>Math.abs(S.resolution-u)<f))&&(m.x=m.y=l.resolution,o.width=Math.ceil((c.xmax-c.xmin)/m.x-.1),o.height=Math.ceil((c.ymax-c.ymin)/m.y-.1));let g=l.level-n.level,[d,w]=a.size,h=[],x=[];p.forEach((S,F)=>{S.level>=n.level&&S.level<=l.level&&h.push({x:S.resolution,y:S.resolution}),F<p.length-1&&x.push(Math.round(10*S.resolution/p[F+1].resolution)/10)}),h.sort((S,F)=>S.x-F.x);let y=this.computeBlockBoundary(c,d,w,a.origin,h,g),I=h.length>1?h.slice(1):null,b;s.transposeInfo&&(b={tileSize:[s.transposeInfo.rows,s.transposeInfo.cols],packetSize:o.keyProperties?._yxs.PacketSize??0});let O=x.length<=1||x.length>=3&&x.slice(0,-1).every(S=>S===x[0])?x[0]??2:Math.round(10/(n.resolution/l.resolution)**(-1/g))/10;if(o.storageInfo=new Z({blockWidth:a.size[0],blockHeight:a.size[1],pyramidBlockWidth:a.size[0],pyramidBlockHeight:a.size[1],pyramidResolutions:I,pyramidScalingFactor:O,compression:a.format,origin:a.origin,firstPyramidLevel:1,maximumPyramidLevel:g,tileInfo:a,transposeInfo:b,blockBoundary:y}),Zt(o),this._set("rasterInfo",o),s.capabilities.toLowerCase().includes("tilemap")){let S={tileInfo:o.storageInfo.tileInfo,parsedUrl:Ge(this.url),url:this.url,tileServers:[]};this._tilemapCache=new nt({layer:S})}})}_fetchRasterInfo(t){return T(this,null,function*(){let e=this.sourceJSON;if(this.tileType==="Map"){let a=e.fullExtent||e.extent,l=Math.ceil((a.xmax-a.xmin)/e.pixelSizeX-.1),n=Math.ceil((a.ymax-a.ymin)/e.pixelSizeY-.1),c=A.fromJSON(e.spatialReference||a.spatialReference),m=new W({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:c});return new $({width:l,height:n,bandCount:3,extent:z.fromJSON(a),spatialReference:c,pixelSize:m,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}let{signal:r}=t,s=kt(this.url,this.sourceJSON,{signal:r,query:this.ioConfig.customFetchParameters}),i=e.hasMultidimensions?this.request(`${this.url}/slices`,{query:{f:"json"},signal:r}).then(a=>a.data?.slices).catch(()=>null):null,o=yield Promise.all([s,i]);return this._slices=o[1],o[0]})}_fixScaleInServiceInfo(){let{sourceJSON:t}=this;t.minScale&&t.minScale<0&&(t.minScale=0),t.maxScale&&t.maxScale<0&&(t.maxScale=0)}_computeMinMaxLOD(t,e){let{pixelSize:r}=t,s=.5/t.width*r.x,{lods:i}=e,o=e.lodAt(Math.max.apply(null,i.map(u=>u.level))),a=e.lodAt(Math.min.apply(null,i.map(u=>u.level))),{tileType:l}=this;if(l==="Map")return this._levelOffset=i[0].level,[o,a];if(l==="Raster")return[i.find(u=>u.resolution===r.x)??o,a];let{minScale:n,maxScale:c}=this.sourceJSON,m=o;c>0&&(m=i.find(u=>Math.abs(u.scale-c)<s),m||(m=i.filter(u=>u.scale>c).sort((u,p)=>u.scale>p.scale?1:-1)[0]??o));let f=a;return n>0&&(f=i.find(u=>Math.abs(u.scale-n)<s)??a,this._levelOffset=f.level-a.level),[m,f]}};function Qt(t,e){if(!t)return null;let{minScale:r,maxScale:s,minLOD:i,maxLOD:o}=e;if(i!=null&&o!=null)return pe.fromJSON(H(D({},t),{lods:t.lods.filter(({level:a})=>a!=null&&a>=i&&a<=o)}));if(r!==0&&s!==0){let a=c=>Math.round(1e4*c)/1e4,l=r?a(r):1/0,n=s?a(s):-1/0;return pe.fromJSON(H(D({},t),{lods:t.lods.filter(c=>{let m=a(c.scale);return m<=l&&m>=n})}))}return pe.fromJSON(t)}function Zt(t){let{extent:e,spatialReference:r}=t;e.xmin>-1&&e.xmax>181&&r?.wkid&&r.isGeographic&&(t.nativeExtent=t.extent,t.transform=new Jt,t.extent=t.transform.forwardTransform(e))}v([C({type:String,json:{write:!0}})],ge.prototype,"datasetFormat",void 0),v([C()],ge.prototype,"tileType",void 0),ge=v([J("esri.layers.support.rasterDatasets.ImageServerRaster")],ge);var Gt=ge;var q=new Map;q.set("Int8","s8"),q.set("UInt8","u8"),q.set("Int16","s16"),q.set("UInt16","u16"),q.set("Int32","s32"),q.set("UInt32","u32"),q.set("Float32","f32"),q.set("Float64","f32"),q.set("Double64","f32");var X=new Map;X.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),X.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),X.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),X.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});var oe=class extends G{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}fetchRawTile(i,o,a){return T(this,arguments,function*(t,e,r,s={}){let{blockWidth:l,blockHeight:n,blockBoundary:c}=this.rasterInfo.storageInfo,m=c[t];if(!m||m.maxRow<e||m.maxCol<r||m.minRow>e||m.minCol>r)return null;let{bandCount:f,pixelType:u}=this.rasterInfo,{ranges:p,actualTileWidth:g,actualTileHeight:d}=this._getTileLocation(t,e,r);if(!p||p.length===0)return null;if(p[0].from===0&&p[0].to===0){let N=new Uint8Array(l*n);return new Q({width:l,height:n,pixels:void 0,mask:N,validPixelCount:0})}let{bandIds:w}=this.ioConfig,h=this._getBandSegmentCount(),x=[],y=0;for(y=0;y<h;y++)w&&!w.includes(y)||x.push(this.request(this._files.data,{range:{from:p[y].from,to:p[y].to},responseType:"array-buffer",signal:s.signal}));let I=yield Promise.all(x),b=I.map(N=>N.data.byteLength).reduce((N,U)=>N+U),O=new Uint8Array(b),S=[],F=0;for(y=0;y<h;y++)S.push(F),O.set(new Uint8Array(I[y].data),F),F+=I[y].data.byteLength;let E=X.get(this.rasterInfo.storageInfo.compression).decoderFormat,R=yield this.decodePixelBlock(O.buffer,{width:l,height:n,format:E,planes:w?.length||f,offsets:S,pixelType:u});if(R==null)return null;let{noDataValue:M}=this.rasterInfo;if(M!=null&&E!=="lerc"&&!R.mask&&(M=M[0],M!=null)){let N=R.width*R.height,U=new Uint8Array(N);if(Math.abs(M)>1e24)for(y=0;y<N;y++)Math.abs((R.pixels[0][y]-M)/M)>1e-6&&(U[y]=1);else for(y=0;y<N;y++)R.pixels[0][y]!==M&&(U[y]=1);R.mask=U}let k=0,P=0;if(g!==l||d!==n){let N=R.mask;if(N)for(y=0;y<n;y++)if(P=y*l,y<d)for(k=g;k<l;k++)N[P+k]=0;else for(k=0;k<l;k++)N[P+k]=0;else for(N=new Uint8Array(l*n),R.mask=N,y=0;y<d;y++)for(P=y*l,k=0;k<g;k++)N[P+k]=1}return R})}_open(t){return T(this,null,function*(){this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1);let e=t?t.signal:null,r=yield this.request(this.url,{responseType:"xml",signal:e}),{rasterInfo:s,files:i}=this._parseHeader(r.data),{skipMapInfo:o,skipExtensions:a=[]}=this.ioConfig;if(!a.includes("aux.xml")&&!o){let h=yield this._fetchAuxiliaryData(t);h!=null&&(s.statistics=h.statistics??s.statistics,s.histograms=h.histograms,h.histograms&&s.statistics==null&&(s.statistics=ee(h.histograms)))}o&&this.updateImageSpaceRasterInfo(s),this._set("rasterInfo",s),this._files=i;let l=yield this.request(i.index,{responseType:"array-buffer",signal:e});this._storageIndex=es(l.data);let{blockWidth:n,blockHeight:c}=this.rasterInfo.storageInfo,m=this.rasterInfo.storageInfo.pyramidScalingFactor,{width:f,height:u}=this.rasterInfo,p=[],g=this._getBandSegmentCount(),d=0,w=-1;for(;d<this._storageIndex.length;){w++;let h=Math.ceil(f/n/m**w)-1,x=Math.ceil(u/c/m**w)-1;d+=(h+1)*(x+1)*g*4,p.push({maxRow:x,maxCol:h,minCol:0,minRow:0})}this.rasterInfo.storageInfo.blockBoundary=p,w>0&&(this.rasterInfo.storageInfo.firstPyramidLevel=1,this.rasterInfo.storageInfo.maximumPyramidLevel=w),this.updateTileInfo()})}_getBandSegmentCount(){return X.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(t,e,r){let{blockWidth:s,blockHeight:i,pyramidScalingFactor:o}=this.rasterInfo.storageInfo,{width:a,height:l}=this.rasterInfo,n=this._getBandSegmentCount(),c,m,f,u=0,p=0;for(f=0;f<t;f++)p=o**f,c=Math.ceil(a/s/p),m=Math.ceil(l/i/p),u+=c*m;p=o**t,c=Math.ceil(a/s/p),m=Math.ceil(l/i/p),u+=e*c+r,u*=4*n;let g=this._storageIndex.subarray(u,u+4*n),d=0,w=0,h=[];for(let x=0;x<n;x++)d=g[4*x]*2**32+g[4*x+1],w=d+g[4*x+2]*2**32+g[4*x+3],h.push({from:d,to:w});return{ranges:h,actualTileWidth:r<c-1?s:Math.ceil(a/p)-s*(c-1),actualTileHeight:e<m-1?i:Math.ceil(l/p)-i*(m-1)}}_parseHeader(t){let e=j(t,"MRF_META/Raster");if(!e)throw new _("mrf:open","not a valid MRF format");let r=j(e,"Size"),s=parseInt(r.getAttribute("x"),10),i=parseInt(r.getAttribute("y"),10),o=parseInt(r.getAttribute("c"),10),a=(V(e,"Compression")||"none").toLowerCase();if(!X.has(a))throw new _("mrf:open","currently does not support compression "+a);let l=V(e,"DataType")||"UInt8",n=q.get(l);if(n==null)throw new _("mrf:open","currently does not support pixel type "+l);let c=j(e,"PageSize"),m=parseInt(c.getAttribute("x"),10),f=parseInt(c.getAttribute("y"),10),u=j(e,"DataValues"),p,g;if(u&&(g=u.getAttribute("NoData"),g!=null&&(p=g.trim().split(" ").map(M=>parseFloat(M)))),j(t,"MRF_META/CachedSource"))throw new _("mrf:open","currently does not support MRF referencing other data files");let d=j(t,"MRF_META/GeoTags"),w=j(d,"BoundingBox"),h,x=!1;if(w!=null){let M=parseFloat(w.getAttribute("minx")),k=parseFloat(w.getAttribute("miny")),P=parseFloat(w.getAttribute("maxx")),N=parseFloat(w.getAttribute("maxy")),U=V(d,"Projection")||"",xe=A.WGS84;if(U!=="LOCAL_CS[]")if(U.toLowerCase().startsWith("epsg:")){let Re=Number(U.slice(5));isNaN(Re)||Re===0||(xe=new A({wkid:Re}))}else xe=ie(U)??A.WGS84;else x=!0,xe=new A({wkid:3857});h=new z(M,k,P,N),h.spatialReference=xe}else x=!0,h=new z({xmin:-.5,ymin:.5-i,xmax:s-.5,ymax:.5,spatialReference:new A({wkid:3857})});let y=j(t,"MRF_META/Rsets"),I=parseInt(y?.getAttribute("scale")||"2",10),b=h.spatialReference,O=new Z({origin:new W({x:h.xmin,y:h.ymax,spatialReference:b}),blockWidth:m,blockHeight:f,pyramidBlockWidth:m,pyramidBlockHeight:f,compression:a,pyramidScalingFactor:I}),S=new W({x:h.width/s,y:h.height/i,spatialReference:b}),F=new $({width:s,height:i,extent:h,isPseudoSpatialReference:x,spatialReference:b,bandCount:o,pixelType:n,pixelSize:S,noDataValue:p,storageInfo:O}),E=V(t,"datafile"),R=V(t,"IndexFile");return{rasterInfo:F,files:{mrf:this.url,index:R||this.url.replace(".mrf",".idx"),data:E||this.url.replace(".mrf",X.get(a).blobExtension)}}}_fetchAuxiliaryData(t){return T(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return ae(e)}catch{return null}})}};function es(t){if(t.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,r,s,i,o,a;if(wt){for(r=new Uint8Array(t),i=new ArrayBuffer(t.byteLength),s=new Uint8Array(i),o=0;o<t.byteLength/4;o++)for(a=0;a<4;a++)s[4*o+a]=r[4*o+3-a];e=new Uint32Array(i)}else e=new Uint32Array(t);return e}v([C()],oe.prototype,"_files",void 0),v([C()],oe.prototype,"_storageIndex",void 0),v([C({type:String,json:{write:!0}})],oe.prototype,"datasetFormat",void 0),oe=v([J("esri.layers.support.rasterDatasets.MRFRaster")],oe);var jt=oe;function ts(t){let e=t.fields,r=t.records,s=e.some(c=>c.name.toLowerCase()==="oid")?"OBJECTID":"OID",i=[{name:s,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),o=i.map(c=>c.name),a=[],l=0,n=0;return r.forEach(c=>{let m={};for(m[s]=l++,n=1;n<o.length;n++)m[o[n]]=c[n-1];a.push({attributes:m})}),{displayFieldName:"",fields:i,features:a}}var Te=class{static get supportedVersions(){return[5]}static parse(e){let r=new DataView(e),s=3&r.getUint8(0);if(s!==3)return{header:{version:s},recordSet:null};let i=r.getUint32(4,!0),o=r.getUint16(8,!0),a=r.getUint16(10,!0),l={version:s,recordCount:i,headerByteCount:o,recordByteCount:a},n=32,c=[],m=[],f;if(s===3){for(;r.getUint8(n)!==13;)f=String.fromCharCode(r.getUint8(n+11)).trim(),c.push({name:Ce(new Uint8Array(e,n,11)),type:f,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(f)],length:r.getUint8(n+16)}),n+=32;if(n+=1,c.length>0)for(;m.length<i&&e.byteLength-n>a;){let u=[];r.getUint8(n)===32?(n+=1,c.forEach(p=>{if(p.type==="C")u.push(Ce(new Uint8Array(e,n,p.length)).trim());else if(p.type==="N")u.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,n,p.length)).trim(),10));else if(p.type==="F")u.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,n,p.length)).trim()));else if(p.type==="D"){let g=String.fromCharCode.apply(null,new Uint8Array(e,n,p.length)).trim();u.push(new Date(parseInt(g.slice(0,4),10),parseInt(g.slice(4,6),10)-1,parseInt(g.slice(6,8),10)))}n+=p.length}),m.push(u)):n+=a}}return{header:l,fields:c,records:m,recordSet:ts({fields:c,records:m})}}};var Ae=(t,e)=>t.get(e)?.values,ye=(t,e)=>t.get(e)?.values?.[0],K=class extends G{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}fetchRawTile(i,o,a){return T(this,arguments,function*(t,e,r,s={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(t,e,r))return null;let l=yield this._fetchRawTiffTile(t,e,r,!1,s);if(l!=null&&this._headerInfo.hasMaskBand){let n=yield this._fetchRawTiffTile(t,e,r,!0,s);n!=null&&n.pixels[0]instanceof Uint8Array&&(l.mask=n.pixels[0])}return l})}_open(t){return T(this,null,function*(){let e=t?t.signal:null,{data:r}=yield this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:e});if(!r)throw new _("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));let{littleEndian:s,firstIFDPos:i,isBigTiff:o}=Rt(r),a=[];yield this._readIFDs(a,r,s,i,0,o?8:4,e);let{imageInfo:l,rasterInfo:n}=ss(a),c=vt(a),m=Tt(a);if(this._headerInfo=D({littleEndian:s,isBigTiff:o,ifds:a,pyramidIFDs:c,maskIFDs:m},l),this._set("rasterInfo",n),!l.isSupported)throw new _("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new _("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");n.isPseudoSpatialReference&&me.getLogger(this).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");let f=a[0].get("PREDICTOR")?.values?.[0];if(a[0].get("SAMPLEFORMAT")?.values?.[0]===3&&f===2)throw new _("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");let{skipMapInfo:p,skipExtensions:g=[]}=this.ioConfig;if(!g.includes("aux.xml")&&!p){let d=yield this._fetchAuxiliaryMetaData(t);d!=null&&rs(d,n)}g.includes("vat.dbf")||n.bandCount!==1||n.pixelType!=="u8"||p||(n.attributeTable=yield this._fetchAuxiliaryTable(t),n.attributeTable!=null&&(n.keyProperties.DataType="thematic")),p&&this.updateImageSpaceRasterInfo(n),this.updateTileInfo()})}_readIFDs(t,e,r,s,i,o=4,a){return T(this,null,function*(){if(!s)return null;(s>=e.byteLength||s<0)&&(e=(yield this.request(this.url,{range:{from:s+i,to:s+i+this._bufferSize},responseType:"array-buffer",signal:a})).data,i=s+i,s=0);let l=yield this._readIFD(e,r,s,i,ue.tiffTags,o,a);if(t.push(l.ifd),!l.nextIFD)return null;yield this._readIFDs(t,e,r,l.nextIFD-i,i,o,a)})}_readIFD(l,n,c,m){return T(this,arguments,function*(t,e,r,s,i=ue.tiffTags,o=4,a){if(!t)return null;let f=_t(t,e,r,s,i,o);if(f.success){let u=[];if(f.ifd?.forEach(p=>{p.values||u.push(p)}),u.length>0){let p=u.map(d=>d.offlineOffsetSize).filter(le),g=Math.min.apply(null,p.map(d=>d[0]));if(Math.min.apply(null,p.map(d=>d[0]+d[1]))-g<=this._bufferSize){let{data:d}=yield this.request(this.url,{range:{from:g,to:g+this._bufferSize},responseType:"array-buffer",signal:a});t=d,s=g,u.forEach(w=>It(t,e,w,s))}}if(f.ifd?.has("GEOKEYDIRECTORY")){let p=f.ifd.get("GEOKEYDIRECTORY"),g=p?.values;if(g&&g.length>4){let d=g[0]+"."+g[1]+"."+g[2],w=yield this._readIFD(t,e,p.valueOffset+6-s,s,ue.geoKeys,2,a);p.data=w.ifd,p.data&&p.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return f}if(f.requiredBufferSize&&f.requiredBufferSize!==t.byteLength)return(t=(yield this.request(this.url,{range:{from:s,to:s+f.requiredBufferSize+4},responseType:"array-buffer",signal:a})).data).byteLength<f.requiredBufferSize?null:this._readIFD(t,e,0,s,ue.tiffTags,4,a)})}_fetchRawTiffTile(o,a,l,n){return T(this,arguments,function*(t,e,r,s,i={}){let c=this._getTileLocation(t,e,r,s);if(!c)return null;let{ranges:m,actualTileWidth:f,actualTileHeight:u,ifd:p}=c,g=m.map(R=>this.request(this.url,{range:R,responseType:"array-buffer",signal:i.signal})),d=yield Promise.all(g),w=d.map(R=>R.data.byteLength).reduce((R,M)=>R+M),h=d.length===1?d[0].data:new ArrayBuffer(w),x=[0],y=[0];if(d.length>1){let R=new Uint8Array(h);for(let M=0,k=0;M<d.length;M++){let P=d[M].data;R.set(new Uint8Array(P),k),x[M]=k,k+=P.byteLength,y[M]=P.byteLength}}let{blockWidth:I,blockHeight:b}=this.getBlockWidthHeight(t),O=yield this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:p,offsets:x,sizes:y},width:I,height:b,planes:null,pixelType:null});if(O==null)return null;let S,F,E;if(f!==I||u!==b){let R=O.mask;if(R)for(S=0;S<b;S++)if(E=S*I,S<u)for(F=f;F<I;F++)R[E+F]=0;else for(F=0;F<I;F++)R[E+F]=0;else for(R=new Uint8Array(I*b),O.mask=R,S=0;S<u;S++)for(E=S*I,F=0;F<f;F++)R[E+F]=1}return O})}_getTileLocation(t,e,r,s=!1){let{firstPyramidLevel:i,blockBoundary:o}=this.rasterInfo.storageInfo,a=t===0?0:t-(i-1),{_headerInfo:l}=this;if(!l)return null;let n=s?l.maskIFDs[a]:a===0?l?.ifds[0]:l?.pyramidIFDs[a-1];if(!n)return null;let c=St(n,l),m=Ae(n,"TILEOFFSETS");if(m===void 0)return null;let f=Ae(n,"TILEBYTECOUNTS"),{minRow:u,minCol:p,maxRow:g,maxCol:d}=o[a];if(e>g||r>d||e<u||r<p)return null;let w=ye(n,"IMAGEWIDTH"),h=ye(n,"IMAGELENGTH"),x=ye(n,"TILEWIDTH"),y=ye(n,"TILELENGTH"),I=[];if(c){let{bandCount:b}=this.rasterInfo;for(let O=0;O<b;O++){let S=O*(g+1)*(d+1)+e*(d+1)+r;I[O]={from:m[S],to:m[S]+f[S]-1}}}else{let b=e*(d+1)+r;I.push({from:m[b],to:m[b]+f[b]-1})}for(let b=0;b<I.length;b++)if(I[b].from==null||!I[b].to||I[b].to<0)return null;return{ranges:I,ifd:n,actualTileWidth:r===d&&w%x||x,actualTileHeight:e===g&&h%y||y}}_fetchAuxiliaryMetaData(t){return T(this,null,function*(){try{let{data:e}=yield this.request(this.url+".aux.xml",{responseType:"xml",signal:t?.signal});return ae(e)}catch{return null}})}_fetchAuxiliaryTable(t){return T(this,null,function*(){try{let{data:e}=yield this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:t?.signal}),r=Te.parse(e);return r?.recordSet?Ie.fromJSON(r.recordSet):null}catch{return null}})}};function ss(t){let e=bt(t),{width:r,height:s,tileWidth:i,tileHeight:o,planes:a,pixelType:l,compression:n,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidBlockWidth:f,pyramidBlockHeight:u,pyramidResolutions:p,tileBoundary:g,affine:d,metadata:w}=e,h=e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid,x=ie(h),y=!!e.isPseudoGeographic;x==null&&(y=!0,x=new A({wkid:3857}));let I=new z(H(D({},e.extent),{spatialReference:x})),b=new W(I?{x:I.xmin,y:I.ymax,spatialReference:x}:{x:0,y:0}),O=new Z({blockWidth:i,blockHeight:o,pyramidBlockWidth:f,pyramidBlockHeight:u,compression:n,origin:b,firstPyramidLevel:c,maximumPyramidLevel:m,pyramidResolutions:p,blockBoundary:g}),S=new W({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/s,spatialReference:x}),F=w?{BandProperties:w.bandProperties,DataType:w.dataType}:{},E=null,R=ye(t[0],"PHOTOMETRICINTERPRETATION"),M=Ae(t[0],"COLORMAP");if(R<=3&&M?.length>3&&M.length%3==0){E=[];let P=M.length/3;for(let N=0;N<P;N++)E.push([N,M[N]>>>8,M[N+P]>>>8,M[N+2*P]>>>8])}let k=new $({width:r,height:s,bandCount:a,pixelType:l,pixelSize:S,storageInfo:O,spatialReference:x,isPseudoSpatialReference:y,keyProperties:F,extent:I,colormap:E,statistics:w?w.statistics:null});if(d?.length&&(k.nativeExtent=new z({xmin:-.5,ymin:.5-s,xmax:r-.5,ymax:.5,spatialReference:x}),k.transform=new te({polynomialOrder:1,forwardCoefficients:[d[2]+d[0]/2,d[5]-d[3]/2,d[0],d[3],-d[1],-d[4]]}),k.extent=k.transform.forwardTransform(k.nativeExtent),k.pixelSize=new W({x:(I.xmax-I.xmin)/r,y:(I.ymax-I.ymin)/s,spatialReference:x}),O.origin.x=-.5,O.origin.y=.5),p){let{x:P,y:N}=k.pixelSize;p.forEach(U=>{U.x*=P,U.y*=N})}return{imageInfo:e,rasterInfo:k}}function rs(t,e){if(e.statistics=t.statistics??e.statistics,e.histograms=t.histograms,t.histograms&&e.statistics==null&&(e.statistics=ee(t.histograms)),t.transform&&e.transform==null){e.transform=t.transform,e.nativeExtent=e.extent;let r=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W({x:(r.xmax-r.xmin)/e.width,y:(r.ymax-r.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=r}e.isPseudoSpatialReference&&t.spatialReference&&(e.spatialReference=t.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}v([C()],K.prototype,"_files",void 0),v([C()],K.prototype,"_headerInfo",void 0),v([C()],K.prototype,"_bufferSize",void 0),v([C({type:String,json:{write:!0}})],K.prototype,"datasetFormat",void 0),K=v([J("esri.layers.support.rasterDatasets.TIFFRaster")],K);var Vt=K;var L=new Map;L.set("MRF",{desc:"Meta Raster Format",constructor:jt}),L.set("TIFF",{desc:"GeoTIFF",constructor:Vt}),L.set("RasterTileServer",{desc:"Raster Tile Server",constructor:Gt}),L.set("JPG",{desc:"JPG Raster Format",constructor:de}),L.set("PNG",{desc:"PNG Raster Format",constructor:de}),L.set("GIF",{desc:"GIF Raster Format",constructor:de}),L.set("BMP",{desc:"BMP Raster Format",constructor:de}),L.set("CovJSON",{desc:"COVJSON Raster Format",constructor:Ut}),L.set("MEMORY",{desc:"In Memory Raster Format",constructor:re});var ne=class{static get supportedFormats(){let e=new Set;return L.forEach((r,s)=>e.add(s)),e}static open(e){return T(this,null,function*(){let{url:r,ioConfig:s,source:i,sourceJSON:o}=e,a=e.datasetFormat??s?.datasetFormat;a==null&&(r.includes(".")?a=r.slice(r.lastIndexOf(".")+1).toUpperCase():i?.type?.toLowerCase()==="coverage"?a="CovJSON":i?.extent&&i.pixelblocks&&(a="MEMORY")),a==="OVR"||a==="TIF"?a="TIFF":a==="JPG"||a==="JPEG"||a==="JFIF"?a="JPG":a==="COVJSON"&&(a="CovJSON"),r.toLowerCase().includes("/imageserver")&&!r.toLowerCase().includes("/wcsserver")&&(a="RasterTileServer");let l={url:r,source:i,sourceJSON:o,datasetFormat:a,ioConfig:s??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(f=>{l[f]==null&&delete l[f]}),a){if(!this.supportedFormats.has(a))throw new _("rasterfactory:open","not a supported format "+a);if(a==="CRF")throw new _("rasterfactory:open",`cannot open raster: ${r}`);let f=new(L.get(a)).constructor(l);return yield f.open({signal:e.signal}),f}let n=Array.from(L.keys()).filter(f=>f!=="CovJSON"&&f!=="Memory"),c=0,m=()=>{if(a=n[c++],!a||a==="CRF")return null;let f=new(L.get(a)).constructor(l);return f.open({signal:e.signal}).then(()=>f).catch(()=>m())};return m()})}static register(e,r,s){L.has(e.toUpperCase())||L.set(e.toUpperCase(),{desc:r,constructor:s})}};var B=class extends $e(Qe(Xe(Ke(Et(it(Lt(at(rt(et(qe(He.ClonableMixin(Ze)))))))))))){constructor(...t){super(...t),this._primaryRasters=[],this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=Ue((e,r,s)=>T(this,null,function*(){let{save:i,saveAs:o}=yield import("./chunk-FKF4U6QM.js");switch(e){case ce.SAVE:return i(this,r);case ce.SAVE_AS:return o(this,s,r)}}))}normalizeCtorArgs(t,e){return typeof t=="string"?D({url:t},e):t}load(t){let e=t!=null?t.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},t).catch(ze).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){let t=[pt("Pixel Value"),ut("Raw Pixel Value")],e=this.raster?.rasterInfo??this.serviceRasterInfo,r=e?.attributeTable;if(r){let o=dt(r);t.push(...o)}let s=e?.dataType,i=e?.multidimensionalInfo;if((s==="vector-magdir"||s==="vector-uv")&&i!=null){let o=i.variables[0].unit?.trim(),a=ft(o),l=ht();t.push(a,l)}if(i){let o=gt(i);t.push(...o)}return t}createPopupTemplate(t){let{rasterFields:e}=this,r=t?.visibleFieldNames??new Set(e.map(({name:o})=>o).filter(o=>o!==ct.rawServicePixelValue)),s=ot({fields:e,title:this.title},H(D({},t),{visibleFieldNames:r})),{rasterInfo:i}=this.raster;return s?.fieldInfos&&i&&yt(s.fieldInfos,i),s}generateRasterInfo(t,e){return T(this,null,function*(){if(t=De(Fe,t),yield this.load(),!t||t.functionName?.toLowerCase()==="none")return this.serviceRasterInfo;try{let{rasterInfo:r}=yield this._openFunctionRaster(t,e);return r}catch(r){throw r instanceof _?r:new _("imagery-tile-layer","the given raster function is not supported")}})}save(t){return T(this,null,function*(){return this._debouncedSaveOperations(ce.SAVE,t)})}saveAs(t,e){return T(this,null,function*(){return this._debouncedSaveOperations(ce.SAVE_AS,e,t)})}write(t,e){let r=this._primaryRasters[0]??this.raster;if(this.loaded?r.datasetFormat==="RasterTileServer"&&(r.tileType==="Raster"||r.tileType==="Map"):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))return super.write(t,e);if(e?.messages){let s=`${e.origin}/${e.layerContainerType||"operational-layers"}`;e.messages.push(new _("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${s}'`,{layer:this}))}return null}_openRaster(t){return T(this,null,function*(){let e=!1;if(this.raster)yield this._openFromRaster(this.raster,t),e=this.raster.datasetFormat==="Function",!e&&this.rasterFunction&&(this._primaryRasters=[this.raster],yield this._initializeWithFunctionRaster(this.rasterFunction));else{let{url:s,rasterFunction:i,source:o}=this;if(!s&&!o)throw new _("imagery-tile-layer:open","missing url or source parameter");o?yield this._openFromSource(o,t):i?yield this._openFromUrlWithRasterFunction(s,i,t):yield this._openFromUrl(s,t)}let r=this.raster.rasterInfo;if(!r)throw new _("imagery-tile-layer:load","cannot load resources on "+this.url);if(this._set("serviceRasterInfo",e?r:this._primaryRasters[0].rasterInfo),this._set("spatialReference",r.spatialReference),this.sourceJSON=this.sourceJSON||this.raster.sourceJSON,this.sourceJSON!=null){let s=this.raster.tileType==="Map"&&this.sourceJSON.minLOD!=null&&this.sourceJSON.maxLOD!=null?this.sourceJSON:H(D({},this.sourceJSON),{minScale:0,maxScale:0});this.read(s,{origin:"service"})}else this.read({tileInfo:this.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});this.title||(this.title=this.raster.datasetName),this.raster.tileType==="Map"&&(this.popupEnabled=!1),this._configDefaultSettings(),this.addHandles(Ve(()=>this.customParameters,s=>{this.raster&&(this.raster.ioConfig.customFetchParameters=s)}))})}_openFromRaster(t,e){return T(this,null,function*(){t.rasterInfo||(yield t.open({signal:e})),this._primaryRasters=t.datasetFormat==="Function"?t.primaryRasters.rasters:[t],this.url||(this.url=this._primaryRasters[0].url)})}_openFromUrlWithRasterFunction(t,e,r){return T(this,null,function*(){let s=[t];e&&Bt(e.toJSON(),s);let i=yield Promise.all(s.map(a=>ne.open({url:a,sourceJSON:this.sourceJSON,ioConfig:H(D({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:r}))),o=i.findIndex(a=>a==null);if(o>-1)throw new _("imagery-tile-layer:open",`cannot open raster: ${s[o]}`);return this._primaryRasters=i,this._initializeWithFunctionRaster(e)})}_openFromUrl(t,e){return T(this,null,function*(){let r=yield ne.open({url:t,sourceJSON:this.sourceJSON,ioConfig:H(D({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});if(r==null)throw new _("imagery-tile-layer:open",`cannot open raster: ${t}`);this._primaryRasters=[r],this.raster=r})}_openFromSource(t,e){return T(this,null,function*(){let r="the tiled imagery data source is not supported",s=t.type?.toLowerCase()==="coverage"?"CovJSON":t.extent&&t.pixelBlock?"MEMORY":null;if(!s)throw new _("imagery-tile-layer:open",r);s==="MEMORY"&&(t=H(D({},t),{pixelBlock:void 0,pixelBlocks:[t.pixelBlock]}));let i=yield ne.open({url:"",source:t,datasetFormat:s,ioConfig:H(D({sampling:"closest"},this.ioConfig),{customFetchParameters:this.customParameters}),signal:e});if(i==null)throw new _("imagery-tile-layer:open",r);this._primaryRasters=[i],this.rasterFunction?yield this._initializeWithFunctionRaster(this.rasterFunction):this.raster=i})}_openFunctionRaster(t,e){return T(this,null,function*(){let r={raster:this._primaryRasters[0]};this._primaryRasters.length>1&&this._primaryRasters.forEach(o=>r[o.url]=o);let s=Dt(t.functionDefinition?.toJSON()??t.toJSON(),r),i=new At({rasterFunction:s});return yield i.open(e),i})}_initializeWithFunctionRaster(t,e){return T(this,null,function*(){try{this.raster=yield this._openFunctionRaster(t,e)}catch(r){r instanceof _&&me.getLogger(this).error("imagery-tile-layer:open",r.message),me.getLogger(this).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),this._set("rasterFunction",null),this.raster=this._primaryRasters[0]}})}};v([C({clonable:!1})],B.prototype,"_primaryRasters",void 0),v([C(Ye)],B.prototype,"legendEnabled",void 0),v([C({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],B.prototype,"isReference",void 0),v([C({type:["show","hide"]})],B.prototype,"listMode",void 0),v([C({json:{read:!0,write:!0}})],B.prototype,"blendMode",void 0),v([C({type:Fe,json:{name:"renderingRule",write:!0}})],B.prototype,"rasterFunction",void 0),v([C()],B.prototype,"sourceJSON",void 0),v([C({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],B.prototype,"version",void 0),v([C({readOnly:!0,json:{read:!1}})],B.prototype,"type",void 0),v([C({type:["ArcGISTiledImageServiceLayer"]})],B.prototype,"operationalLayerType",void 0),v([C({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(t,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}},writer(t,e,r){e[r]=!t}}}})],B.prototype,"popupEnabled",void 0),v([C({type:st,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||this.raster.tileType==="Raster"}}}}})],B.prototype,"popupTemplate",void 0),v([C({readOnly:!0})],B.prototype,"defaultPopupTemplate",null),v([C({readOnly:!0,type:[_e]})],B.prototype,"fields",void 0),v([C({readOnly:!0,type:[_e]})],B.prototype,"rasterFields",null),v([C({constructOnly:!0})],B.prototype,"source",void 0),B=v([J("esri.layers.ImageryTileLayer")],B);var wa=B;export{wa as default};
