import{a as I,c as T}from"./chunk-FOE67LNX.js";import{a as H}from"./chunk-3PSFVK5X.js";import{a as L}from"./chunk-A6AUN6JK.js";import"./chunk-OC2XJJQU.js";import"./chunk-FKL22O54.js";import{m as A}from"./chunk-IOI3V6WL.js";import{a as c,b as _}from"./chunk-IAM754TS.js";import"./chunk-DLMQHZTF.js";import"./chunk-2XQT24NO.js";import"./chunk-Y4OUS3AZ.js";import"./chunk-5K5ZHVX6.js";import"./chunk-SNPAQLOL.js";import"./chunk-NIYDRLW4.js";import"./chunk-WTJO2NGM.js";import"./chunk-3BZAI7HK.js";import"./chunk-LNYBTIG7.js";import{b as V}from"./chunk-KCSRPDMA.js";import"./chunk-6T37AWU6.js";import"./chunk-4AIH3WFI.js";import"./chunk-JOGV3DWE.js";import"./chunk-SKMO433W.js";import"./chunk-2FO7ARYZ.js";import"./chunk-DJW5LMRG.js";import"./chunk-QXXXCEV5.js";import"./chunk-TCGGI7DC.js";import"./chunk-ALWV3RJ2.js";import"./chunk-7C6Z24SS.js";import{A as U}from"./chunk-5WKDXHVH.js";import"./chunk-B5LBE5HD.js";import"./chunk-F6A6XWW4.js";import"./chunk-AESEF3B2.js";import{d as Y}from"./chunk-74LTYPBC.js";import"./chunk-3BDL2KTL.js";import"./chunk-TGPGCQ44.js";import"./chunk-QPGCDGIN.js";import"./chunk-PTZYZULI.js";import"./chunk-KZKWOEFD.js";import"./chunk-LNVVFNTC.js";import"./chunk-XSTBHERR.js";import"./chunk-YQPWWSMJ.js";import"./chunk-JEIB6WNP.js";import"./chunk-6JJCXUHW.js";import"./chunk-7B2UKJ5N.js";import"./chunk-RSDQHAJX.js";import"./chunk-OGS2SUK5.js";import"./chunk-XFESK2YB.js";import"./chunk-WNSGKHQ6.js";import"./chunk-R6GE4XRP.js";import{e as b,h as F}from"./chunk-IB2IUO7T.js";import"./chunk-MS3KE2OO.js";import"./chunk-NHSDW26F.js";import"./chunk-NMAGYK3Q.js";import"./chunk-GWBRHLNH.js";import"./chunk-WKJJQIBC.js";import"./chunk-VDADRLEF.js";import"./chunk-XPRVY6JT.js";import"./chunk-7N3ZKWML.js";import"./chunk-E62WHYYG.js";import"./chunk-QDTU3MWT.js";import"./chunk-BCREO4Q5.js";import"./chunk-3SDSCSDJ.js";import"./chunk-I4M2OT5W.js";import"./chunk-NTVLK3P2.js";import"./chunk-WMQNRNIU.js";import"./chunk-HD52PWPC.js";import"./chunk-EIPVFA6F.js";import{f as C}from"./chunk-VOFKUGRY.js";import{U as X}from"./chunk-IG66NQHW.js";import"./chunk-ARRCN5K3.js";import"./chunk-5TW726OD.js";import"./chunk-VGD3XLDH.js";import"./chunk-LB5YQINJ.js";import"./chunk-EKMHQEJY.js";import"./chunk-VACZNAP3.js";import"./chunk-JKNCWG7E.js";import"./chunk-F7VRLFCB.js";import"./chunk-7IPIJKWU.js";import"./chunk-7R33MKVL.js";import"./chunk-ISSJ3A6Y.js";import"./chunk-VDKRSX77.js";import"./chunk-WUA6PW3I.js";import"./chunk-E57FTRWF.js";import"./chunk-U4J5SECU.js";import"./chunk-7EG726PT.js";import{L as W,d as a}from"./chunk-C7INQGWT.js";import{H as O}from"./chunk-WMHJC7XF.js";import"./chunk-NJEWDTYF.js";import"./chunk-N3SDOFND.js";import"./chunk-OVHPPCBL.js";import"./chunk-FNXQZPHT.js";import"./chunk-3TQOUBNU.js";import"./chunk-D2LVMNOU.js";import"./chunk-SNFOAZZQ.js";import{a as o}from"./chunk-QGVBCWUY.js";import{r as D}from"./chunk-HHDFN2GK.js";import"./chunk-47GHT6OF.js";import{f as z}from"./chunk-VTHXE323.js";var s=class extends W{constructor(e){super(e),this.options=null}destroy(){this._set("options",null)}get grid(){return this.view.grid}get effectiveViewRotation(){return this.grid?.rotateWithMap?0:C(this.view.rotation??0)}get gridRotation(){return C(this.grid?.rotation??0)}get gridCenter(){let{spatialReference:e,grid:r}=this;if(!r||!e||!b(r.center.spatialReference,e))return null;try{let t=F(r.center,e),i=e.isWrappable&&this.view?.center!=null?Y(t.x,this.view.center.x,e):t.x;return c(i,t.y,t.z)}catch(t){return D.getLogger(this).errorOnce("Grid Snapping - Failed to project grid center.",t),null}}get offsetScaleFactor(){let{pixelsPerStride:e,grid:r}=this;if(!r||!e)return 1;let{majorLineInterval:t,dynamicScaling:i}=r;return t<1?null:I(t,e,i)}get spatialReference(){return this.view.spatialReference}get gridMetersPerStride(){let{grid:e}=this;return e?X(e.spacing,e.units,"meters"):null}get viewMetersPerPixel(){let{viewMetersPerSRUnit:e}=this;return e==null?null:e*V(this.view.scale,this.view.spatialReference)}get viewMetersPerSRUnit(){let{spatialReference:e}=this.view;return this.gridCenter?T(this.gridCenter[0],this.gridCenter[1],e):null}get pixelsPerStride(){let{gridMetersPerStride:e,viewMetersPerPixel:r}=this;return r&&e?e/r:null}get updating(){return this.grid!=null&&this.spatialReference!=null&&this.viewMetersPerSRUnit==null}fetchCandidates(e,r,t){return z(this,null,function*(){let{options:i,view:n}=this;if(!i?.effectiveGridEnabled||!n.grid||t.feature?.attributes&&A in t.feature.attributes)return[];let l=t.coordinateHelper.arrayToPoint(e),p=i.distance*(t.pointer==="touch"?i.touchSensitivityMultiplier:1);return this.fetchCandidatesSync(l,p)})}fetchCandidatesSync(e,r){let t=[],{grid:i,effectiveViewRotation:n,gridRotation:l,gridCenter:p,viewMetersPerPixel:m,viewMetersPerSRUnit:f,offsetScaleFactor:S,spatialReference:g,gridMetersPerStride:E,pixelsPerStride:G}=this;if(!(i&&m&&f&&p&&g&&S&&E&&G)||!i.dynamicScaling&&G<5||!b(e.spatialReference,g))return t;let P=F(e,g),q=c(P.x,P.y,P.z),u=h(q,-l,p,-n),w=E/f*S,d=K(u,w,p),{shouldSnapX:v,shouldSnapY:y}=N(d,u,r,m,f);if(!v&&!y)return[];let B=c((v?d:u)[0],(y?d:u)[1]),R=h(B,l,p,n),j=h(d,l,p,n);if(y){let M=k(d,u,w,"y"),x=h(M,l,p,n);t.push(new L({lineStart:j,lineEnd:x,targetPoint:R,isDraped:!1}))}if(v){let M=k(d,u,w,"x"),x=h(M,l,p,n);t.push(new L({lineStart:j,lineEnd:x,targetPoint:R,isDraped:!1}))}return v&&y&&t.push(new H(R,t[0],t[1],!1)),t}};o([a({constructOnly:!0})],s.prototype,"view",void 0),o([a()],s.prototype,"options",void 0),o([a()],s.prototype,"grid",null),o([a()],s.prototype,"effectiveViewRotation",null),o([a()],s.prototype,"gridRotation",null),o([a()],s.prototype,"gridCenter",null),o([a()],s.prototype,"offsetScaleFactor",null),o([a()],s.prototype,"spatialReference",null),o([a()],s.prototype,"gridMetersPerStride",null),o([a()],s.prototype,"viewMetersPerPixel",null),o([a()],s.prototype,"viewMetersPerSRUnit",null),o([a()],s.prototype,"pixelsPerStride",null),o([a()],s.prototype,"updating",null),s=o([O("esri.views.interactive.snapping.GridSnappingEngine")],s);var h=(e,r,t,i)=>{let n=_(e[0],e[1],e[2]);return U(n,U(n,n,t,r),t,i)},K=(e,r,t)=>{let i=(e[0]-t[0])/r,n=(e[1]-t[1])/r,l=Math.trunc(i),p=Math.trunc(n),m=Math.round(i%1),f=Math.round(n%1),S=t[0]+(l+m)*r,g=t[1]+(p+f)*r;return c(S,g)},N=(e,r,t,i,n)=>{if(i<=0)return{shouldSnapX:!1,shouldSnapY:!1};let l=(e[0]-r[0])/i,p=(e[1]-r[1])/i;return{shouldSnapX:Math.abs(l*n)<t,shouldSnapY:Math.abs(p*n)<t}},k=(e,r,t,i)=>{if(i==="y"){let l=r[0]>e[0]?1:-1;return c(e[0]+t*l,e[1])}let n=r[1]>e[1]?1:-1;return c(e[0],e[1]+t*n)};export{s as GridSnappingEngine};
