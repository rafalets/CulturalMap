import{a as Z}from"./chunk-EG4E2T2R.js";import{a as X}from"./chunk-J3BDQLVD.js";import{i as U,j as R}from"./chunk-QXXXCEV5.js";import{a as S}from"./chunk-WAGBL553.js";import{a as H}from"./chunk-WKJJQIBC.js";import{a as G}from"./chunk-VDADRLEF.js";import{a as V,s as J}from"./chunk-3SDSCSDJ.js";import{L as W,d as v,v as D}from"./chunk-C7INQGWT.js";import{H as O,c as L}from"./chunk-WMHJC7XF.js";import{b as Y}from"./chunk-NJEWDTYF.js";import{A as B,K as j,N as Q,i as K,k as N,t as z,z as M}from"./chunk-D2LVMNOU.js";import{a as y}from"./chunk-QGVBCWUY.js";var A=class{constructor(e,t){this.item=e,this.controller=t,this.promise=null}},b=class{constructor(e){this._schedule=null,this._task=null,this._deferreds=new S,this._controllers=new S,this._processingItems=new S,this._pausedSignal=H(!1),this.concurrency=1,e.concurrency&&(this.concurrency=e.concurrency),this._queue=new G(e.peeker),this.process=e.process;let t=e.scheduler;e.priority&&t&&(this._task=t.registerTask(e.priority,this))}destroy(){this.clear(),this._schedule=N(this._schedule),this._task=N(this._task)}get updating(){return!!this._task?.updating||this.running}get length(){return this._processingItems.size+this._queue.length}abort(e){let t=this._controllers.get(e);t&&t.abort()}clear(){this._queue.clear();let e=[];this._controllers.forEach(t=>e.push(t)),this._controllers.clear(),e.forEach(t=>t.abort()),this._processingItems.clear(),this._cancelNext()}forEach(e){this._deferreds.forEach((t,i)=>e(i))}get(e){let t=this._deferreds.get(e);return t?t.promise:void 0}isOngoing(e){return this._processingItems.has(e)}has(e){return this._deferreds.has(e)}pause(){this._pausedSignal.value||(this._pausedSignal.value=!0,this._cancelNext())}push(e,t){let i=this.get(e);if(i)return i;let s=new AbortController,r=null;t&&(r=M(t,()=>s.abort()));let n=()=>{let a=this._processingItems.get(e);a&&a.controller.abort(),h(),c.reject(z())},h=()=>{P.remove(),r?.remove(),this._removeItem(e),this._queue.remove(e),this._scheduleNext()},P=B(s.signal,n),c=Q();return this._deferreds.set(e,c),this._controllers.set(e,s),c.promise.then(h,h),this._queue.push(e),this._scheduleNext(),c.promise}last(){return this._queue.last()}lastPromise(){let e=this.last();return e?this.get(e):null}peek(){return this._queue.peek()}popLast(){let e=this._queue.popLast();return e&&(this._deferreds.get(e)?.reject(z()),this._removeItem(e)),e}reset(){let e=Array.from(this._processingItems.values());this._processingItems.clear();for(let t of e)this._queue.push(t.item),t.controller.abort();this._scheduleNext()}resume(){this._pausedSignal.value&&(this._pausedSignal.value=!1,this._scheduleNext())}takeAll(){let e=[];for(;this._queue.length;)e.push(this._queue.pop());return this.clear(),e}get running(){return!this._pausedSignal.value&&this._queue.length>0&&this._processingItems.size<this.concurrency}runTask(e){for(;!e.done&&this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop()),e.madeProgress()}_removeItem(e){this._deferreds.delete(e),this._controllers.delete(e),this._processingItems.delete(e)}_scheduleNext(){this._task||this._pausedSignal.value||this._schedule||(this._schedule=Y(()=>{this._schedule=null,this._next()}))}_next(){for(;this._queue.length>0&&this._processingItems.size<this.concurrency;)this._process(this._queue.pop())}_cancelNext(){this._schedule&&(this._schedule.remove(),this._schedule=null)}_processResult(e,t){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).resolve(t))}_processError(e,t){this._canProcessFulfillment(e)&&(this._scheduleNext(),this._deferreds.get(e.item).reject(t))}_canProcessFulfillment(e){return!!this._deferreds.get(e.item)&&this._processingItems.get(e.item)===e}_process(e){if(e==null)return;let t,i=new AbortController,s=new A(e,i);this._processingItems.set(e,s);try{t=this.process(e,i.signal)}catch(r){this._processError(s,r)}j(t)?(s.promise=t,t.then(r=>this._processResult(s,r),r=>this._processError(s,r))):this._processResult(s,t)}get test(){}};var $=[0,0],p=class extends W{constructor(o){super(o),this._keyToItem=new Map,this._tilesByScale=new Map,this.concurrency=6}initialize(){let{concurrency:o,process:e,scheduler:t,priority:i}=this;this._queue=new b({concurrency:o,scheduler:t,priority:i,process:(s,r)=>{let n=this._keyToItem.get(s);return e(n,{signal:r})},peeker:s=>this._peek(s)})}destroy(){this.clear(),this._queue=K(this._queue)}get length(){return this._queue?this._queue.length:0}abort(o){let e=typeof o=="string"?o:o.id;this._queue.abort(e)}clear(){this._queue.clear(),this._keyToItem.clear(),this._tilesByScale.clear()}has(o){return typeof o=="string"?this._keyToItem.has(o):this._keyToItem.has(o.id)}pause(){this._queue.pause()}push(o){let e=o.key.id;if(this._queue.has(e))return this._queue.get(e);let t=this._queue.push(e),i=this.tileInfoView.getTileScale(o.key),s=L(this._tilesByScale,i,()=>new Set),r=()=>{s.delete(o.key),s.size===0&&this._tilesByScale.delete(i),this._keyToItem.delete(e)};return s.add(o.key),this._keyToItem.set(e,o),t.then(r,r),t}reset(){this._queue.reset()}resume(){this._queue.resume()}_peek(o){if(!this.state)return o.values().next().value;let e=new Set;for(let r of o)e.add(this._keyToItem.get(r).key);let t=this.state.scale,i,s=Number.POSITIVE_INFINITY;for(let[r,n]of this._tilesByScale)if(D(n,h=>e.has(h))){let h=Math.abs(r-t);h<s&&(i=n,s=h)}return this._getClosestTileKey(i,o).id}_getClosestTileKey(o,e){let t=this.tileInfoView,i=this.state.center,s,r=Number.POSITIVE_INFINITY;for(let n of o)if(e.has(n.id)){t.getTileCoords($,n);let h=U($,i);h<r&&(r=h,s=n)}return s}};y([v({constructOnly:!0})],p.prototype,"concurrency",void 0),y([v({constructOnly:!0})],p.prototype,"priority",void 0),y([v({constructOnly:!0})],p.prototype,"process",void 0),y([v({constructOnly:!0})],p.prototype,"scheduler",void 0),y([v()],p.prototype,"state",void 0),y([v({constructOnly:!0})],p.prototype,"tileInfoView",void 0),p=y([O("esri.views.2d.tiling.TileQueue")],p);var Te=p;var q=class{constructor(e,t,i){this.maxSize=e,this._tileInfoView=t,this._removedFunc=i,this._tilePerId=new Map,this._tileKeysPerLevel=[]}clear(){this._tilePerId.clear(),this._tileKeysPerLevel=[]}has(e){return this._tilePerId.has(e)}get(e){return this._tilePerId.get(e)}pop(e){let t=this._tilePerId.get(e);if(!t)return;let i=t.key.level,s=this._tileKeysPerLevel[i];ee(this._tilePerId,e);for(let r=0;r<s.length;r++)if(s[r].id===e){s.splice(r,1);break}return t.visible=!0,t}add(e){e.visible=!1;let t=e.key,i=t.id;if(this._tilePerId.has(i))return;this._tilePerId.set(i,e);let s=t.level;this._tileKeysPerLevel[s]||(this._tileKeysPerLevel[s]=[]),this._tileKeysPerLevel[s].push(t)}prune(e,t,i){let s=this._tilePerId.size;if(s<=this.maxSize)return;let r=this._tileKeysPerLevel.length-1;for(;s>this.maxSize&&r>=0;)r!==e&&(s=this._pruneAroundCenterTile(s,t,i,r)),r--;s>this.maxSize&&(s=this._pruneAroundCenterTile(s,t,i,e))}_pruneAroundCenterTile(e,t,i,s){let r=this._tileKeysPerLevel[s];if(!r||r.length===0)return e;let{size:n,origin:h}=this._tileInfoView.tileInfo,P=i*n[0],c=i*n[1],a=[0,0],T=[0,0];for(r.sort((f,m)=>(a[0]=h.x+P*(f.col+.5),a[1]=h.y-c*(f.row+.5),T[0]=h.x+P*(m.col+.5),T[1]=h.y-c*(m.row+.5),R(a,t)-R(T,t)));r.length>0;){let f=r.pop();if(this._removeTile(f.id),--e===this.maxSize)break}return e}_removeTile(e){let t=this._tilePerId.get(e);this._removedFunc&&t&&this._removedFunc(t),ee(this._tilePerId,e)}};function ee(o,e){o.delete(e)}var k=new X(0,0,0,0),d=new Map,x=[],E=[],te=class{constructor(e){this._previousScale=Number.POSITIVE_INFINITY,this.cachePolicy="keep",this.coveragePolicy="closest",this.resampling=!0,this.tileIndex=new Map,this.tiles=[],this.buffer=192,this.acquireTile=e.acquireTile,this.releaseTile=e.releaseTile,this.tileInfoView=e.tileInfoView,e.resampling!=null&&(this.resampling=e.resampling),e.cachePolicy&&(this.cachePolicy=e.cachePolicy),e.coveragePolicy&&(this.coveragePolicy=e.coveragePolicy),e.buffer!=null&&(this.buffer=e.buffer),e.cacheSize&&(this._tileCache=new q(e.cacheSize,this.tileInfoView,t=>{this.releaseTile(t)}))}destroy(){this.tileIndex.clear()}update(e){let{resampling:t,tileIndex:i}=this,{scale:s,center:r,resolution:n}=e.state,{minScale:h,maxScale:P}=this.tileInfoView,c=!e.stationary&&s>this._previousScale;if(this._previousScale=s,!t&&(s>h||s<P))return this.tiles.length=0,void this.clear();let a=this.tileInfoView.getTileCoverage(e.state,this.buffer,this.resampling,this.coveragePolicy);if(!a)return this.tiles.length=0,void this.clear();let{spans:T,lodInfo:f}=a,{level:m}=f;this.tiles.length=0,i.forEach(l=>l.visible=!0);let F=0,C=0;if(T.length>0)for(let{row:l,colFrom:I,colTo:w}of T)for(let g=I;g<=w;g++){F++;let u=k.set(m,l,f.normalizeCol(g),f.getWorldForColumn(g)).id,_=i.get(u);if(_)_.isReady?(d.set(u,_),C++):c||this._addParentTile(u,d);else{if(this._tileCache?.has(u)){if(_=this._tileCache.pop(u),this.tileIndex.set(u,_),_.isReady){d.set(u,_),C++;continue}}else _=this.acquireTile(k),this.tileIndex.set(u,_);c||this._addParentTile(u,d)}}let se=C===F;for(let[l,I]of i){if(d.has(l))continue;k.set(l);let w=this.tileInfoView.intersects(a,k),g=this.cachePolicy==="purge"?k.level!==m:k.level>m;!w||!c&&se?!g&&w||x.push(I):I.isReady?g&&this.cachePolicy==="purge"&&this._hasReadyAncestor(k,m)?x.push(I):E.push(I):g&&x.push(I)}for(let l of E)l.isReady&&d.set(l.key.id,l);for(let l of x)this._tileCache?this._tileCache.add(l):this.releaseTile(l),i.delete(l.key.id);for(let l of d.values())this.tiles.push(l);for(let l of i.values())d.has(l.key.id)||(l.visible=!1);this._tileCache?.prune(m,r,n),Z.pool.release(a),E.length=0,x.length=0,d.clear()}clear(){let{tileIndex:e}=this;for(let t of e.values())this.releaseTile(t);e.clear()}refresh(e){for(let t of this.tileIndex.values())e(t);this._tileCache?.clear()}updateCacheSize(e){this._tileCache&&(this._tileCache.maxSize=e)}_addParentTile(e,t){let i=e,s=null;for(;i=this.tileInfoView.getTileParentId(i),i;)if(this.tileIndex.has(i)){if(s=this.tileIndex.get(i),s?.isReady){t.has(s.key.id)||t.set(s.key.id,s);break}}else if(this._tileCache?.has(i)&&(s=this._tileCache.pop(i),this.tileIndex.set(i,s),s?.isReady)){t.has(s.key.id)||t.set(s.key.id,s);break}}_hasReadyAncestor(e,t){let i=V();this.tileInfoView.getTileBounds(i,e,!0);for(let s of this.tileIndex.values())if(s.isReady&&s.key.level>=t&&s.key.level<e.level){let r=V();if(this.tileInfoView.getTileBounds(r,s.key,!0),J(r,i))return!0}return!1}};export{Te as a,te as b};
