import{a as T,b as D}from"./chunk-KR22AETZ.js";import{a as h}from"./chunk-22L5KIE6.js";import"./chunk-7YU5I7BM.js";import"./chunk-HBZAOVHW.js";import"./chunk-Y7MZCJ2F.js";import{a as F,b as N}from"./chunk-446CI6X5.js";import"./chunk-SOFEQ75M.js";import"./chunk-TKZJUAKL.js";import"./chunk-NPTPEVAF.js";import"./chunk-ZNPIBNGZ.js";import"./chunk-32IGITEL.js";import"./chunk-K4BZCJ7U.js";import"./chunk-OI2D6VTT.js";import"./chunk-XIZXEWWA.js";import"./chunk-EDAGF7R6.js";import"./chunk-6EWMYOA7.js";import"./chunk-IDLNQPT7.js";import"./chunk-VRPEURU5.js";import"./chunk-B57IWIA2.js";import"./chunk-SKMO433W.js";import"./chunk-2FO7ARYZ.js";import"./chunk-VLECDDLP.js";import"./chunk-HE4N5PN6.js";import"./chunk-ALCGI4NA.js";import"./chunk-NOQEJXLK.js";import"./chunk-DJW5LMRG.js";import"./chunk-QXXXCEV5.js";import"./chunk-QMKRRCM3.js";import"./chunk-TCGGI7DC.js";import"./chunk-ALWV3RJ2.js";import"./chunk-7C6Z24SS.js";import"./chunk-5WKDXHVH.js";import{a as g}from"./chunk-JEGXFID4.js";import"./chunk-F6A6XWW4.js";import"./chunk-AESEF3B2.js";import{e as M}from"./chunk-BBB7KLHV.js";import{a as d}from"./chunk-PWU2QHPV.js";import"./chunk-WUJRCGDY.js";import"./chunk-QPGCDGIN.js";import"./chunk-PTZYZULI.js";import"./chunk-KZKWOEFD.js";import"./chunk-LNVVFNTC.js";import"./chunk-CVRJ6GOM.js";import"./chunk-7B2UKJ5N.js";import"./chunk-RSDQHAJX.js";import"./chunk-JR22Z7I2.js";import"./chunk-3QNSJ5HY.js";import"./chunk-UNVICPIE.js";import"./chunk-BGICKEJR.js";import"./chunk-TRZXSDYA.js";import"./chunk-OGS2SUK5.js";import"./chunk-TVHRLNTK.js";import"./chunk-JA3EMS2I.js";import"./chunk-HKHTIKVW.js";import"./chunk-XFESK2YB.js";import"./chunk-IJBTA53P.js";import"./chunk-ZHUXSQTN.js";import"./chunk-YLZWDFCJ.js";import"./chunk-TLMADEUL.js";import"./chunk-WNSGKHQ6.js";import"./chunk-J5MXC6AL.js";import"./chunk-OLOKUDVI.js";import"./chunk-RJWOVI3M.js";import"./chunk-AZS4Q4RE.js";import"./chunk-QEBUS3TL.js";import"./chunk-IB2IUO7T.js";import"./chunk-MS3KE2OO.js";import"./chunk-NHSDW26F.js";import"./chunk-NMAGYK3Q.js";import"./chunk-GWBRHLNH.js";import"./chunk-J372WZPB.js";import"./chunk-6XFS4U2F.js";import"./chunk-XPRVY6JT.js";import"./chunk-7N3ZKWML.js";import"./chunk-E62WHYYG.js";import"./chunk-QDTU3MWT.js";import"./chunk-BCREO4Q5.js";import"./chunk-3SDSCSDJ.js";import{j as S}from"./chunk-I4M2OT5W.js";import"./chunk-NTVLK3P2.js";import{a as y}from"./chunk-WMQNRNIU.js";import"./chunk-HD52PWPC.js";import"./chunk-EIPVFA6F.js";import"./chunk-VOFKUGRY.js";import"./chunk-IG66NQHW.js";import"./chunk-ARRCN5K3.js";import"./chunk-5TW726OD.js";import"./chunk-VGD3XLDH.js";import"./chunk-LB5YQINJ.js";import"./chunk-EKMHQEJY.js";import"./chunk-VACZNAP3.js";import"./chunk-JKNCWG7E.js";import"./chunk-KTE5HCNJ.js";import"./chunk-F7VRLFCB.js";import"./chunk-7IPIJKWU.js";import"./chunk-7R33MKVL.js";import"./chunk-ISSJ3A6Y.js";import"./chunk-VDKRSX77.js";import"./chunk-WUA6PW3I.js";import"./chunk-E57FTRWF.js";import"./chunk-U4J5SECU.js";import"./chunk-7EG726PT.js";import"./chunk-C7INQGWT.js";import{c as l}from"./chunk-WMHJC7XF.js";import"./chunk-NJEWDTYF.js";import"./chunk-N3SDOFND.js";import"./chunk-OVHPPCBL.js";import"./chunk-FNXQZPHT.js";import"./chunk-3TQOUBNU.js";import"./chunk-D2LVMNOU.js";import"./chunk-SNFOAZZQ.js";import"./chunk-QGVBCWUY.js";import{r as E}from"./chunk-HHDFN2GK.js";import"./chunk-47GHT6OF.js";import"./chunk-VTHXE323.js";var O=()=>E.getLogger("esri.rest.support.meshFeatureSet");function B(e,s,t){let r=t.features;t.features=[],delete t.geometryType;let o=g.fromJSON(t);if(o.geometryType="mesh",!t.assetMaps)return o;let n=P(s,t.assetMaps),u=e.sourceSpatialReference??y.WGS84,c=t.globalIdFieldName,{outFields:a}=e,m=a!=null&&a.length>0?w(a.includes("*")?null:new Set(a)):()=>({});for(let i of r){let f=L(i,c,u,s,n);o.features.push(new d({geometry:f,attributes:m(i)}))}return o}function w(e){return({attributes:s})=>{if(!s)return{};if(!e)return s;for(let t in s)e.has(t)||delete s[t];return s}}function L(e,s,t,r,o){let n=e.attributes[s],u=o.get(n);if(u==null||!e.geometry)return null;let c=T(e.attributes,t,r.transformFieldRoles),a=S.fromJSON(e.geometry);a.spatialReference=t;let m=D(e.attributes,r.transformFieldRoles),i=t.isGeographic?"local":"georeferenced",f=b(u);return f?h.createWithExternalSource(c,f,{extent:a,transform:m,vertexSpace:i,unitConversionDisabled:!0}):h.createIncomplete(c,{extent:a,transform:m,vertexSpace:i})}var p;function P(e,s){let t=new Map;for(let r of s){let o=r.parentGlobalId;if(o==null)continue;let n=r.assetName,u=r.assetType,c=r.assetHash,a=r.assetURL,m=r.conversionStatus,i=r.seqNo,f=M(u,e.supportedFormats);if(!f){O().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${u}, but it does not list it as a supported type`);continue}let I=l(t,o,()=>({files:new Map}));l(I.files,n,()=>({name:n,type:u,mimeType:f,status:v(m),parts:[]})).parts[i]={hash:c,url:a}}return t}function b(e){let s=Array.from(e.files.values()),t=new Array;for(let r of s){if(r.status!==p.COMPLETED)return null;let o=new Array;for(let n of r.parts){if(!n)return null;o.push(new N(n.url,n.hash))}t.push(new F(r.name,r.mimeType,o))}return t}function v(e){switch(e){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}(function(e){e[e.FAILED=0]="FAILED",e[e.PENDING=1]="PENDING",e[e.COMPLETED=2]="COMPLETED"})(p||(p={}));export{P as assetMapFromAssetMapsJSON,L as extractMesh,B as meshFeatureSetFromJSON};
