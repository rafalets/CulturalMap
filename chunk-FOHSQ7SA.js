import{a as o}from"./chunk-2ZONGK7Q.js";import{a as i,c as y}from"./chunk-I3S5R6UI.js";import{f as l}from"./chunk-VTHXE323.js";var m=class{constructor(){this._serviceMetadatas=new Map,this._itemDatas=new Map}fetchServiceMetadata(e,a){return l(this,null,function*(){let r=this._serviceMetadatas.get(e);if(r)return r;let s=yield i(e,a);return this._serviceMetadatas.set(e,s),s})}fetchItemData(e){return l(this,null,function*(){let{id:a}=e;if(!a)return null;let{_itemDatas:r}=this;if(r.has(a))return r.get(a);let s=yield e.fetchData();return r.set(a,s),s})}fetchCustomParameters(e,a){return l(this,null,function*(){let r=yield this.fetchItemData(e);return r&&typeof r=="object"&&(a?a(r):r.customParameters)||null})}};function u(t){let e={id:t.id,name:t.name},a=y(t.type);return a!=="FeatureLayer"&&(e.layerType=a),e}function g(t,e,a){return l(this,null,function*(){if(t?.layers==null||t?.tables==null){let r=yield a.fetchServiceMetadata(e,{customParameters:c(t)?.customParameters});(t=t||{}).layers=t.layers||r?.layers?.map(u),t.tables=t.tables||r?.tables?.map(u)}return t})}function c(t){if(!t)return null;let{layers:e,tables:a}=t;return e?.length?e[0]:a?.length?a[0]:null}function S(t,e){return e==null?null:[...t.layers||[],...t.tables||[]].find(a=>a.id===e)}function T(t,e){return[...t.layers||[],...t.tables||[]].filter(({layerType:a})=>a?e.includes(a):e.includes("ArcGISFeatureLayer"))}function I(t){return(t?.layers?.length??0)+(t?.tables?.length??0)}function v(t){switch(t){case"catalog":return["CatalogLayer"];case"feature":return["ArcGISFeatureLayer"];case"oriented-imagery":return["OrientedImageryLayer"];case"subtype-group":return["SubtypeGroupLayer","SubtypeGroupTable"]}return null}function w(t){switch(t){case"CatalogLayer":return"CatalogLayer";case"OrientedImageryLayer":return"OrientedImageryLayer";case"SubtypeGroupLayer":case"SubtypeGroupTable":return"SubtypeGroupLayer"}return"FeatureLayer"}function M(t,e,a){return l(this,null,function*(){if(!t?.url)return e??{};if(e??={},!e.layers){let n=yield a.fetchServiceMetadata(t.url);e.layers=n.layers?.map(u)}let{serverUrl:r,portalItem:s}=yield o(t.url,{sceneLayerItem:t,customParameters:c(e)?.customParameters}).catch(()=>({serverUrl:null,portalItem:null}));if(r==null)return e.tables=[],e;if(!e.tables&&s){let n=yield s.fetchData().catch(()=>null);if(n?.tables)e.tables=n.tables.map(u);else{let f=yield a.fetchServiceMetadata(r,{customParameters:c(n)?.customParameters}).catch(()=>null);e.tables=f?.tables?.map(u)}}if(e.tables)for(let n of e.tables)n.url=`${r}/${n.id}`;return e})}export{m as a,u as b,g as c,c as d,S as e,T as f,I as g,v as h,w as i,M as j};
